<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_benchmark-3_2test_l_o_g_8_c" kind="file" language="C++">
    <compoundname>testLOG.C</compoundname>
    <includes local="no">TCanvas.h</includes>
    <includes local="no">TH1F.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/testLOG.C</label>
        <link refid="_benchmark-3_2test_l_o_g_8_c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TCanvas.h</label>
      </node>
      <node id="3">
        <label>TH1F.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_benchmark-3_2test_l_o_g_8_c_1ad072fe2ddd7514756b0f2b8cb7770f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int testLOG</definition>
        <argsstring>()</argsstring>
        <name>testLOG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/testLOG.C" line="4" column="5" bodyfile="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/testLOG.C" bodystart="4" bodyend="34"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;TCanvas.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH1F.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>testLOG()<sp/>{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dbl_min<sp/>=<sp/>1e-9;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dbl_max<sp/>=<sp/>1e+8;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int_nbinsLog<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>min_log<sp/>=<sp/>TMath::Log10(dbl_min);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>max_log<sp/>=<sp/>TMath::Log10(dbl_max);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>bin_width<sp/>=<sp/>(<sp/>max_log<sp/>-<sp/>min_log)<sp/>/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>int_nbinsLog;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>logbins[int_nbinsLog<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>logbins[0]<sp/>=<sp/>dbl_min;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>1;<sp/>k<sp/>&lt;=<sp/>int_nbinsLog;<sp/>++k)</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>logbins[k]<sp/>=<sp/>dbl_min<sp/>+<sp/>TMath::Power(10,<sp/>min_log<sp/>+<sp/>k<sp/>*<sp/>bin_width);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_CanvaName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_histoName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;test&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>str_drawOption<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;hist<sp/>e&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>TCanvas*<sp/>canvas<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCanvas(str_CanvaName.c_str(),str_CanvaName.c_str());</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetLogx();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetLogy();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>TH1D*<sp/>histo<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH1D();</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>histo-&gt;SetBins(int_nbinsLog,<sp/>logbins);<sp/></highlight><highlight class="comment">//<sp/>Logarithmic<sp/>binning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>histo-&gt;SetNameTitle(str_CanvaName.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=1;<sp/>j<sp/>&lt;<sp/>histo-&gt;GetNbinsX();<sp/>++j)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>histo-&gt;Fill(TMath::Power(10,<sp/>j*17./1000.),<sp/>j);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>histo-&gt;Draw(str_drawOption.c_str());</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/testLOG.C"/>
  </compounddef>
</doxygen>
