<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_g4-_neutron_transport_2src_2lattice_map_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Lattice<sp/>Map<sp/>Construction<sp/>and<sp/>Syntax</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Copyright<sp/>2021<sp/>Transmutex<sp/>SA<sp/>--<sp/>all<sp/>rights<sp/>reserved</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Author<sp/>:<sp/>Thomas<sp/>Guilbaud<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">Date<sp/><sp/><sp/>:<sp/>4th<sp/>May<sp/>2021<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">Updated:<sp/>9th<sp/>June<sp/>2021</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Structure</highlight></codeline>
<codeline><highlight class="normal">###<sp/>General<sp/>Use</highlight></codeline>
<codeline><highlight class="normal">Each<sp/>lattice<sp/>must<sp/>be<sp/>written<sp/>in<sp/>square<sp/>shape<sp/>map.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>first<sp/>row<sp/>must<sp/>include<sp/>the<sp/>lattice<sp/>type.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>second<sp/>row<sp/>must<sp/>include<sp/>x<sp/>and<sp/>y<sp/>limits.<sp/>For<sp/>example,<sp/>a<sp/>symmetric<sp/>lattice<sp/>centered<sp/>to<sp/>(0,0)<sp/>could<sp/>look<sp/>like<sp/>this:<sp/>`-2<sp/>2<sp/><sp/><sp/>-2<sp/>2`.<sp/>It<sp/>is<sp/>also<sp/>possible<sp/>to<sp/>include<sp/>the<sp/>pitch<sp/>of<sp/>the<sp/>lattice<sp/>by<sp/>adding<sp/>a<sp/>number<sp/>and<sp/>its<sp/>unit<sp/>(ex:<sp/>`-2<sp/>5<sp/><sp/>-3<sp/>3<sp/><sp/>5<sp/>cm`).<sp/>It<sp/>is<sp/>important<sp/>to<sp/>separate<sp/>the<sp/>elements<sp/>by<sp/>at<sp/>least<sp/>one<sp/>space.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>next<sp/>rows<sp/>includes<sp/>the<sp/>structure<sp/>of<sp/>the<sp/>lattice.<sp/>Each<sp/>assembly<sp/>must<sp/>be<sp/>separated<sp/>by<sp/>at<sp/>least<sp/>one<sp/>space.</highlight></codeline>
<codeline><highlight class="normal">The<sp/>number<sp/>of<sp/>rows<sp/>and<sp/>columns<sp/>must<sp/>corresponds<sp/>to<sp/>the<sp/>lattice<sp/>limits<sp/>given<sp/>in<sp/>the<sp/>first<sp/>line.<sp/>The<sp/>example<sp/>above<sp/>must<sp/>have<sp/>a<sp/>square<sp/>of<sp/>5<sp/>rows<sp/>and<sp/>5<sp/>columns.</highlight></codeline>
<codeline><highlight class="normal">To<sp/>fill<sp/>the<sp/>gaps,<sp/>one<sp/>can<sp/>use<sp/>the<sp/>number<sp/>`0`<sp/>and<sp/>no<sp/>assembly<sp/>will<sp/>be<sp/>placed.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>help<sp/>writing<sp/>an<sp/>hexagonal<sp/>shape<sp/>lattice,<sp/>one<sp/>can<sp/>place<sp/>spaces<sp/>before<sp/>the<sp/>rows<sp/>(see<sp/>the<sp/>example<sp/>below).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Special<sp/>Use</highlight></codeline>
<codeline><highlight class="normal">With<sp/>TMXLattice,<sp/>it<sp/>is<sp/>possible<sp/>to<sp/>add<sp/>a<sp/>special<sp/>value<sp/>to<sp/>the<sp/>assembly<sp/>(`addDaughterAction`).<sp/>For<sp/>example,<sp/>if<sp/>an<sp/>element<sp/>in<sp/>the<sp/>lattice<sp/>map<sp/>is<sp/>written<sp/>like<sp/>`FA:100`,<sp/>the<sp/>callback<sp/>function<sp/>given<sp/>with<sp/>`addDaughterAction`<sp/>will<sp/>be<sp/>called<sp/>and<sp/>the<sp/>value<sp/>`100`<sp/>will<sp/>be<sp/>pass<sp/>in<sp/>this<sp/>callback<sp/>function.<sp/>It<sp/>can<sp/>be<sp/>use<sp/>for<sp/>changing<sp/>parameter<sp/>like<sp/>the<sp/>insertion<sp/>of<sp/>a<sp/>control<sp/>rod,<sp/>a<sp/>change<sp/>in<sp/>temperature,<sp/>a<sp/>new<sp/>material,<sp/>...</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>a<sp/>few<sp/>element<sp/>have<sp/>the<sp/>same<sp/>`id`,<sp/>the<sp/>same<sp/>callback<sp/>function<sp/>will<sp/>be<sp/>applied<sp/>on<sp/>each<sp/>of<sp/>these<sp/>elements.</highlight></codeline>
<codeline><highlight class="normal">If<sp/>a<sp/>few<sp/>element<sp/>have<sp/>the<sp/>same<sp/>`id`<sp/>and<sp/>a<sp/>action<sp/>parameter,<sp/>the<sp/>callback<sp/>function<sp/>will<sp/>be<sp/>called<sp/>and<sp/>it<sp/>might<sp/>create<sp/>some<sp/>confusion.<sp/>It<sp/>is<sp/>recommanded<sp/>to<sp/>apply<sp/>an<sp/>action<sp/>once<sp/>for<sp/>each<sp/>element<sp/>id<sp/>type.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Syntax</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Lattice<sp/>Type:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`Hexagonal`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`Square`</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Pitch:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`Number<sp/>Unit`</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>Units<sp/>allowed:<sp/>nm,<sp/>um,<sp/>mm,<sp/>cm,<sp/>dm,<sp/>m</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>**Important**:<sp/>if<sp/>a<sp/>pitch<sp/>is<sp/>given<sp/>in<sp/>the<sp/>map<sp/>file,<sp/>it<sp/>will<sp/>overwrite<sp/>the<sp/>value<sp/>set<sp/>in<sp/>the<sp/>code.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>With<sp/>TMXLattice:<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`0`<sp/>=<sp/>void,<sp/>no<sp/>assembly</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`anyName`<sp/>=<sp/>assembly<sp/>(use<sp/>`addDaughterVolume(&quot;anyName&quot;,<sp/>assemblyVolume)`<sp/>to<sp/>add<sp/>an<sp/>element<sp/>with<sp/>reference<sp/>_anyName_)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`anyName:number`<sp/>=<sp/>assembly<sp/>with<sp/>a<sp/>special<sp/>value.<sp/>The<sp/>`:`<sp/>must<sp/>be<sp/>used<sp/>to<sp/>separate<sp/>without<sp/>space<sp/>between<sp/>(use<sp/>`addDaughterAction(&quot;id&quot;,<sp/>std::bind(&amp;class::member,<sp/>obj,<sp/>_1))`)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>-<sp/>`//`<sp/>to<sp/>add<sp/>comments</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Simple<sp/>example:<sp/>Square<sp/>Lattice</highlight></codeline>
<codeline><highlight class="normal">This<sp/>lattice<sp/>is<sp/>made<sp/>in<sp/>a<sp/>5x5<sp/>square<sp/>with<sp/>a<sp/>pitch<sp/>of<sp/>15<sp/>mm.<sp/>The<sp/>center<sp/>of<sp/>the<sp/>lattice<sp/>is<sp/>(0,<sp/>0).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```<sp/>js</highlight></codeline>
<codeline><highlight class="normal">Square<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">-2<sp/>2<sp/><sp/><sp/>-2<sp/>2<sp/><sp/>15<sp/>mm<sp/><sp/>//<sp/>Shape<sp/>limits<sp/>and<sp/>pitch</highlight></codeline>
<codeline><highlight class="normal">0<sp/>0<sp/>0<sp/>0<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=-2<sp/>;<sp/>x=[-2;<sp/>2]</highlight></codeline>
<codeline><highlight class="normal">0<sp/>0<sp/>F<sp/>0<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=-1<sp/>;<sp/>x=[-2;<sp/>2]</highlight></codeline>
<codeline><highlight class="normal">0<sp/>F<sp/>F<sp/>F<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=<sp/>0<sp/>;<sp/>x=[-2;<sp/>2]</highlight></codeline>
<codeline><highlight class="normal">0<sp/>0<sp/>F<sp/>0<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=<sp/>1<sp/>;<sp/>x=[-2;<sp/>2]</highlight></codeline>
<codeline><highlight class="normal">0<sp/>0<sp/>0<sp/>0<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=<sp/>2<sp/>;<sp/>x=[-2;<sp/>2]</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Hexagonal<sp/>Lattice<sp/>with<sp/>numbers</highlight></codeline>
<codeline><highlight class="normal">This<sp/>lattice<sp/>is<sp/>made<sp/>in<sp/>a<sp/>5x5<sp/>square.<sp/>The<sp/>center<sp/>of<sp/>the<sp/>lattice<sp/>is<sp/>(-1,<sp/>2).<sp/>Here<sp/>one<sp/>element<sp/>has<sp/>an<sp/>action<sp/>(`F:1`).<sp/>This<sp/>action<sp/>will<sp/>be<sp/>applied<sp/>on<sp/>each<sp/>`F`<sp/>element<sp/>once.<sp/>It<sp/>is<sp/>recommended<sp/>to<sp/>write<sp/>this<sp/>action<sp/>once<sp/>to<sp/>avoid<sp/>any<sp/>error.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```<sp/>js</highlight></codeline>
<codeline><highlight class="normal">Hexagonal<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">-3<sp/>1<sp/><sp/><sp/>0<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Shape<sp/>limits<sp/><sp/></highlight></codeline>
<codeline><highlight class="normal">0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=0<sp/>;<sp/>x=[-3;<sp/>1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>F<sp/><sp/><sp/>F<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=1<sp/>;<sp/>x=[-3;<sp/>1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/>F<sp/><sp/><sp/>F:1<sp/>F<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=2<sp/>;<sp/>x=[-3;<sp/>1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/>F<sp/><sp/><sp/>F<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/><sp/><sp/>//<sp/>y=3<sp/>;<sp/>x=[-3;<sp/>1]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>0<sp/><sp/><sp/>//<sp/>y=4<sp/>;<sp/>x=[-3;<sp/>1]</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>How<sp/>to<sp/>use<sp/>TMXLattice</highlight></codeline>
<codeline><highlight class="normal">First<sp/>declare<sp/>the<sp/>TMXLattice<sp/>object<sp/>the<sp/>following<sp/>argument:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">|<sp/>Argument<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Member<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Description<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|---------------------|---------------------------------------------|-------------|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Pitch<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>`setPitch(double)`<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Set<sp/>the<sp/>picth<sp/>between<sp/>elements.<sp/>Optional<sp/>if<sp/>the<sp/>pitch<sp/>is<sp/>given<sp/>in<sp/>the<sp/>map<sp/>file<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Element<sp/>Rotation<sp/><sp/><sp/><sp/>|<sp/>`setElementRotation(G4RotationMatrix*)`<sp/><sp/><sp/><sp/><sp/>|<sp/>**Optional**<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Lattice<sp/>Map<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>`setLatticeMap(std::string<sp/>filepath)`<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Add<sp/>Daughter<sp/>Volume<sp/>|<sp/>`addDaughterVolume(&quot;id&quot;,<sp/>G4LogicalVolume*)`<sp/>|<sp/>Add<sp/>a<sp/>new<sp/>element,<sp/>`id`<sp/>must<sp/>the<sp/>same<sp/>used<sp/>in<sp/>the<sp/>lattice<sp/>map<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Add<sp/>Daughter<sp/>Action<sp/>|<sp/>`addDaughterAction(&quot;id&quot;,<sp/>std::function&lt;void(double)&gt;<sp/>action)`<sp/>|<sp/>(**Optional**)<sp/>Add<sp/>a<sp/>special<sp/>callback<sp/>function<sp/>when<sp/>an<sp/>element<sp/>is<sp/>written<sp/>with<sp/>a<sp/>number<sp/>(for<sp/>example:<sp/>FA:100)<sp/>[[1]].<sp/>Example:<sp/>`m_coreLattice-&gt;addDaughterAction(&quot;CR&quot;,<sp/>std::bind(&amp;SVBR100_FuelAssembly::placeControlRod,<sp/>m_fuelAssembly,<sp/>_1));`<sp/>from<sp/>`SVBR100_FuelAssembly.cc`<sp/>because<sp/>`placeControlRod`<sp/>is<sp/>a<sp/>member<sp/>function<sp/>of<sp/>`SVBR100_FuelAssembly`<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Mother<sp/>Volume<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>`setMotherVolume(G4LogicalVolume*)`<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>The<sp/>volume<sp/>in<sp/>which<sp/>the<sp/>element<sp/>lust<sp/>be<sp/>placed<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Element<sp/>Translation<sp/>|<sp/>`setElementTranslation(G4ThreeVector)`<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>**Optional**<sp/>|</highlight></codeline>
<codeline><highlight class="normal">|<sp/>Lattice<sp/>Placement<sp/><sp/><sp/>|<sp/>`placeLattice(bool<sp/>overlap)`<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>Build<sp/>the<sp/>lattice<sp/>|</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[1]:<sp/>https://stackoverflow.com/questions/12662891/how-can-i-pass-a-member-function-where-a-free-function-is-expected</highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/latticeMap/README.md"/>
  </compounddef>
</doxygen>
