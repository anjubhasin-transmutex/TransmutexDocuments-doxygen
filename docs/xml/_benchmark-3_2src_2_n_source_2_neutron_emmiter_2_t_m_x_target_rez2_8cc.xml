<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_benchmark-3_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_rez2_8cc" kind="file" language="C++">
    <compoundname>TMXTargetRez2.cc</compoundname>
    <includes local="yes">TMXTargetRez2.hh</includes>
    <includes local="yes">TMXNeutronSource.hh</includes>
    <includes local="yes">globals.hh</includes>
    <includes local="yes">G4SystemOfUnits.hh</includes>
    <includes local="yes">G4UnionSolid.hh</includes>
    <includes local="yes">G4Polyhedra.hh</includes>
    <includes local="yes">G4Tubs.hh</includes>
    <includes local="yes">G4VSolid.hh</includes>
    <includes local="yes">G4Box.hh</includes>
    <includes local="yes">G4Cons.hh</includes>
    <includes local="yes">G4PVPlacement.hh</includes>
    <includes local="yes">G4Colour.hh</includes>
    <includes local="yes">G4VisAttributes.hh</includes>
    <includes local="yes">G4PhysicalConstants.hh</includes>
    <includes local="no">math.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/NSource/NeutronEmmiter/TMXTargetRez2.cc</label>
        <link refid="_benchmark-3_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_rez2_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>G4Box.hh</label>
      </node>
      <node id="13">
        <label>G4Colour.hh</label>
      </node>
      <node id="11">
        <label>G4Cons.hh</label>
      </node>
      <node id="12">
        <label>G4PVPlacement.hh</label>
      </node>
      <node id="15">
        <label>G4PhysicalConstants.hh</label>
      </node>
      <node id="7">
        <label>G4Polyhedra.hh</label>
      </node>
      <node id="5">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="8">
        <label>G4Tubs.hh</label>
      </node>
      <node id="6">
        <label>G4UnionSolid.hh</label>
      </node>
      <node id="9">
        <label>G4VSolid.hh</label>
      </node>
      <node id="14">
        <label>G4VisAttributes.hh</label>
      </node>
      <node id="3">
        <label>TMXNeutronSource.hh</label>
      </node>
      <node id="2">
        <label>TMXTargetRez2.hh</label>
      </node>
      <node id="4">
        <label>globals.hh</label>
      </node>
      <node id="16">
        <label>math.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄<sp/><sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄▄<sp/><sp/>▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░░░░░░░░░░░▌▐░░░░░░░░░░▌<sp/>▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░▌<sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌▐░░▌<sp/><sp/><sp/><sp/><sp/>▐░░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀▀▀<sp/><sp/>▀▀▀▀█░█▀▀▀▀<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░▌░▌<sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▀▀▀▀▀▀▀▀▀<sp/>▐░▌░▌<sp/><sp/><sp/>▐░▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▀▀▀▀█░█▀▀▀▀<sp/>▐░█▀▀▀▀▀▀▀▀▀<sp/><sp/>▐░▌<sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌▐░▌<sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/>▐░▌▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░█▄▄▄▄▄▄▄█░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄▄▄<sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░▌<sp/>▐░▌<sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄▄▄<sp/>▐░▌<sp/>▐░▐░▌<sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▄▄▄▄▄▄▄▄▄<sp/><sp/><sp/><sp/>▐░▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/>▐░▌<sp/><sp/>▐░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/>▐░▌<sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▀▀▀▀▀▀▀▀▀█░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▀▀▀▀█░█▀▀<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░▌<sp/><sp/><sp/>▐░▌<sp/>▐░▌<sp/>▀▀▀▀▀▀▀▀▀█░▌▐░▌<sp/><sp/><sp/>▀<sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/><sp/>▐░▌░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄█░▌<sp/>▄▄▄▄▄▄▄▄▄█░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▐░▌<sp/>▄▄▄▄▄▄▄▄▄█░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄█░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▄▄▄▄▄▄▄▄▄<sp/><sp/>▐░▌<sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░▌<sp/>▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/>▐░░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀▀<sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight><highlight class="comment">//<sp/>\brief<sp/>Implementation<sp/>of<sp/>the<sp/>TMXTargetRez2<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TMXTargetRez2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Donovan<sp/>Maire,<sp/>Thomas<sp/>Frosio,<sp/>Transmutex,<sp/>30/11/2020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Class<sp/>to<sp/>manage<sp/>the<sp/>target<sp/>geometry<sp/>of<sp/>Rez<sp/>with<sp/>Be<sp/>in<sp/>Cu<sp/>cooling<sp/>body</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TMX<sp/>Class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXTargetRez2.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXNeutronSource.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GEANT4<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;globals.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4SystemOfUnits.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4UnionSolid.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Polyhedra.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Tubs.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4VSolid.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Box.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Cons.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;G4NistManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PVPlacement.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Colour.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4VisAttributes.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PhysicalConstants.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal">TMXTargetRez2::TMXTargetRez2(<ref refid="class_t_m_x_input_parameters" kindref="compound">TMXInputParameters</ref>*<sp/>parameters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>TargetAssemblyName):</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="class_t_m_x_abstract_target_assembly" kindref="compound">TMXAbstractTargetAssembly</ref>(parameters,<sp/>TargetAssemblyName)</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>createMaterial(m_p-&gt;TemperatureWorld);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>createGeometry();</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">TMXTargetRez2::~TMXTargetRez2()<sp/>{}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXTargetRez2::createMaterial(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>Kelvin_temperature)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Default<sp/>Materials</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>TMXAbstractTargetAssembly::createMaterial(Kelvin_temperature);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Copper<sp/>cladding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>G4Material*<sp/>g4_Cu<sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Cu&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_CladMaterial<sp/>=<sp/>new<sp/>G4Material(m_assemblyName<sp/>+<sp/>&quot;_Copper&quot;,g4_Cu-&gt;GetDensity(),<sp/>1,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_CladMaterial-&gt;AddMaterial(g4_Cu,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CladMaterial<sp/>=<sp/>TMXMaterial::Find(m_assemblyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Copper&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_CladMaterial<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_CladMaterial<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>(m_assemblyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Copper&quot;</highlight><highlight class="normal">,8.96*g/cm3,<sp/>2,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_CladMaterial-&gt;AddElement(290630,6915);<sp/></highlight><highlight class="comment">//<sp/>Cu-63</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_CladMaterial-&gt;AddElement(290650,3085);<sp/></highlight><highlight class="comment">//<sp/>Cu-65</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>Isotope<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Atomic<sp/>Mass<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Isotopic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>Composition<sp/><sp/><sp/><sp/>Standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Atomic<sp/>Weight<sp/><sp/><sp/><sp/><sp/>Notes<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment">//<sp/>29<sp/><sp/><sp/>Cu<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="comment">//<sp/>63<sp/><sp/><sp/><sp/><sp/>62.929<sp/>597<sp/>72(56)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.6915(15)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>63.546(3)<sp/><sp/><sp/><sp/>r</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">//<sp/>65<sp/><sp/><sp/><sp/><sp/>64.927<sp/>789<sp/>70(71)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.3085(15)<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Berylium<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TargetMaterial<sp/>=<sp/>TMXMaterial::Find(m_assemblyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Berylium&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_TargetMaterial<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TargetMaterial<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>(m_assemblyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Berylium&quot;</highlight><highlight class="normal">,1.848*g/cm3,<sp/>1,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TargetMaterial-&gt;AddElement(40090,1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Berylium<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>G4Material*<sp/>g4_be<sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Be&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_TargetMaterial<sp/>=<sp/>new<sp/>G4Material(m_assemblyName<sp/>+<sp/>&quot;_Berylium&quot;,g4_be-&gt;GetDensity(),<sp/>1,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_TargetMaterial-&gt;AddMaterial(g4_be,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>//<sp/>Material<sp/>of<sp/>coating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>G4Material*<sp/>g4_Ta<sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Ta&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_CoatingMaterial<sp/>=<sp/>new<sp/>G4Material(m_assemblyName<sp/>+<sp/>&quot;_Tantalum&quot;,g4_Ta-&gt;GetDensity(),<sp/>1,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_CoatingMaterial-&gt;AddMaterial(g4_Ta,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Berylium</highlight></codeline>
<codeline lineno="103"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>G4Material*<sp/>g4_be<sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Be&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_ReflectorMaterial<sp/>=<sp/>new<sp/>G4Material(m_assemblyName<sp/>+<sp/>&quot;_Berylium&quot;,g4_be-&gt;GetDensity(),<sp/>1,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_ReflectorMaterial-&gt;AddMaterial(g4_be,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaccum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_CladMaterial<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Galactic&quot;,<sp/>1e-30*g/cm3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_CoatingMaterial<sp/><sp/><sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Galactic&quot;,<sp/>1e-30*g/cm3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_CoolantMaterial<sp/><sp/><sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Galactic&quot;,<sp/>1e-30*g/cm3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_ReflectorMaterial<sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_Galactic&quot;,<sp/>1e-30*g/cm3);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vaccum</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CoatingMaterial<sp/>=<sp/>TMXMaterial::Find(</highlight><highlight class="stringliteral">&quot;G4_Galactic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!m_CoatingMaterial<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_CoatingMaterial<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>(</highlight><highlight class="stringliteral">&quot;G4_Galactic&quot;</highlight><highlight class="normal">,CLHEP::universe_mean_density*cm3/g,<sp/>1,<sp/>kStateGas,<sp/>Kelvin_temperature,<sp/>3.e-18*hep_pascal);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_CoatingMaterial-&gt;AddElement(10010,1);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CoolantMaterial<sp/><sp/><sp/>=<sp/>TMXMaterial::Find(</highlight><highlight class="stringliteral">&quot;G4_Galactic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>m_ReflectorMaterial<sp/>=<sp/>TMXMaterial::Find(</highlight><highlight class="stringliteral">&quot;G4_Galactic&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXTargetRez2::createGeometry()<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>method<sp/>should<sp/>be<sp/>called<sp/>in<sp/>the<sp/>constructor<sp/>after<sp/>calling<sp/>createMaterial</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Beginning<sp/>of<sp/>Target<sp/>definition&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vectorTargetThickness<sp/>=<sp/>m_p-&gt;src_slabThicknesses;<sp/></highlight><highlight class="comment">//<sp/>Thickness<sp/>of<sp/>target<sp/>slabs<sp/>in<sp/>our<sp/>experiment</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-definition<sp/>of<sp/>target<sp/>slabs<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>slabName;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>m_targetName.size()<sp/>&gt;<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Last<sp/>element<sp/>is<sp/>a<sp/>generic<sp/>name<sp/>added<sp/>by<sp/>the<sp/>constructor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slabName<sp/>=<sp/>m_targetName[m_targetName.size()-1];<sp/></highlight><highlight class="comment">//<sp/>save<sp/>generic<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetName.pop_back();}<sp/></highlight><highlight class="comment">//<sp/>remove<sp/>generic<sp/>name<sp/>from<sp/>the<sp/>vector<sp/>of<sp/>names</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(int)m_vectorTargetThickness.size();<sp/>++i)<sp/>{<sp/>m_targetName.push_back(slabName+<sp/>std::to_string(i));<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(int)m_vectorTargetThickness.size();<sp/>++i)<sp/>{<sp/>m_targetName.push_back(m_assemblyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_SlabCoating&quot;</highlight><highlight class="normal">+<sp/>std::to_string(i));<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>targetPipeThickness<sp/>=<sp/>m_p-&gt;CheckGap;<sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>targetPipeHeight<sp/>=<sp/>m_p-&gt;zTargetHeight<sp/>+<sp/>targetPipeThickness;<sp/></highlight><highlight class="comment">//<sp/>Tube<sp/>height<sp/>along<sp/>X-axis<sp/><sp/><sp/><sp/><sp/>//<sp/>checkgap<sp/>=<sp/>thickness<sp/>of<sp/>wall<sp/>//<sp/>conic<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_vectorTargetThickness.size()<sp/>&gt;<sp/>0)<sp/>{targetPipeHeight<sp/>=<sp/>m_vectorTargetThickness[0]<sp/>+targetPipeThickness;}<sp/></highlight><highlight class="comment">//<sp/>Tube<sp/>height<sp/>along<sp/>X-axis<sp/><sp/><sp/><sp/><sp/>//<sp/>checkgap<sp/>=<sp/>thickness<sp/>of<sp/>wall<sp/>//<sp/>Cylindrical<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>targetPipeWidth<sp/><sp/>=<sp/>m_p-&gt;yTarget<sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>2<sp/>*<sp/>m_p-&gt;CheckGap;<sp/></highlight><highlight class="comment">//<sp/>Tube<sp/>width<sp/><sp/>along<sp/>Y-axis<sp/>=<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>solid<sp/>volumes<sp/>of<sp/>target<sp/>tube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cladSolidVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">+m_cladName[m_cladName.size()-1],<sp/>0.,<sp/>0.5*targetPipeWidth,<sp/>0.5*targetPipeHeight,<sp/>0.,<sp/>twopi));<sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>size<sp/>X,Y,Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Solids.push_back(<sp/>m_cladSolidVolumes[0]<sp/>);<sp/></highlight><highlight class="comment">//<sp/>Largest<sp/>volume<sp/>surrounding<sp/>all<sp/>the<sp/>geometry<sp/>-&gt;<sp/>to<sp/>be<sp/>substracted<sp/>to<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>geometry<sp/>when<sp/>placed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>solid<sp/>volumes<sp/>of<sp/>coolant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>m_coolantSolidVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">+m_coolantName[m_coolantName.size()-1],<sp/>0.,<sp/>0.5*(targetPipeWidth<sp/>-<sp/>targetPipeThickness),<sp/>0.5*(targetPipeHeight<sp/>-<sp/>targetPipeThickness),<sp/>0.,<sp/>twopi));<sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>size<sp/>X,Y,Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>solid<sp/>volumes<sp/>of<sp/>slabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(m_vectorTargetThickness.size()<sp/>&gt;<sp/>0)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4VSolid*<sp/>conicSlab<sp/>=<sp/>new<sp/>G4Cons(&quot;sCone&quot;,<sp/><sp/>//<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>//<sp/>inner<sp/>radius<sp/>-pDz<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>*<sp/>m_p-&gt;yTarget,<sp/>//<sp/>outer<sp/>radius<sp/>-pDz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>//<sp/>inner<sp/>radius<sp/>+pDz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>//<sp/>outer<sp/>radius<sp/>+pDz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5<sp/>*<sp/>(m_p-&gt;zTargetHeight-m_vectorTargetThickness[0]),<sp/><sp/><sp/><sp/>//<sp/>Z<sp/>half<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>//<sp/>starting<sp/>Phi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twopi);<sp/>//<sp/>segment<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4Tubs*<sp/>ConeBase<sp/>=<sp/>new<sp/>G4Tubs(&quot;sConeBase&quot;,<sp/>0.,<sp/>0.5<sp/>*<sp/>m_p-&gt;yTarget,<sp/>0.5<sp/>*<sp/>m_vectorTargetThickness[0],<sp/>0.,<sp/>twopi);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conicSlab<sp/>=<sp/>new<sp/>G4UnionSolid(&quot;s&quot;<sp/>+<sp/>m_targetName[0],<sp/>conicSlab,<sp/>ConeBase,<sp/>0,<sp/>G4ThreeVector(0.,<sp/>0.,<sp/>-0.5<sp/>*<sp/>m_p-&gt;zTargetHeight)<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetSolidVolumes.push_back(<sp/>conicSlab<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coolantSolidVolumes.push_back(<sp/>new<sp/>G4Cons(&quot;s&quot;<sp/>+<sp/>m_coolantName[0]<sp/>+<sp/>&quot;_insideCone&quot;,<sp/><sp/>//<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>//<sp/>inner<sp/>radius<sp/>-pDz<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5*m_p-&gt;yTarget,<sp/>//<sp/>outer<sp/>radius<sp/>-pDz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>//<sp/>inner<sp/>radius<sp/>+pDz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/>//<sp/>outer<sp/>radius<sp/>+pDz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.5*(m_p-&gt;zTargetHeight<sp/>-<sp/>m_vectorTargetThickness[0]),<sp/>//<sp/>Z<sp/>half<sp/>length</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/>//<sp/>starting<sp/>Phi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>twopi)<sp/>//<sp/>segment<sp/>angle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cylindrical<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_vectorTargetThickness.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4Tubs*<sp/>sSlab<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_targetName[0],<sp/>0.,<sp/>0.5<sp/>*<sp/>m_p-&gt;yTarget,<sp/>0.5<sp/>*<sp/>m_vectorTargetThickness[0],<sp/>0.,<sp/>twopi);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetSolidVolumes.push_back(<sp/>sSlab<sp/>);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;End<sp/>of<sp/>Target<sp/>definition&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal">}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal">G4ThreeVector<sp/>TMXTargetRez2::placeGeometry(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4ThreeVector*<sp/>beamDirection,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxis<sp/>=<sp/>TMXNeutronSource::DefineRotationMatrix(beamDirection);<sp/></highlight><highlight class="comment">//<sp/>Definition<sp/>of<sp/>rotation<sp/>matrix<sp/>from<sp/>beamDirection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>placeTube(overlap,<sp/>centerTarget,<sp/>RotationFromXaxis,<sp/>masterVolume);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Placement<sp/>of<sp/>tube<sp/>in<sp/>the<sp/>masterVolume<sp/>(world<sp/>?)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>placeCoolant(overlap,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>m_cladLogicalVolumes[m_cladLogicalVolumes.size()-1]);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Placement<sp/>of<sp/>coolant<sp/>in<sp/>tube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>placeSlabs<sp/><sp/>(overlap,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">,<sp/>m_coolantLogicalVolumes[m_coolantLogicalVolumes.size()-1]);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Placement<sp/>of<sp/>slabs<sp/>in<sp/>coolant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_copy_number;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>distanceToOut{-0.5<sp/>*<sp/>m_p-&gt;zTargetHeight,0,0};<sp/>//<sp/>Conic<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>distanceToOut{-0.5*m_vectorTargetThickness[0],0,0};<sp/></highlight><highlight class="comment">//<sp/>Cyclinder<sp/>target</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix(<sp/>RotationFromXaxis-&gt;axis(),<sp/>-RotationFromXaxis-&gt;delta()<sp/>);}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxisInverse)<sp/>{<sp/>distanceToOut<sp/>=<sp/>*RotationFromXaxisInverse<sp/>*<sp/>distanceToOut;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>rotation,<sp/>distanceToOut<sp/>along<sp/>x<sp/>axis<sp/>is<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>distanceToOut;<sp/></highlight><highlight class="comment">//<sp/>return<sp/>distance<sp/>from<sp/>the<sp/>target<sp/>center<sp/>to<sp/>the<sp/>beam<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal">}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXTargetRez2::placeSlabs(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4RotationMatrix<sp/>*RotationFromXaxis,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>getFirstOccurence(&amp;m_targetName);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_targetSolidVolumes.size()<sp/>&gt;<sp/>0)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>slabs<sp/>placement<sp/>+<sp/>coating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Definition<sp/>of<sp/>target<sp/>slab<sp/>+<sp/>coating<sp/>logical<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_targetLogicalVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(m_targetSolidVolumes[0],<sp/>m_TargetMaterial,<sp/><sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">+m_targetName[<sp/>index<sp/>]+std::to_string(m_copy_number)<sp/>));<sp/></highlight><highlight class="comment">//<sp/>Material<sp/>:<sp/>tungsten<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>pos(0<sp/>,0<sp/>,0.5*m_vectorTargetThickness[0]);<sp/>//<sp/>conic<sp/>slab<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>pos(0<sp/>,0<sp/>,0);<sp/></highlight><highlight class="comment">//<sp/>cylinder<sp/>slab<sp/>pos</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix(<sp/>RotationFromXaxis-&gt;axis(),<sp/>-RotationFromXaxis-&gt;delta()<sp/>);}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxisInverse)<sp/>{<sp/>pos<sp/>=<sp/>*RotationFromXaxisInverse<sp/>*<sp/>pos;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>rotation,<sp/>distanceToOut<sp/>along<sp/>x<sp/>axis<sp/>is<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerTarget)<sp/>{pos<sp/>=<sp/>*centerTarget<sp/>+<sp/>pos;}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement<sp/>(RotationFromXaxis,<sp/>pos,<sp/>m_targetLogicalVolumes[m_targetLogicalVolumes.size()-1],<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_targetName[index],<sp/>masterVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_copy_number,<sp/>overlap);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_coolantSolidVolumes.size()<sp/>&gt;<sp/>1)<sp/>{<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>slabs<sp/>placement<sp/>+<sp/>coating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Definition<sp/>of<sp/>target<sp/>slab<sp/>+<sp/>coating<sp/>logical<sp/>volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coolantLogicalVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(m_coolantSolidVolumes[1],<sp/>m_CoolantMaterial,<sp/><sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">+m_coolantName[<sp/>index<sp/>]+</highlight><highlight class="stringliteral">&quot;_insideCone&quot;</highlight><highlight class="normal">+std::to_string(m_copy_number)<sp/>));<sp/></highlight><highlight class="comment">//<sp/>Material<sp/>:<sp/>coolant<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>pos(0<sp/>,0<sp/>,-m_vectorTargetThickness[0]);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix(<sp/>RotationFromXaxis-&gt;axis(),<sp/>-RotationFromXaxis-&gt;delta()<sp/>);}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxisInverse)<sp/>{<sp/>pos<sp/>=<sp/>*RotationFromXaxisInverse<sp/>*<sp/>pos;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>rotation,<sp/>distanceToOut<sp/>along<sp/>x<sp/>axis<sp/>is<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerTarget)<sp/>{pos<sp/>=<sp/>*centerTarget<sp/>+<sp/>pos;}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement<sp/>(RotationFromXaxis,<sp/>pos,<sp/>m_coolantLogicalVolumes[m_coolantLogicalVolumes.size()-1],<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_coolantName[index],<sp/>m_targetLogicalVolumes[m_targetLogicalVolumes.size()-1],<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_copy_number,<sp/>overlap);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXTargetRez2::placeCoolant(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4RotationMatrix<sp/>*RotationFromXaxis,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>getFirstOccurence(&amp;m_coolantName);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>logical<sp/>volumes<sp/>ofcoolant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>m_coolantLogicalVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(m_coolantSolidVolumes[0],<sp/>m_CoolantMaterial,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">+m_coolantName[index]+std::to_string(m_copy_number)));<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Material<sp/>:<sp/>water</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>targetPipeThickness<sp/>=<sp/>m_p-&gt;CheckGap;<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>pos(0.,<sp/>0.,<sp/>-0.5*targetPipeThickness);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix(<sp/>RotationFromXaxis-&gt;axis(),<sp/>-RotationFromXaxis-&gt;delta()<sp/>);}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxisInverse)<sp/>{<sp/>pos<sp/>=<sp/>*RotationFromXaxisInverse<sp/>*<sp/>pos;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>rotation,<sp/>distanceToOut<sp/>along<sp/>x<sp/>axis<sp/>is<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerTarget)<sp/>{pos<sp/>=<sp/>*centerTarget<sp/>+<sp/>pos;}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement<sp/>(RotationFromXaxis,<sp/>pos,<sp/>m_coolantLogicalVolumes[0],<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_coolantName[index]<sp/>,<sp/>masterVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_copy_number,<sp/>overlap);</highlight></codeline>
<codeline lineno="245"><highlight class="normal">}</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXTargetRez2::placeTube(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4RotationMatrix<sp/>*RotationFromXaxis,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>getFirstOccurence(&amp;m_cladName);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>logical<sp/>volumes<sp/>of<sp/>target<sp/>tube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>m_cladLogicalVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(m_cladSolidVolumes[0],<sp/>m_CladMaterial,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">+m_cladName[index]+std::to_string(m_copy_number)));<sp/><sp/></highlight><highlight class="comment">//<sp/>Material<sp/>:<sp/>stainless<sp/>steel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>targetPipeThickness<sp/>=<sp/>m_p-&gt;CheckGap;<sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector*<sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4ThreeVector(m_p-&gt;XtargetPosition+0.5*targetPipeThickness,0,0);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix(<sp/>RotationFromXaxis-&gt;axis(),<sp/>-RotationFromXaxis-&gt;delta()<sp/>);}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxisInverse)<sp/>{<sp/>*pos<sp/>=<sp/>*RotationFromXaxisInverse<sp/>*<sp/>*pos;<sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>rotation,<sp/>distanceToOut<sp/>along<sp/>x<sp/>axis<sp/>is<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerTarget)<sp/>{*pos<sp/>=<sp/>*centerTarget<sp/>+<sp/>*pos;}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>Rotation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>Rotation-&gt;rotateY(-CLHEP::pi<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>*Rotation<sp/>=<sp/>(*Rotation)<sp/>*<sp/>(*RotationFromXaxis);<sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement<sp/>(Rotation,<sp/>*pos,<sp/>m_cladLogicalVolumes[m_cladLogicalVolumes.size()-1],<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_cladName[index]<sp/>,<sp/>masterVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_copy_number,<sp/>overlap);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_copy_number<sp/>!=<sp/>0)<sp/>{<sp/>m_Solids.push_back(<sp/>m_Solids[0]<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>m_translation.push_back(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rotation.push_back(<sp/>Rotation<sp/>);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXTargetRez2::VisualisationConfig()<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>TMXAbstractTargetAssembly::VisualisationConfig();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nConfiguration<sp/>of<sp/>the<sp/>visualisation<sp/>in<sp/>progress...&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>visualisation<sp/>colors<sp/>configured<sp/>by<sp/>DL</highlight></codeline>
<codeline lineno="278"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>black<sp/><sp/><sp/>(<sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lblack<sp/><sp/>(<sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.6);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>vlblack<sp/>(<sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>very<sp/>light<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>white<sp/><sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3);<sp/></highlight><highlight class="comment">//<sp/>white</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>grayD3l<sp/>(211<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>211<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>211<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>gray<sp/>D3<sp/>(light)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>grayC<sp/><sp/><sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>flgrayC<sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.8);<sp/></highlight><highlight class="comment">//<sp/>few<sp/>light<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lgrayC<sp/><sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.4);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>vlgrayC<sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>very<sp/>ligth<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>red</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>orange<sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.65<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>orange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>green<sp/><sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lgreen<sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.4);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>blue<sp/><sp/><sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>yellow<sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>yellow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lyellow<sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>yellow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>cyan<sp/><sp/><sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>cya</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>sky<sp/><sp/><sp/><sp/><sp/>(0.0/255.0,<sp/>191.0/255.0,<sp/>255.0/255.0,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>sky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>dgreen<sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>153.0/255.0,<sp/>153.0/255.0,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>dark<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>cyangr<sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>204.0/255.0,<sp/>204.0/255.0<sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>cyan+green<sp/>colour<sp/>for<sp/>different<sp/>colour<sp/>of<sp/>h20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lblue<sp/><sp/><sp/>(204.0/255,<sp/>229.0/255.0,<sp/>255.0/255.0,<sp/>0.6);<sp/>//<sp/>light<sp/>blue<sp/>for<sp/>number<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lblue<sp/><sp/><sp/>(0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.4);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>blue<sp/>for<sp/>number<sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>grayblu<sp/>(0.4<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.6);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>gray<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>wcolour<sp/>(0.3<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>Ccolour<sp/>(0.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>G4bool<sp/>bool_visible<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>G4VisAttributes*<sp/>visTarget<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4VisAttributes(yellow);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>visTarget-&gt;SetVisibility(bool_visible);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;m_coatingLogicalVolumes.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_coatingLogicalVolumes[i])<sp/>{m_coatingLogicalVolumes[i]-&gt;SetVisAttributes(visTarget);}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal">}</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GETTERS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//</highlight></codeline>
<codeline lineno="317"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal">std::vector&lt;G4LogicalVolume*&gt;<sp/>TMXTargetRez2::getCoatingLogicalVolumes()<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_coatingLogicalVolumes;</highlight></codeline>
<codeline lineno="320"><highlight class="normal">}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/>G4Material*<sp/>TMXTargetRez2::getCoatingMaterial()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>m_CoatingMaterial;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="comment">//<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="comment">//<sp/>G4Material*<sp/>TMXTargetRez2::getReflectorMaterial()<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>m_ReflectorMaterial;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="comment">//<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>*<sp/>TMXTargetRez2::getCoatingMaterial()<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_CoatingMaterial;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>*<sp/>TMXTargetRez2::getReflectorMaterial()<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ReflectorMaterial;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;(int)SolidsToSubstract.size();<sp/>++i)<sp/>{<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solidShield<sp/>=<sp/>new<sp/>G4SubtractionSolid(&quot;sShield-sub&quot;<sp/>+<sp/>std::to_string(i),<sp/>solidShield,<sp/>SolidsToSubstract[i].first,0,<sp/>G4ThreeVector(SolidsToSubstract[i].second.x(),SolidsToSubstract[i].second.y(),SolidsToSubstract[i].second.z()-shieldV));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/NSource/NeutronEmmiter/TMXTargetRez2.cc"/>
  </compounddef>
</doxygen>
