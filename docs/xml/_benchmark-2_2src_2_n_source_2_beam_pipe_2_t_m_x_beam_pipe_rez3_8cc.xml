<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_benchmark-2_2src_2_n_source_2_beam_pipe_2_t_m_x_beam_pipe_rez3_8cc" kind="file" language="C++">
    <compoundname>TMXBeamPipeRez3.cc</compoundname>
    <includes local="yes">TMXBeamPipeRez3.hh</includes>
    <includes local="yes">TMXNeutronSource.hh</includes>
    <includes local="yes">globals.hh</includes>
    <includes local="yes">G4SystemOfUnits.hh</includes>
    <includes local="yes">G4VSolid.hh</includes>
    <includes local="yes">G4Box.hh</includes>
    <includes local="yes">G4Tubs.hh</includes>
    <includes local="yes">G4PVPlacement.hh</includes>
    <includes local="yes">G4PhysicalConstants.hh</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/NSource/BeamPipe/TMXBeamPipeRez3.cc</label>
        <link refid="_benchmark-2_2src_2_n_source_2_beam_pipe_2_t_m_x_beam_pipe_rez3_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>G4Box.hh</label>
      </node>
      <node id="9">
        <label>G4PVPlacement.hh</label>
      </node>
      <node id="10">
        <label>G4PhysicalConstants.hh</label>
      </node>
      <node id="5">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="8">
        <label>G4Tubs.hh</label>
      </node>
      <node id="6">
        <label>G4VSolid.hh</label>
      </node>
      <node id="2">
        <label>TMXBeamPipeRez3.hh</label>
      </node>
      <node id="3">
        <label>TMXNeutronSource.hh</label>
      </node>
      <node id="4">
        <label>globals.hh</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄<sp/><sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄▄<sp/><sp/>▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄▄▄▄▄▄▄▄▄▄▄<sp/><sp/>▄<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▄</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░░░░░░░░░░░▌▐░░░░░░░░░░▌<sp/>▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░▌<sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌▐░░▌<sp/><sp/><sp/><sp/><sp/>▐░░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀▀▀<sp/><sp/>▀▀▀▀█░█▀▀▀▀<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░▌░▌<sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▀▀▀▀▀▀▀▀▀<sp/>▐░▌░▌<sp/><sp/><sp/>▐░▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▀▀▀▀█░█▀▀▀▀<sp/>▐░█▀▀▀▀▀▀▀▀▀<sp/><sp/>▐░▌<sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌▐░▌<sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/>▐░▌▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░█▄▄▄▄▄▄▄█░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄▄▄<sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░▌<sp/>▐░▌<sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄▄▄<sp/>▐░▌<sp/>▐░▐░▌<sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▄▄▄▄▄▄▄▄▄<sp/><sp/><sp/><sp/>▐░▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/>▐░▌<sp/><sp/>▐░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/>▐░▌<sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▀▀▀▀▀▀▀▀▀█░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▀▀▀▀█░█▀▀<sp/>▐░█▀▀▀▀▀▀▀█░▌▐░▌<sp/><sp/><sp/>▐░▌<sp/>▐░▌<sp/>▀▀▀▀▀▀▀▀▀█░▌▐░▌<sp/><sp/><sp/>▀<sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/><sp/>▐░▌░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄█░▌<sp/>▄▄▄▄▄▄▄▄▄█░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/>▐░▌<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▐░▌<sp/>▄▄▄▄▄▄▄▄▄█░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░█▄▄▄▄▄▄▄█░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░█▄▄▄▄▄▄▄▄▄<sp/><sp/>▐░▌<sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░▌<sp/>▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/>▐░░▌▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▐░▌▐░░░░░░░░░░░▌<sp/><sp/><sp/><sp/><sp/>▐░▌<sp/><sp/><sp/><sp/><sp/>▐░░░░░░░░░░░▌▐░▌<sp/><sp/><sp/><sp/><sp/>▐░▌</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀▀<sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀▀▀▀▀▀▀▀▀▀▀<sp/><sp/>▀<sp/><sp/><sp/><sp/><sp/><sp/><sp/>▀</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight><highlight class="comment">//<sp/>\brief<sp/>Implementation<sp/>of<sp/>the<sp/>TMXBeamPipeRez3<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="18"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TMXBeamPipeRez3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Donovan<sp/>Maire,<sp/>Thomas<sp/>Frosio,<sp/>Transmutex,<sp/>22/09/2020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="24"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Class<sp/>to<sp/>manage<sp/>the<sp/>beam<sp/>pipe<sp/>geometry<sp/>inspired<sp/>by<sp/>the<sp/>target<sp/>design<sp/>of<sp/>the<sp/>KIPT<sp/>facility</highlight></codeline>
<codeline lineno="26"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TMX<sp/>Class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXBeamPipeRez3.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXNeutronSource.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GEANT4<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;globals.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4SystemOfUnits.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4VSolid.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Box.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Tubs.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PVPlacement.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PhysicalConstants.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>#include<sp/>&quot;G4NistManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal">TMXBeamPipeRez3::TMXBeamPipeRez3(<ref refid="class_t_m_x_input_parameters" kindref="compound">TMXInputParameters</ref>*<sp/>parameters,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>BeamPipeAssemblyName):</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><ref refid="class_t_m_x_abstract_beam_pipe" kindref="compound">TMXAbstractBeamPipe</ref>{parameters,<sp/>BeamPipeAssemblyName}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>createMaterial(m_p-&gt;TemperatureWorld);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>createGeometry();</highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">TMXBeamPipeRez3::~TMXBeamPipeRez3()<sp/>{}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXBeamPipeRez3::createMaterial(G4double<sp/>Kelvin_temperature)<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>TMXAbstractBeamPipe::createMaterial(Kelvin_temperature);<sp/></highlight><highlight class="comment">//<sp/>default<sp/>material</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Graphite<sp/>degrader<sp/>instead<sp/>of<sp/>beam<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>G4Material*<sp/>g4_graph<sp/>=<sp/>G4NistManager::Instance()-&gt;FindOrBuildMaterial(&quot;G4_GRAPHITE&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_windowMaterial<sp/>=<sp/>new<sp/>G4Material(m_assemblyName<sp/>+<sp/>&quot;_Graphite&quot;,g4_graph-&gt;GetDensity(),<sp/>1,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_windowMaterial-&gt;AddMaterial(g4_graph,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_windowMaterial<sp/>=<sp/>TMXMaterial::Find(&quot;G4_Galactic&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>if(<sp/>!m_windowMaterial<sp/>)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_windowMaterial<sp/>=<sp/>new<sp/>TMXMaterial(&quot;G4_Galactic&quot;,CLHEP::universe_mean_density*g/cm3,<sp/>1,<sp/>kStateGas,<sp/>Kelvin_temperature,<sp/>3.e-18*hep_pascal);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_windowMaterial-&gt;AddElement(10010,1);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowMaterial<sp/>=<sp/>TMXMaterial::Find(m_assemblyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Graphite&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>!m_windowMaterial<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_windowMaterial<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>(m_assemblyName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_Graphite&quot;</highlight><highlight class="normal">,2.21*g/cm3,<sp/>2,<sp/>kStateSolid,<sp/>Kelvin_temperature);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_windowMaterial-&gt;AddElement(60120,9893);<sp/></highlight><highlight class="comment">//<sp/>C-12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_windowMaterial-&gt;AddElement(60130,<sp/>107);<sp/></highlight><highlight class="comment">//<sp/>C-13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Isotope<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Relative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Atomic<sp/>Mass<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Isotopic</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>Composition<sp/><sp/><sp/><sp/>Standard</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Atomic<sp/>Weight<sp/><sp/><sp/><sp/><sp/>Notes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>6<sp/><sp/><sp/><sp/>C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>12<sp/><sp/><sp/><sp/><sp/>12.0000000(00)<sp/><sp/><sp/><sp/><sp/><sp/>0.9893(8)<sp/><sp/><sp/><sp/><sp/><sp/>[12.0096,<sp/>12.0116]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>13<sp/><sp/><sp/><sp/><sp/>13.003<sp/>354<sp/>835<sp/>07(23)<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.0107(8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXBeamPipeRez3::createGeometry()<sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Beginning<sp/>of<sp/>Beam<sp/>pipe<sp/>definition&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>Xoffset<sp/>=<sp/>m_p-&gt;XtargetPosition;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>beamPipeWidth<sp/><sp/>=<sp/>m_p-&gt;yTarget<sp/>+<sp/>2<sp/>*<sp/>m_p-&gt;CheckGap;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tube<sp/>width<sp/><sp/>along<sp/>Y-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>beamPipeThickness<sp/>=<sp/>m_p-&gt;CheckGap;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>m_WindowThickness<sp/>=<sp/>1*cm;<sp/></highlight><highlight class="comment">//m_p-&gt;CheckGap;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>targetPipeThickness<sp/>=<sp/>m_p-&gt;CheckGap;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>targetPipeLength<sp/>=<sp/>m_p-&gt;zTargetHeight<sp/>+<sp/>targetPipeThickness;<sp/></highlight><highlight class="comment">//<sp/>Tube<sp/>length<sp/>:<sp/>2<sp/>x<sp/>gap<sp/>between<sp/>wall<sp/>and<sp/>W-slabs<sp/>+<sp/>1<sp/>x<sp/>wall<sp/>thickness</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>Get<sp/>a<sp/>standard<sp/>beam<sp/>pipe<sp/>length<sp/>from<sp/>parameter<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>m_beamPipeLength<sp/>=<sp/>std::sqrt(std::pow(m_p-&gt;worldR<sp/>+<sp/>Xoffset<sp/>-<sp/>(targetPipeLength-targetPipeThickness),2)<sp/>-<sp/>0.5*0.5*beamPipeWidth*beamPipeWidth);<sp/></highlight><highlight class="comment">//<sp/>Tube<sp/>length<sp/>along<sp/>X-axis</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vacuumSolidVolume<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">+m_vacuumName[m_vacuumName.size()-1],<sp/>0.,<sp/>0.5*beamPipeWidth<sp/>-<sp/>beamPipeThickness,<sp/>0.5*m_beamPipeLength,<sp/><sp/>0.,<sp/>twopi);<sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>size<sp/>X,Y,Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowSolidVolume<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">+m_windowName[m_windowName.size()-1],<sp/>0.,<sp/>0.5*beamPipeWidth<sp/>-<sp/>beamPipeThickness,<sp/>0.5*m_WindowThickness,<sp/>0.,<sp/>twopi);<sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>size<sp/>X,Y,Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tubeSolidVolume<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;s&quot;</highlight><highlight class="normal">+m_tubeName[m_tubeName.size()-1],<sp/>0.,<sp/>0.5*beamPipeWidth,<sp/>0.5*m_beamPipeLength,<sp/>0.,<sp/>twopi);<sp/><sp/></highlight><highlight class="comment">//<sp/>Half<sp/>size<sp/>X,Y,Z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Solids.push_back(<sp/>m_tubeSolidVolume<sp/>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;End<sp/>of<sp/>Beam<sp/>pipe<sp/>definition&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXBeamPipeRez3::placeGeometry(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4ThreeVector*<sp/>beamDirection,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>place<sp/>the<sp/>whole<sp/>beam<sp/>pipe<sp/>assembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxis<sp/>=<sp/>TMXNeutronSource::DefineRotationMatrix(beamDirection);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>placeBeamPipe(overlap,<sp/>centerTarget,<sp/>RotationFromXaxis,<sp/>masterVolume);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>placeVacuum<sp/><sp/>(overlap,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_tubeLogicalVolumes[m_tubeLogicalVolumes.size()-1]);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>placeWindow<sp/><sp/>(overlap,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>,<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>m_vacuumLogicalVolumes[m_vacuumLogicalVolumes.size()-1]);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>++m_copy_number;</highlight></codeline>
<codeline lineno="110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXBeamPipeRez3::placeBeamPipe(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4RotationMatrix<sp/>*RotationFromXaxis,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>place<sp/>only<sp/>beam<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>getFirstOccurence(&amp;m_tubeName);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>m_tubeLogicalVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(m_tubeSolidVolume<sp/><sp/>,<sp/>m_tubeMaterial<sp/><sp/>,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">+m_tubeName<sp/><sp/>[index]+std::to_string(m_copy_number))<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>Material<sp/>:<sp/>stainless<sp/>steel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_tubeLogicalVolumes.push_back(<sp/>new<sp/>G4LogicalVolume(m_tubeSolidVolume<sp/><sp/>,<sp/>m_vacuumMaterial<sp/><sp/>,<sp/>&quot;l&quot;+m_tubeName<sp/><sp/>[index]+std::to_string(m_copy_number))<sp/>);<sp/><sp/>//<sp/>Material<sp/>:<sp/>stainless<sp/>steel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>RotationFromXaxisInverse<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix(<sp/>RotationFromXaxis-&gt;axis(),<sp/>-RotationFromXaxis-&gt;delta()<sp/>);}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector*<sp/>pos<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4ThreeVector(-0.5*m_beamPipeLength,0,0);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxisInverse)<sp/>{<sp/>*pos<sp/>=<sp/>*RotationFromXaxisInverse<sp/>*<sp/>*pos;<sp/>}</highlight><highlight class="comment">//<sp/>If<sp/>rotation,<sp/>pos<sp/>along<sp/>x<sp/>axis<sp/>(in<sp/>local<sp/>frame)<sp/>is<sp/>rotated</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerTarget)<sp/>{*pos<sp/>+=<sp/>*centerTarget;}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>Rotation<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>Rotation-&gt;rotateY(-CLHEP::pi<sp/>/<sp/>2.);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>*Rotation<sp/>=<sp/>(*Rotation)<sp/>*<sp/>(*RotationFromXaxis);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement<sp/>(Rotation,<sp/>*pos,<sp/>m_tubeLogicalVolumes[m_tubeLogicalVolumes.size()-1],<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_tubeName[index]<sp/>,<sp/>masterVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_copy_number,<sp/>overlap);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_Solids.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>m_translation.size()<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>m_rotation.size()<sp/>&gt;<sp/>0)<sp/>{<sp/>m_Solids.push_back(<sp/>m_Solids[0]<sp/>);<sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>m_translation.push_back(<sp/>pos<sp/>);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>m_rotation.push_back(<sp/>Rotation<sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXBeamPipeRez3::placeVacuum(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4RotationMatrix<sp/>*RotationFromXaxis,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>place<sp/>only<sp/>beam<sp/>pipe</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>getFirstOccurence(&amp;m_vacuumName);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>m_vacuumLogicalVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(m_vacuumSolidVolume,<sp/>m_vacuumMaterial,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">+m_vacuumName[index]+std::to_string(m_copy_number))<sp/>);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>pos{0,0,0};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerTarget)<sp/>{<sp/>pos<sp/>+=<sp/>*centerTarget;}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement<sp/>(RotationFromXaxis,<sp/>pos,m_vacuumLogicalVolumes[m_vacuumLogicalVolumes.size()-1],<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_vacuumName[index]<sp/>,<sp/>masterVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_copy_number,<sp/>overlap);</highlight></codeline>
<codeline lineno="143"><highlight class="normal">}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXBeamPipeRez3::placeWindow(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector*<sp/>centerTarget,<sp/>G4RotationMatrix<sp/>*RotationFromXaxis,<sp/>G4LogicalVolume*<sp/>masterVolume)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>To<sp/>place<sp/>only<sp/>beam<sp/>window</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>getFirstOccurence(&amp;m_windowName);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>m_windowLogicalVolumes.push_back(<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(m_windowSolidVolume,<sp/>m_windowMaterial,<sp/></highlight><highlight class="stringliteral">&quot;l&quot;</highlight><highlight class="normal">+m_windowName[index]+std::to_string(m_copy_number))<sp/>);<sp/><sp/></highlight><highlight class="comment">//<sp/>Material<sp/>:<sp/>stainless<sp/>steel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>m_windowLogicalVolumes.push_back(<sp/>new<sp/>G4LogicalVolume(m_windowSolidVolume,<sp/>m_vacuumMaterial,<sp/>&quot;l&quot;+m_windowName[index]+std::to_string(m_copy_number))<sp/>);<sp/><sp/>//<sp/>Material<sp/>:<sp/>stainless<sp/>steel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ThreeVector<sp/>pos{0.,<sp/>0.,<sp/>-1*cm<sp/>+<sp/>0.5*(m_beamPipeLength<sp/>-<sp/>m_WindowThickness)};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(RotationFromXaxis)<sp/>{<sp/>pos<sp/>=<sp/>*RotationFromXaxis<sp/>*<sp/>pos;<sp/>}</highlight><highlight class="comment">//<sp/>If<sp/>rotation,<sp/>pos<sp/>along<sp/>x<sp/>axis<sp/>(in<sp/>local<sp/>frame)<sp/>is<sp/>rotated<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(centerTarget)<sp/>{<sp/>pos<sp/>+=<sp/>*centerTarget;}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement<sp/>(RotationFromXaxis,<sp/>pos,<sp/>m_windowLogicalVolumes[m_windowLogicalVolumes.size()-1],<sp/></highlight><highlight class="stringliteral">&quot;p&quot;</highlight><highlight class="normal"><sp/>+<sp/>m_windowName[index]<sp/>,<sp/>masterVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>m_copy_number,<sp/>overlap);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>for(int<sp/>i=0;<sp/>i&lt;(int)SolidsToSubstract.size();<sp/>++i)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>solidShield<sp/>=<sp/>new<sp/>G4SubtractionSolid(&quot;sShield-sub&quot;<sp/>+<sp/>std::to_string(i),<sp/>solidShield,<sp/>SolidsToSubstract[i].first,0,<sp/>G4ThreeVector(SolidsToSubstract[i].second.x(),SolidsToSubstract[i].second.y(),SolidsToSubstract[i].second.z()-shieldV));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/NSource/BeamPipe/TMXBeamPipeRez3.cc"/>
  </compounddef>
</doxygen>
