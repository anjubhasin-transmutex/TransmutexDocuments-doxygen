<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_benchmark-1_2_power_deposition_8_c" kind="file" language="C++">
    <compoundname>PowerDeposition.C</compoundname>
    <includes local="no">TCanvas.h</includes>
    <includes local="no">TFile.h</includes>
    <includes local="no">TH1F.h</includes>
    <includes local="no">TGraph.h</includes>
    <includes local="no">TTree.h</includes>
    <includes local="no">TLegend.h</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C</label>
        <link refid="_benchmark-1_2_power_deposition_8_c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TCanvas.h</label>
      </node>
      <node id="3">
        <label>TFile.h</label>
      </node>
      <node id="5">
        <label>TGraph.h</label>
      </node>
      <node id="4">
        <label>TH1F.h</label>
      </node>
      <node id="7">
        <label>TLegend.h</label>
      </node>
      <node id="6">
        <label>TTree.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_benchmark-1_2_power_deposition_8_c_1ac26c50d0f84a32cd2acf3ac127b107e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void marginCanvas</definition>
        <argsstring>(TCanvas *canvas, double margin)</argsstring>
        <name>marginCanvas</name>
        <param>
          <type>TCanvas *</type>
          <declname>canvas</declname>
        </param>
        <param>
          <type>double</type>
          <declname>margin</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C" line="22" column="6" bodyfile="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C" bodystart="22" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="_benchmark-1_2_power_deposition_8_c_1a0e5c8a0faaeb5fe383990aaa49e8a2f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double ringVolume</definition>
        <argsstring>(double rMin, double rMax, double hz)</argsstring>
        <name>ringVolume</name>
        <param>
          <type>double</type>
          <declname>rMin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>rMax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C" line="29" column="8" bodyfile="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="_benchmark-1_2_power_deposition_8_c_1a016c4ac6200d9e3bc10c109377f7b618" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int PowerDeposition</definition>
        <argsstring>(std::string inputFile)</argsstring>
        <name>PowerDeposition</name>
        <param>
          <type>std::string</type>
          <declname>inputFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C" line="33" column="5" bodyfile="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C" bodystart="33" bodyend="120"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PowerDeposition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thomas<sp/>Guilbaud,<sp/>Transmutex,<sp/>23/06/2021</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TCanvas.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TFile.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TH1F.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TGraph.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TTree.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TLegend.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>marginCanvas(TCanvas*<sp/>canvas,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>margin)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetLeftMargin(margin);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetRightMargin(margin);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetBottomMargin(margin);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>canvas-&gt;SetTopMargin(margin);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ringVolume(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rMin,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rMax,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>hz)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(3.14159265<sp/>*<sp/>(rMax*rMax<sp/>-<sp/>rMin*rMin)<sp/>*<sp/>hz);</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>PowerDeposition(std::string<sp/>inputFile)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Reading<sp/>name<sp/>of<sp/>the<sp/>ROOT<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>last_slash<sp/>=<sp/>inputFile.rfind(</highlight><highlight class="stringliteral">&quot;/&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last_slash<sp/>==<sp/>std::string::npos)<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>last_slash<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>FileName<sp/>=<sp/>inputFile.substr(last_slash,<sp/>inputFile.rfind(</highlight><highlight class="stringliteral">&quot;.root&quot;</highlight><highlight class="normal">)-last_slash);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>TFile<sp/>*f_ROOT<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TFile(<sp/>(inputFile).c_str()<sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------<sp/>Begin<sp/>User<sp/>Input<sp/>-------------------------------*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Physical<sp/>Scale</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>beamPower<sp/>=<sp/>1e3;<sp/></highlight><highlight class="comment">//<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>energyProtons<sp/>=<sp/>600e6;<sp/></highlight><highlight class="comment">//<sp/>eV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>nProtons<sp/>=<sp/>100000.;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scalingFactor<sp/>=<sp/>beamPower/(energyProtons<sp/>*<sp/>nProtons)<sp/>*<sp/>1e3;<sp/></highlight><highlight class="comment">//<sp/>mA</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Power<sp/>Range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>minPower<sp/>=<sp/>1.,<sp/>maxPower<sp/>=<sp/>200.;<sp/></highlight><highlight class="comment">//<sp/>W</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Histogram;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>rMin<sp/>=<sp/>-200,<sp/>rMax<sp/>=<sp/>200,<sp/>rBin<sp/>=<sp/>100;<sp/></highlight><highlight class="comment">//<sp/>mm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>zMin<sp/>=<sp/><sp/>-50,<sp/>zMax<sp/>=<sp/>700,<sp/>zBin<sp/>=<sp/>100;<sp/></highlight><highlight class="comment">//<sp/>mm</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Canvas<sp/>Setup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>margin<sp/>=<sp/>0.16;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>windowWidth<sp/>=<sp/>1000;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isSaveHasPNG<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//-------------------------<sp/>End<sp/>User<sp/>Input<sp/>---------------------------------*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>TTree*<sp/>Proton<sp/>=<sp/>(TTree*)f_ROOT-&gt;GetObjectChecked((</highlight><highlight class="stringliteral">&quot;Proton&quot;</highlight><highlight class="normal">),<sp/></highlight><highlight class="stringliteral">&quot;TTree&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nEntries<sp/>=<sp/>(int)Proton-&gt;GetEntries();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>TCanvas*<sp/>cPowerDeposition<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TCanvas(</highlight><highlight class="stringliteral">&quot;Proton<sp/>Power<sp/>Deposition&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Proton<sp/>Power<sp/>Deposition&quot;</highlight><highlight class="normal">,<sp/>windowWidth,<sp/>windowWidth);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>cPowerDeposition-&gt;SetLogz();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>marginCanvas(cPowerDeposition,<sp/>margin);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>TH2D<sp/>*powerDeposition<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>TH2D(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>zBin,<sp/>zMin,<sp/>zMax,<sp/>rBin,<sp/>rMin,<sp/>rMax);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;SetTitle((</highlight><highlight class="stringliteral">&quot;Power<sp/>Deposition<sp/>for<sp/>&quot;</highlight><highlight class="normal">+std::to_string((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(energyProtons/1e6))+</highlight><highlight class="stringliteral">&quot;<sp/>MeV&quot;</highlight><highlight class="normal">).c_str());</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;GetXaxis()-&gt;SetTitle(</highlight><highlight class="stringliteral">&quot;Z<sp/>(mm)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;GetYaxis()-&gt;SetTitle(</highlight><highlight class="stringliteral">&quot;R<sp/>(mm)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;GetZaxis()-&gt;SetTitleOffset(1.5);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;GetZaxis()-&gt;SetTitle(</highlight><highlight class="stringliteral">&quot;Power<sp/>Deposition<sp/>(W/cm^{3}/mA)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;GetZaxis()-&gt;SetRangeUser(minPower,<sp/>maxPower);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;SetContour(10);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle-&gt;SetCanvasPreferGL(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle-&gt;SetPaintTextFormat(</highlight><highlight class="stringliteral">&quot;.2f&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle-&gt;SetOptStat(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle-&gt;SetPadGridX(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>gStyle-&gt;SetPadGridY(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>r,<sp/>x,<sp/>y,<sp/>z,<sp/>energy,<sp/>hr,<sp/>volume;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dz<sp/>=<sp/>(zMax-zMin)/zBin;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dr<sp/>=<sp/>(rMax-rMin)/rBin;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>dr<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>dz<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nEntries;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proton-&gt;GetEntry(i);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>Proton-&gt;GetLeaf(</highlight><highlight class="stringliteral">&quot;x&quot;</highlight><highlight class="normal">)-&gt;GetValue(0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>Proton-&gt;GetLeaf(</highlight><highlight class="stringliteral">&quot;y&quot;</highlight><highlight class="normal">)-&gt;GetValue(0);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>Proton-&gt;GetLeaf(</highlight><highlight class="stringliteral">&quot;z&quot;</highlight><highlight class="normal">)-&gt;GetValue(0);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>sqrt(x*x+y*y);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hr<sp/>=<sp/>((int)((r-rMin)/(rMax-rMin)*rBin))<sp/>*<sp/>dr<sp/>+<sp/>rMin;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>volume<sp/>=<sp/>ringVolume(hr,<sp/>hr+dr,<sp/>dz)<sp/>*<sp/>1e-3;<sp/></highlight><highlight class="comment">//<sp/>cm3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(i<sp/>&lt;=<sp/>100)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>r<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>rMin<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>hr<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>hr+dr<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>volume<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy<sp/>=<sp/>Proton-&gt;GetLeaf(</highlight><highlight class="stringliteral">&quot;energy&quot;</highlight><highlight class="normal">)-&gt;GetValue(0)<sp/>*<sp/>scalingFactor<sp/>/<sp/>volume;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerDeposition-&gt;Fill(z,<sp/><sp/>r,<sp/>energy);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerDeposition-&gt;Fill(z,<sp/>-r,<sp/>energy);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remove<sp/>bin<sp/>outside<sp/>the<sp/>power<sp/>range</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*double<sp/>power;</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/>for(size_t<sp/>binX<sp/>=<sp/>0;<sp/>binX<sp/>&lt;<sp/>powerDeposition-&gt;GetNbinsX();<sp/>binX++)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(size_t<sp/>binY<sp/>=<sp/>0;<sp/>binY<sp/>&lt;<sp/>powerDeposition-&gt;GetNbinsY();<sp/>binY++)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>power<sp/>=<sp/>powerDeposition-&gt;GetBinContent(powerDeposition-&gt;GetBin(binX,<sp/>binY));</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(minPower<sp/>&gt;<sp/>power<sp/>||<sp/>power<sp/>&gt;=<sp/>maxPower)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>powerDeposition-&gt;SetBinContent(binX,<sp/>binY,<sp/>0);</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//powerDeposition-&gt;Scale(scalingFactor);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>powerDeposition-&gt;Draw(</highlight><highlight class="stringliteral">&quot;CONTZ&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/PowerDeposition.C"/>
  </compounddef>
</doxygen>
