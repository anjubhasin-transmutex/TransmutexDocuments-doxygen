<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_critical_thermal_power_8cc" kind="file" language="C++">
    <compoundname>CriticalThermalPower.cc</compoundname>
    <includes refid="_critical_thermal_power_8hh" local="yes">CriticalThermalPower.hh</includes>
    <includes local="yes">G4Neutron.hh</includes>
    <incdepgraph>
      <node id="2">
        <label>CriticalThermalPower.hh</label>
        <link refid="_critical_thermal_power_8hh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>TMXAbstractScoring.hh</label>
        <link refid="_g4-_neutron_transport_2include_2scoring_2_t_m_x_abstract_scoring_8hh_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>TMXAbstractScoringAccumulable.hh</label>
        <link refid="_t_m_x_abstract_scoring_accumulable_8hh_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/CriticalThermalPower.cc</label>
        <link refid="_critical_thermal_power_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>TMXInputParameters.hh</label>
        <link refid="_t_m_x_input_parameters_8hh_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="22">
        <label>G4Accumulable.hh</label>
      </node>
      <node id="23">
        <label>G4AccumulableManager.hh</label>
      </node>
      <node id="13">
        <label>G4LogicalVolume.hh</label>
      </node>
      <node id="24">
        <label>G4Neutron.hh</label>
      </node>
      <node id="14">
        <label>G4PhysicalConstants.hh</label>
      </node>
      <node id="15">
        <label>G4Step.hh</label>
      </node>
      <node id="16">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="17">
        <label>G4Types.hh</label>
      </node>
      <node id="18">
        <label>G4VSolid.hh</label>
      </node>
      <node id="19">
        <label>G4VUserParallelWorld.hh</label>
      </node>
      <node id="5">
        <label>TH1D.h</label>
      </node>
      <node id="6">
        <label>TH2D.h</label>
      </node>
      <node id="7">
        <label>TObjArray.h</label>
      </node>
      <node id="10">
        <label>fstream</label>
      </node>
      <node id="20">
        <label>globals.hh</label>
      </node>
      <node id="21">
        <label>iomanip</label>
      </node>
      <node id="9">
        <label>string</label>
      </node>
      <node id="12">
        <label>unordered_map</label>
      </node>
      <node id="11">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;CriticalThermalPower.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Neutron.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal">CriticalThermalPower::CriticalThermalPower(<ref refid="class_t_m_x_input_parameters" kindref="compound">TMXInputParameters</ref>*<sp/>parameter,<sp/>std::string<sp/>name)<sp/></highlight></codeline>
<codeline lineno="6"><highlight class="normal">:<sp/><sp/><sp/><ref refid="class_t_m_x_abstract_scoring_accumulable" kindref="compound">TMXAbstractScoringAccumulable</ref>(parameter,<sp/>name)</highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/>Initialize();</highlight></codeline>
<codeline lineno="9"><highlight class="normal">}</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">CriticalThermalPower::~CriticalThermalPower()<sp/>{</highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CriticalThermalPower::Initialize()<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generation<sp/>of<sp/>neutron</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CurrentNeutronGeneration<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Start<sp/>scoring<sp/>energy<sp/>deposit<sp/>from<sp/>generation<sp/>NeutronGeneration_trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>m_NeutronGeneration_trigger<sp/>=<sp/>50;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Global<sp/>time<sp/>when<sp/>an<sp/>event<sp/>reaches<sp/>NeutronGeneration_trigger</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>m_t0<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Time<sp/>window<sp/>to<sp/>score<sp/>the<sp/>energy<sp/>deposit<sp/>(between<sp/>t0<sp/>and<sp/>t0<sp/>+<sp/>Deltat)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>m_Deltat<sp/>=<sp/>1E8;<sp/></highlight><highlight class="comment">//<sp/>in<sp/>nanosecond</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CriticalThermalPower::SetNeutronGeneration(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NeutronGeneration)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>m_CurrentNeutronGeneration<sp/>=<sp/>NeutronGeneration;</highlight></codeline>
<codeline lineno="30"><highlight class="normal">}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CriticalThermalPower::Definet0(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step*<sp/>theStep,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NeutronGeneration)<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>neutron<sp/>generation<sp/>trigger<sp/>is<sp/>reach,<sp/>we<sp/>get<sp/>the<sp/>time<sp/>m_t0<sp/>in<sp/>second<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(NeutronGeneration<sp/>==<sp/>m_NeutronGeneration_trigger<sp/>)<sp/>{<sp/>m_t0<sp/>=<sp/>theStep-&gt;GetPreStepPoint()-&gt;GetGlobalTime();<sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>SetNeutronGeneration(NeutronGeneration);</highlight></codeline>
<codeline lineno="37"><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CriticalThermalPower::score(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step*<sp/>theStep)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>the<sp/>neutron<sp/>generation<sp/>is<sp/>higher<sp/>than<sp/>the<sp/>trigger<sp/>and<sp/>the<sp/>time<sp/>is<sp/>lower<sp/>than<sp/>m_t0+m_Deltat,<sp/>we<sp/>score<sp/>the<sp/>energy<sp/>deposit<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_CurrentNeutronGeneration<sp/>&gt;=<sp/>m_NeutronGeneration_trigger<sp/>&amp;&amp;<sp/>theStep-&gt;GetPreStepPoint()-&gt;GetGlobalTime()<sp/>&lt;=<sp/>m_t0<sp/>+<sp/>m_Deltat<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primitiveScorer(theStep);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/>theStep-&gt;GetPreStepPoint()-&gt;GetGlobalTime()*1E-9<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_t0*1E-9<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>(m_t0<sp/>+<sp/>m_Deltat)*1E-9<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>m_CurrentNeutronGeneration<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>time<sp/>has<sp/>been<sp/>exceeded,<sp/>we<sp/>kill<sp/>the<sp/>particles<sp/>and<sp/>secondaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_CurrentNeutronGeneration<sp/>&gt;=<sp/>m_NeutronGeneration_trigger<sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>theStep-&gt;GetPreStepPoint()-&gt;GetGlobalTime()<sp/>&gt;<sp/>m_t0<sp/>+<sp/>m_Deltat</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>theStep-&gt;GetTrack()-&gt;GetParticleDefinition()<sp/>==<sp/>G4Neutron::NeutronDefinition()</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>)<sp/>{theStep-&gt;GetTrack()-&gt;SetTrackStatus(fKillTrackAndSecondaries);}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>)<sp/>{theStep-&gt;GetTrack()-&gt;SetTrackStatus(fStopAndKill);}</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CriticalThermalPower::primitiveScorer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step*<sp/>theStep)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>totalDepositedPower<sp/>=<sp/>theStep-&gt;GetTotalEnergyDeposit()/joule<sp/>/<sp/>(m_Deltat*1E-9);<sp/></highlight><highlight class="comment">//<sp/>in<sp/>Watt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(totalDepositedPower<sp/>&gt;<sp/>0.)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accCounter++;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accValue<sp/><sp/>+=<sp/>totalDepositedPower;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_accValueSquared<sp/>+=<sp/>totalDepositedPower<sp/>*<sp/>totalDepositedPower;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Printer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CriticalThermalPower::printAverage()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/CriticalThermalPower.cc"/>
  </compounddef>
</doxygen>
