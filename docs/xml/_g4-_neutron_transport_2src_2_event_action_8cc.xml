<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_g4-_neutron_transport_2src_2_event_action_8cc" kind="file" language="C++">
    <compoundname>EventAction.cc</compoundname>
    <includes local="yes">EventAction.hh</includes>
    <includes local="yes">RunAction.hh</includes>
    <includes local="yes">Analysis.hh</includes>
    <includes refid="_t_m_x_random_distribution3_d_8hh" local="yes">TMXRandomDistribution3D.hh</includes>
    <includes refid="_t_m_x_merge_threads_results_8hh" local="yes">TMXMergeThreadsResults.hh</includes>
    <includes local="yes">Run.hh</includes>
    <includes refid="_t_m_x_option_8hh" local="yes">TMXOption.hh</includes>
    <includes local="yes">TMXStopTheRun.hh</includes>
    <includes local="yes">G4Event.hh</includes>
    <includes local="yes">G4UImanager.hh</includes>
    <includes local="yes">G4Threading.hh</includes>
    <includes local="yes">G4PhysicalVolumeStore.hh</includes>
    <includes local="yes">G4VPhysicalVolume.hh</includes>
    <includes local="yes">G4SystemOfUnits.hh</includes>
    <includes local="yes">PrimaryGeneratorAction.hh</includes>
    <includes local="yes">G4RunManager.hh</includes>
    <includes local="no">iostream</includes>
    <includes local="yes">G4AutoLock.hh</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/EventAction.cc</label>
        <link refid="_g4-_neutron_transport_2src_2_event_action_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>TMXMergeThreadsResults.hh</label>
        <link refid="_t_m_x_merge_threads_results_8hh_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>TMXOption.hh</label>
        <link refid="_t_m_x_option_8hh_source"/>
      </node>
      <node id="5">
        <label>TMXRandomDistribution3D.hh</label>
        <link refid="_t_m_x_random_distribution3_d_8hh_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>Analysis.hh</label>
      </node>
      <node id="2">
        <label>EventAction.hh</label>
      </node>
      <node id="22">
        <label>G4AutoLock.hh</label>
      </node>
      <node id="14">
        <label>G4Event.hh</label>
      </node>
      <node id="17">
        <label>G4PhysicalVolumeStore.hh</label>
      </node>
      <node id="21">
        <label>G4RunManager.hh</label>
      </node>
      <node id="19">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="16">
        <label>G4Threading.hh</label>
      </node>
      <node id="15">
        <label>G4UImanager.hh</label>
      </node>
      <node id="18">
        <label>G4VPhysicalVolume.hh</label>
      </node>
      <node id="20">
        <label>PrimaryGeneratorAction.hh</label>
      </node>
      <node id="11">
        <label>Run.hh</label>
      </node>
      <node id="3">
        <label>RunAction.hh</label>
      </node>
      <node id="13">
        <label>TMXStopTheRun.hh</label>
      </node>
      <node id="6">
        <label>iostream</label>
      </node>
      <node id="7">
        <label>random</label>
      </node>
      <node id="10">
        <label>string</label>
      </node>
      <node id="9">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>License<sp/>and<sp/>Disclaimer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/><sp/>Geant4<sp/>software<sp/><sp/>is<sp/><sp/>copyright<sp/>of<sp/>the<sp/>Copyright<sp/>Holders<sp/><sp/>of<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>the<sp/>Geant4<sp/>Collaboration.<sp/><sp/>It<sp/>is<sp/>provided<sp/><sp/>under<sp/><sp/>the<sp/>terms<sp/><sp/>and<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>conditions<sp/>of<sp/>the<sp/>Geant4<sp/>Software<sp/>License,<sp/><sp/>included<sp/>in<sp/>the<sp/>file<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>LICENSE<sp/>and<sp/>available<sp/>at<sp/><sp/>http://cern.ch/geant4/license<sp/>.<sp/><sp/>These<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>include<sp/>a<sp/>list<sp/>of<sp/>copyright<sp/>holders.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>authors<sp/>of<sp/>this<sp/>software<sp/>system,<sp/>nor<sp/>their<sp/>employing<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>institutes,nor<sp/>the<sp/>agencies<sp/>providing<sp/>financial<sp/>support<sp/>for<sp/>this<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>work<sp/><sp/>make<sp/><sp/>any<sp/>representation<sp/>or<sp/><sp/>warranty,<sp/>express<sp/>or<sp/>implied,<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>regarding<sp/><sp/>this<sp/><sp/>software<sp/>system<sp/>or<sp/>assume<sp/>any<sp/>liability<sp/>for<sp/>its<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>use.<sp/><sp/>Please<sp/>see<sp/>the<sp/>license<sp/>in<sp/>the<sp/>file<sp/><sp/>LICENSE<sp/><sp/>and<sp/>URL<sp/>above<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>for<sp/>the<sp/>full<sp/>disclaimer<sp/>and<sp/>the<sp/>limitation<sp/>of<sp/>liability.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>This<sp/><sp/>code<sp/><sp/>implementation<sp/>is<sp/>the<sp/>result<sp/>of<sp/><sp/>the<sp/><sp/>scientific<sp/>and<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>technical<sp/>work<sp/>of<sp/>the<sp/>GEANT4<sp/>collaboration.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>By<sp/>using,<sp/><sp/>copying,<sp/><sp/>modifying<sp/>or<sp/><sp/>distributing<sp/>the<sp/>software<sp/>(or<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>any<sp/>work<sp/>based<sp/><sp/>on<sp/>the<sp/>software)<sp/><sp/>you<sp/><sp/>agree<sp/><sp/>to<sp/>acknowledge<sp/>its<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>use<sp/><sp/>in<sp/><sp/>resulting<sp/><sp/>scientific<sp/><sp/>publications,<sp/><sp/>and<sp/>indicate<sp/>your<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>acceptance<sp/>of<sp/>all<sp/>terms<sp/>of<sp/>the<sp/>Geant4<sp/>Software<sp/>license.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="30"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EventAction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Donovan<sp/>Maire,<sp/>Transmutex,<sp/>18/10/2019</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Transmutex<sp/>SA<sp/>--<sp/>all<sp/>rights<sp/>reserved</highlight></codeline>
<codeline lineno="36"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;EventAction.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;RunAction.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Analysis.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXRandomDistribution3D.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXMergeThreadsResults.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Run.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXOption.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXStopTheRun.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GEANT4<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Event.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4UImanager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Threading.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PhysicalVolumeStore.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4VPhysicalVolume.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4SystemOfUnits.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;PrimaryGeneratorAction.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>G4MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&quot;G4MTRunManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4RunManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>std::sqrt;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4AutoLock.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">{<sp/>G4Mutex<sp/>myHEPPrimGenMutex<sp/>=<sp/>G4MUTEX_INITIALIZER;<sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal">EventAction::EventAction(<ref refid="class_t_m_x_input_parameters" kindref="compound">TMXInputParameters</ref>*<sp/>parameter,<sp/><ref refid="class_t_m_x_random_distribution3_d" kindref="compound">TMXRandomDistribution3D</ref>&amp;<sp/>RadiusAnglesHeight,<sp/><ref refid="class_t_m_x_merge_threads_results" kindref="compound">TMXMergeThreadsResults</ref>&amp;<sp/>mergedOutput,<sp/><ref refid="class_t_m_x_bateman_decay" kindref="compound">TMXBatemanDecay</ref>&amp;<sp/>batemanDecay):</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>G4UserEventAction(),</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>neutronicParam(0)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{<sp/><sp/><sp/><sp/>Initialize(0,<sp/>parameter,<sp/>RadiusAnglesHeight,<sp/>mergedOutput,<sp/>batemanDecay);<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">EventAction::~EventAction()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>fmergedOutput<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>fInputParam<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>fRadiusAnglesHeight<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>fbatemanDecay<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventAction::BeginOfEventAction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Event*<sp/></highlight><highlight class="comment">/*evt*/</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="90"><highlight class="normal">{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Begin<sp/>of<sp/>BeginOfEventAction&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/>TMXStopTheRun::getInstance()-&gt;UserBeginOfEventAction();</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Increase<sp/>number<sp/>of<sp/>events</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/>++fnEvt;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>fEdep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>fNbFission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>fEperFission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/>fNb_EperFission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>beginning<sp/>of<sp/>a<sp/>new<sp/>cycle<sp/>-&gt;<sp/>Reset<sp/>of<sp/>keff<sp/>estimators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>fKeff_collision<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/>fKeff_analogAbs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>fKeff_implicitAbs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>fKeff_trackLength<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/>fNsourceNeutronPerEvent<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/>fVec_pos.clear();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>fTimer.Start();</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>user<sp/>actions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>fnEvt%fInputParam-&gt;PrintModulo<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_run" kindref="compound">Run</ref>*<sp/>run<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="class_run" kindref="compound">Run</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(G4RunManager::GetRunManager()-&gt;GetNonConstCurrentRun());</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>fRunNumber<sp/>!=<sp/>run-&gt;GetRunNumber()<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRunNumber<sp/><sp/>=<sp/>run-&gt;GetRunNumber();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize(<sp/>run-&gt;GetRunNumber(),<sp/>fInputParam,<sp/>*fRadiusAnglesHeight,<sp/>*fmergedOutput,<sp/>*fbatemanDecay);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;EventAction:<sp/>Event<sp/>#<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fnEvt<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>started&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fnEvt<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Time<sp/>per<sp/>event<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>fTotalTime<sp/>/<sp/>fnEvt<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>seconds&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fInputParam-&gt;nThreads<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Finishing<sp/>in<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>(fInputParam-&gt;Nparticles<sp/>-<sp/>run-&gt;GetNumberOfEvent())<sp/>/<sp/>fInputParam-&gt;nThreads<sp/>*<sp/>fTotalTime<sp/>/<sp/>fnEvt<sp/>/<sp/>3600.<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>hours&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>G4endl;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/>CalculationRelAbundU235_238();</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;End<sp/>of<sp/>BeginOfEventAction&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">//<sp/>At<sp/>the<sp/>end<sp/>of<sp/>the<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventAction::EndOfEventAction(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Event*<sp/></highlight><highlight class="comment">/*evt*/</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;Begin<sp/>of<sp/>EndOfEventAction&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>RunAction::Instance()-&gt;AddEtotDeposit(fEdep);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(TMXOption::IsKeffCalculation(fInputParam-&gt;int_Option)<sp/></highlight><highlight class="comment">/*&amp;&amp;<sp/>fnEvt&lt;3e4*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>UpdateSpaceDistribution();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>dedicated<sp/>keff<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Update<sp/>MCNP<sp/>keff<sp/>estimators<sp/>at<sp/>each<sp/>cycle<sp/>end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fNsourceNeutronPerEvent&gt;0)<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neutronicParam-&gt;UpdateKeffEstimators(fKeff_collision,<sp/>fKeff_analogAbs,<sp/>fKeff_implicitAbs,<sp/>fKeff_trackLength,<sp/>fNsourceNeutronPerEvent);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Do<sp/>the<sp/>calculation<sp/>of<sp/>neutronic<sp/>parameters<sp/>of<sp/>interest</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>neutronicParam-&gt;DoCalculationAndPrintValues(fN0abs,<sp/>fFissionN,<sp/>fInelasticN,<sp/>fN_AbsU5,<sp/>fRelativeAbundanceU235,<sp/><sp/>fN_CapU8,<sp/>fN_absTot,<sp/>fRelativeAbundanceU238,<sp/>fEdep,<sp/>fEbeam,<sp/>fNbFission,<sp/>fEperFission,<sp/>fNb_EperFission,<sp/>fnu,<sp/>fN0fission,<sp/>*fRadiusAnglesHeight,<sp/>fnEvt,<sp/>fNbNperGeneration,<sp/>fNf);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>&quot;Burn-up<sp/>calculation&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Burn-up<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>G4AutoLock<sp/>lock(&amp;myHEPPrimGenMutex);<sp/><sp/>//<sp/>if<sp/>G4MULTITHREADED<sp/>mode<sp/>activated,<sp/>it<sp/>is<sp/>necessary<sp/>to<sp/>lock<sp/>other<sp/>threads<sp/>before<sp/>Writing<sp/>in<sp/>the<sp/>shared<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>fbatemanDecay-&gt;AddTransmutedElement(vectorTransmutedElement);<sp/><sp/>//<sp/>Add<sp/>Transmuted<sp/>Elements<sp/>to<sp/>the<sp/>global<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>fbatemanDecay-&gt;AddTransmutedSrcElem(vectorSourceElement);<sp/><sp/>//<sp/>Add<sp/>Transmuted<sp/>Elements<sp/>considered<sp/>as<sp/>source<sp/>to<sp/>the<sp/>global<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>vectorTransmutedElement.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>vectorSourceElement.clear();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>timer<sp/>to<sp/>estimate<sp/>the<sp/>time<sp/>per<sp/>event</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>fTimer.Stop();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>fTotalTime<sp/>+=<sp/>fTimer.GetRealElapsed();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>the<sp/>user<sp/>press<sp/>ctrl+c<sp/>the<sp/>calculation<sp/>is<sp/>stopped<sp/>properly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>TMXStopTheRun::getInstance()-&gt;UserEndOfEventAction();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;End<sp/>of<sp/>EndOfEventAction&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventAction::AddWeight(G4double<sp/>X,<sp/>G4double<sp/>Y,<sp/>G4double<sp/>Z)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>pos{X,<sp/>Y,<sp/>Z};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>fVec_pos.push_back(pos);</highlight></codeline>
<codeline lineno="173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventAction::UpdateSpaceDistribution()<sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Change<sp/>the<sp/>distribution<sp/>to<sp/>converge<sp/>to<sp/>eigenstate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>G4AutoLock<sp/>lock(&amp;myHEPPrimGenMutex);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>fRadiusAnglesHeight-&gt;AddBinWeights(fVec_pos);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventAction::Initialize(G4int<sp/>RunNumber,<sp/><ref refid="class_t_m_x_input_parameters" kindref="compound">TMXInputParameters</ref>*<sp/>parameter,<sp/><ref refid="class_t_m_x_random_distribution3_d" kindref="compound">TMXRandomDistribution3D</ref>&amp;<sp/>RadiusAnglesHeight,<sp/><ref refid="class_t_m_x_merge_threads_results" kindref="compound">TMXMergeThreadsResults</ref>&amp;<sp/>mergedOutput,<sp/><ref refid="class_t_m_x_bateman_decay" kindref="compound">TMXBatemanDecay</ref>&amp;<sp/>batemanDecay)<sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>&quot;EventAction<sp/>Initialization&quot;<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>fUI<sp/>=<sp/>G4UImanager::GetUIpointer();</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/>fInputParam<sp/>=<sp/>parameter;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#ifdef<sp/>G4MULTITHREADED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadID<sp/>=<sp/>G4Threading::G4GetThreadId();</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadID<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(neutronicParam)</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neutronicParam-&gt;Initialize(RunNumber,<sp/>mergedOutput,<sp/>fInputParam,<sp/>threadID);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>neutronicParam<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_neutronic_param" kindref="compound">TMXNeutronicParam</ref>(RunNumber,<sp/>mergedOutput,<sp/>fInputParam,<sp/>threadID);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>fmergedOutput<sp/>=<sp/>&amp;mergedOutput;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>fRunNumber<sp/>=<sp/>RunNumber;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/>fnEvt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>fTotalTime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>fbool_First<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>fNbFission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/>fNf<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/>fN0abs<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/>fN0fission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>fInelasticN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>fFissionN<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/>fNbNperGeneration.clear();</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/>fnu<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/>fRelativeAbundanceU235<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/>fRelativeAbundanceU238<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>fN_AbsU5<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>fN_CapU8<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>fN_absTot=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>fEdep<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/>fEperFission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>fNb_EperFission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>fN_primaryEscape<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fInputParam-&gt;ExtSourcePath.empty())</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fEbeam<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fEbeam<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal"><ref refid="class_primary_generator_action" kindref="compound">PrimaryGeneratorAction</ref>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal"><sp/>(G4RunManager::GetRunManager()-&gt;GetUserPrimaryGeneratorAction())-&gt;GetBeamEnergy()/eV;<sp/></highlight><highlight class="comment">//<sp/>eV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Random<sp/>sampling<sp/>of<sp/>source<sp/>neutron<sp/>position<sp/>for<sp/>keff<sp/>Calculation<sp/>(fInputParam-&gt;int_Option<sp/>=<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>fVec_pos.clear();</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>fRadiusAnglesHeight<sp/>=<sp/>&amp;RadiusAnglesHeight;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculation<sp/>of<sp/>burn-up</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>fbatemanDecay<sp/>=<sp/>&amp;batemanDecay;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>vectorTransmutedElement.clear();</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/>vectorSourceElement.clear();</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>fEdep_fission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/>fEkin_sec_fission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/>fNtot_fission<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal">}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EventAction::CalculationRelAbundU235_238()<sp/>{</highlight><highlight class="comment">//<sp/>Calculation<sp/>of<sp/>the<sp/>relative<sp/>abundance<sp/>of<sp/>U-235<sp/>and<sp/>U-238<sp/>in<sp/>the<sp/>fuel<sp/>to<sp/>calculate<sp/>the<sp/>ratio<sp/>between<sp/>capture<sp/>on<sp/>U-238<sp/>and<sp/>fission<sp/>on<sp/>U-235<sp/>(quality<sp/>of<sp/>the<sp/>neutron<sp/>energy<sp/>spectrum)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fbool_First)<sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Relative<sp/>abundance<sp/>of<sp/>U-235<sp/>and<sp/>U-238<sp/>from<sp/>the<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>G4VPhysicalVolume*<sp/>Fuel<sp/>=<sp/>G4PhysicalVolumeStore::GetInstance()-&gt;GetVolume(</highlight><highlight class="stringliteral">&quot;Fuel&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>WARNING<sp/>the<sp/>name<sp/>of<sp/>the<sp/>physical<sp/>volume<sp/>is<sp/>hard<sp/>coded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Fuel)<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4Material*<sp/>BreederMaterial<sp/>=<sp/>Fuel-&gt;GetLogicalVolume()-&gt;GetMaterial();</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;<sp/>j<sp/>&lt;<sp/>BreederMaterial-&gt;GetNumberOfElements();<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Element*<sp/>Element<sp/>=<sp/>BreederMaterial-&gt;GetElement(j);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Element-&gt;GetName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;TS_U_of_Uranium_Dioxide&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(Element-&gt;GetName()<sp/>==<sp/>&quot;enriched<sp/>Uranium&quot;)<sp/>{<sp/>//<sp/>WARNING<sp/>the<sp/>name<sp/>of<sp/>the<sp/>element<sp/>is<sp/>hard<sp/>coded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double*<sp/>RelativAbundanceVec=<sp/>Element-&gt;GetRelativeAbundanceVector();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i<sp/>&lt;<sp/>Element-&gt;GetNumberOfIsotopes();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Isotope*<sp/>Isotope<sp/>=<sp/>Element-&gt;GetIsotope(i);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Isotope-&gt;GetName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;U235&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>WARNING<sp/>the<sp/>name<sp/>of<sp/>the<sp/>isotope<sp/>is<sp/>hard<sp/>coded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRelativeAbundanceU235<sp/>=<sp/>RelativAbundanceVec[i]/Isotope-&gt;GetA();}</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(Isotope-&gt;GetName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;U238&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>WARNING<sp/>the<sp/>name<sp/>of<sp/>the<sp/>isotope<sp/>is<sp/>hard<sp/>coded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fRelativeAbundanceU238<sp/>=<sp/>RelativAbundanceVec[i]/Isotope-&gt;GetA();}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>fbool_First<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal">G4double<sp/>EventAction::GetNu(G4double<sp/>en)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CLHEP::eV;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nump<sp/>=<sp/>85;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/>G4double<sp/>nu235[170]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/>1.000000e-5,2.429850e+0,2.000000e-1,2.429850e+0,3.000000e-1,2.433850e+0,1.500000e+0,2.433850e+0,2.040000e+0,2.405850e+0,</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/>2.500000e+0,2.446650e+0,3.610000e+0,2.449650e+0,4.850000e+0,2.398500e+0,6.390000e+0,2.420920e+0,7.080000e+0,2.423830e+0,</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/>8.790000e+0,2.417800e+0,9.300000e+0,2.417800e+0,1.016000e+1,2.398710e+0,1.239000e+1,2.410770e+0,1.545000e+1,2.410970e+0,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/>1.610000e+1,2.407750e+0,1.667000e+1,2.417800e+0,1.805000e+1,2.410770e+0,1.930000e+1,2.408760e+0,2.110000e+1,2.417800e+0,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/>2.295000e+1,2.423830e+0,2.365000e+1,2.420820e+0,2.555000e+1,2.425840e+0,2.648000e+1,2.424830e+0,3.086000e+1,2.383850e+0,</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/>3.207000e+1,2.400750e+0,3.352000e+1,2.409650e+0,3.439000e+1,2.433450e+0,3.520000e+1,2.420550e+0,3.830000e+1,2.415550e+0,</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/>3.941000e+1,2.392750e+0,4.460000e+1,2.358150e+0,5.126000e+1,2.418550e+0,5.222000e+1,2.443350e+0,5.345000e+1,2.456150e+0,</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/>5.506000e+1,2.418550e+0,5.868000e+1,2.359050e+0,7.240000e+1,2.432450e+0,7.457000e+1,2.360050e+0,1.000000e+2,2.433800e+0,</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/>1.000000e+3,2.431810e+0,2.250000e+3,2.427590e+0,7.000000e+3,2.417970e+0,2.000000e+4,2.417390e+0,5.000000e+4,2.418100e+0,</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/>6.000000e+4,2.419220e+0,7.000000e+4,2.422000e+0,8.000000e+4,2.430880e+0,1.700000e+5,2.461380e+0,2.000000e+5,2.468670e+0,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/>3.000000e+5,2.474470e+0,4.000000e+5,2.478470e+0,6.000000e+5,2.488800e+0,7.000000e+5,2.498080e+0,8.500000e+5,2.514080e+0,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/>9.000000e+5,2.518670e+0,1.000000e+6,2.529690e+0,1.200000e+6,2.549830e+0,1.600000e+6,2.599670e+0,1.800000e+6,2.623370e+0,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/>2.400000e+6,2.690480e+0,2.600000e+6,2.720510e+0,3.500000e+6,2.827820e+0,4.000000e+6,2.892750e+0,4.500000e+6,2.967100e+0,</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/>5.000000e+6,3.045350e+0,5.500000e+6,3.132000e+0,6.000000e+6,3.222550e+0,6.500000e+6,3.317200e+0,7.000000e+6,3.405400e+0,</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/>7.500000e+6,3.476410e+0,8.000000e+6,3.544630e+0,9.000000e+6,3.689830e+0,9.500000e+6,3.761160e+0,1.050000e+7,3.899280e+0,</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/>1.200000e+7,4.101020e+0,1.250000e+7,4.169660e+0,1.300000e+7,4.241150e+0,1.450000e+7,4.462290e+0,1.600000e+7,4.690100e+0,</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/>1.650000e+7,4.763750e+0,1.700000e+7,4.833440e+0,1.800000e+7,4.964850e+0,1.900000e+7,5.090170e+0,3.000000e+7,6.249000e+0};</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu235[2*i];};</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nu<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu235[2*i+1];};</highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>G4double<sp/>enev<sp/>=<sp/>en/eV;</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&lt;=<sp/>e(0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu(0);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&gt;=<sp/>e(nump-1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu(nump-1);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>G4int<sp/>ilow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>G4int<sp/>ihig<sp/>=<sp/>nump-1;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/>G4int<sp/>ihal=0;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ihig-ilow<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&gt;<sp/>e(ihal=(ilow+ihig)/2))<sp/>ilow<sp/>=<sp/>ihal;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ihig<sp/>=<sp/>ihal;</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&lt;<sp/>e(ilow)<sp/>||<sp/>enev<sp/>&gt;<sp/>e(ihig))<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AAAAAAAAAAAAAAGH&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu(ilow)<sp/>+<sp/>(nu(ihig)-nu(ilow))<sp/>*<sp/>(enev<sp/>-<sp/>e(ilow))<sp/>/<sp/>(e(ihig)-e(ilow));</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/EventAction.cc"/>
  </compounddef>
</doxygen>
