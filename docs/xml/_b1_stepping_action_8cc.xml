<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_b1_stepping_action_8cc" kind="file" language="C++">
    <compoundname>B1SteppingAction.cc</compoundname>
    <includes refid="_b1_stepping_action_8hh" local="yes">B1SteppingAction.hh</includes>
    <includes refid="_b1_event_action_8hh" local="yes">B1EventAction.hh</includes>
    <includes refid="_b1_detector_construction_8hh" local="yes">B1DetectorConstruction.hh</includes>
    <includes local="yes">G4Step.hh</includes>
    <includes local="yes">G4Event.hh</includes>
    <includes local="yes">G4RunManager.hh</includes>
    <includes local="yes">G4LogicalVolume.hh</includes>
    <includes local="yes">globals.hh</includes>
    <includes local="yes">G4PhysicalConstants.hh</includes>
    <includes local="yes">G4SystemOfUnits.hh</includes>
    <includes local="yes">TMXkeff.hh</includes>
    <includes local="yes">G4UnitsTable.hh</includes>
    <includes local="yes">G4HadronicProcess.hh</includes>
    <incdepgraph>
      <node id="8">
        <label>B1DetectorConstruction.hh</label>
        <link refid="_b1_detector_construction_8hh"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>B1EventAction.hh</label>
        <link refid="_b1_event_action_8hh"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>B1SteppingAction.hh</label>
        <link refid="_b1_stepping_action_8hh"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/testKeff_v0.1/src/B1SteppingAction.cc</label>
        <link refid="_b1_stepping_action_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>G4Element.hh</label>
      </node>
      <node id="12">
        <label>G4Event.hh</label>
      </node>
      <node id="19">
        <label>G4HadronicProcess.hh</label>
      </node>
      <node id="14">
        <label>G4LogicalVolume.hh</label>
      </node>
      <node id="5">
        <label>G4Material.hh</label>
      </node>
      <node id="15">
        <label>G4PhysicalConstants.hh</label>
      </node>
      <node id="13">
        <label>G4RunManager.hh</label>
      </node>
      <node id="11">
        <label>G4Step.hh</label>
      </node>
      <node id="16">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="18">
        <label>G4UnitsTable.hh</label>
      </node>
      <node id="7">
        <label>G4UserEventAction.hh</label>
      </node>
      <node id="3">
        <label>G4UserSteppingAction.hh</label>
      </node>
      <node id="9">
        <label>G4VUserDetectorConstruction.hh</label>
      </node>
      <node id="17">
        <label>TMXkeff.hh</label>
      </node>
      <node id="4">
        <label>globals.hh</label>
      </node>
    </incdepgraph>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="_b1_stepping_action_8cc_1afc7b7e3f0785f6330340d661390a6ea2" prot="public" static="no" strong="no">
        <type></type>
        <name>reactions</name>
        <enumvalue id="_b1_stepping_action_8cc_1afc7b7e3f0785f6330340d661390a6ea2a2d2a6ef1dd2a070a7cf0b20857784a61" prot="public">
          <name>nFission</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_b1_stepping_action_8cc_1afc7b7e3f0785f6330340d661390a6ea2a9879e65b3dcf068fb8900c347aea685f" prot="public">
          <name>nCapture</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_b1_stepping_action_8cc_1afc7b7e3f0785f6330340d661390a6ea2a133b528f1acbd3d07080e61de75d0d52" prot="public">
          <name>hadElastic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="_b1_stepping_action_8cc_1afc7b7e3f0785f6330340d661390a6ea2ae5134bd44f3080d907e6c54bdbe96022" prot="public">
          <name>neutronInelastic</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/testKeff_v0.1/src/B1SteppingAction.cc" line="170" column="1" bodyfile="/Users/Transmutex/Simulation/ADS_SimulationCode/testKeff_v0.1/src/B1SteppingAction.cc" bodystart="171" bodyend="176"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Implementation of the <ref refid="class_b1_stepping_action" kindref="compound">B1SteppingAction</ref> class. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>License<sp/>and<sp/>Disclaimer<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>The<sp/><sp/>Geant4<sp/>software<sp/><sp/>is<sp/><sp/>copyright<sp/>of<sp/>the<sp/>Copyright<sp/>Holders<sp/><sp/>of<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>the<sp/>Geant4<sp/>Collaboration.<sp/><sp/>It<sp/>is<sp/>provided<sp/><sp/>under<sp/><sp/>the<sp/>terms<sp/><sp/>and<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>conditions<sp/>of<sp/>the<sp/>Geant4<sp/>Software<sp/>License,<sp/><sp/>included<sp/>in<sp/>the<sp/>file<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>LICENSE<sp/>and<sp/>available<sp/>at<sp/><sp/>http://cern.ch/geant4/license<sp/>.<sp/><sp/>These<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>include<sp/>a<sp/>list<sp/>of<sp/>copyright<sp/>holders.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>Neither<sp/>the<sp/>authors<sp/>of<sp/>this<sp/>software<sp/>system,<sp/>nor<sp/>their<sp/>employing<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>institutes,nor<sp/>the<sp/>agencies<sp/>providing<sp/>financial<sp/>support<sp/>for<sp/>this<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>work<sp/><sp/>make<sp/><sp/>any<sp/>representation<sp/>or<sp/><sp/>warranty,<sp/>express<sp/>or<sp/>implied,<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>regarding<sp/><sp/>this<sp/><sp/>software<sp/>system<sp/>or<sp/>assume<sp/>any<sp/>liability<sp/>for<sp/>its<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>use.<sp/><sp/>Please<sp/>see<sp/>the<sp/>license<sp/>in<sp/>the<sp/>file<sp/><sp/>LICENSE<sp/><sp/>and<sp/>URL<sp/>above<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>for<sp/>the<sp/>full<sp/>disclaimer<sp/>and<sp/>the<sp/>limitation<sp/>of<sp/>liability.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>This<sp/><sp/>code<sp/><sp/>implementation<sp/>is<sp/>the<sp/>result<sp/>of<sp/><sp/>the<sp/><sp/>scientific<sp/>and<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>technical<sp/>work<sp/>of<sp/>the<sp/>GEANT4<sp/>collaboration.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>By<sp/>using,<sp/><sp/>copying,<sp/><sp/>modifying<sp/>or<sp/><sp/>distributing<sp/>the<sp/>software<sp/>(or<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>any<sp/>work<sp/>based<sp/><sp/>on<sp/>the<sp/>software)<sp/><sp/>you<sp/><sp/>agree<sp/><sp/>to<sp/>acknowledge<sp/>its<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>use<sp/><sp/>in<sp/><sp/>resulting<sp/><sp/>scientific<sp/><sp/>publications,<sp/><sp/>and<sp/>indicate<sp/>your<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>*<sp/>acceptance<sp/>of<sp/>all<sp/>terms<sp/>of<sp/>the<sp/>Geant4<sp/>Software<sp/>license.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>********************************************************************</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="29"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b1_stepping_action_8hh" kindref="compound">B1SteppingAction.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b1_event_action_8hh" kindref="compound">B1EventAction.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_b1_detector_construction_8hh" kindref="compound">B1DetectorConstruction.hh</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Step.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Event.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4RunManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4LogicalVolume.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;globals.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PhysicalConstants.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4SystemOfUnits.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXkeff.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal">B1SteppingAction::B1SteppingAction(<ref refid="class_b1_event_action" kindref="compound">B1EventAction</ref>*<sp/>eventAction)</highlight></codeline>
<codeline lineno="46"><highlight class="normal">:<sp/>G4UserSteppingAction()</highlight></codeline>
<codeline lineno="47"><highlight class="normal">{</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal">B1SteppingAction::~B1SteppingAction()</highlight></codeline>
<codeline lineno="54"><highlight class="normal">{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4UnitsTable.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>B1SteppingAction::UserSteppingAction(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step*<sp/>theStep)</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_m_xkeff_1ae1e9f4676a54a9533cfe95f2d3b38805" kindref="member">TMXkeff::getInstance</ref>()-&gt;<ref refid="class_t_m_xkeff_1a33a603dcd2f64217c3e97ace0e62a110" kindref="member">inUserSteppingAction</ref>(theStep);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/><sp/><sp/><sp/>if(theStep-&gt;GetPostStepPoint()-&gt;GetPhysicalVolume())</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4StepPoint*<sp/>thePostPoint<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>theStep-&gt;GetPostStepPoint();</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4String<sp/>processName<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>thePostPoint-&gt;GetProcessDefinedStep()-&gt;GetProcessName();</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4Track*<sp/>theTrack<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>theStep-&gt;GetTrack();</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4ParticleDefinition*<sp/>particleType<sp/>=<sp/>theTrack-&gt;GetDefinition();</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4String<sp/>particleName<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>particleType-&gt;GetParticleName();</highlight></codeline>
<codeline lineno="72"><highlight class="comment"></highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>MaterialSigmaF<sp/><sp/><sp/>=<sp/>GetMaterialXS(theStep,<sp/>&quot;nFission&quot;);</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>MaterialSimaCap<sp/><sp/>=<sp/>GetMaterialXS(theStep,<sp/>&quot;nCapture&quot;);</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>MaterialSigmaAbs<sp/>=<sp/>MaterialSigmaF</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>MaterialSimaCap;</highlight></codeline>
<codeline lineno="77"><highlight class="comment"></highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>MaterialSigmaTot<sp/>=<sp/>GetMaterialXS(theStep,<sp/>&quot;hadElastic&quot;)</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>GetMaterialXS(theStep,<sp/>&quot;neutronInelastic&quot;)</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>MaterialSigmaF</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>MaterialSimaCap;</highlight></codeline>
<codeline lineno="82"><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(processName<sp/>==<sp/>&quot;nFission&quot;<sp/>||<sp/>processName<sp/>==<sp/>&quot;nCapture&quot;)</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TMXkeff::getInstance()-&gt;addAbsorption(MaterialSigmaF/MaterialSigmaAbs);</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(<sp/>theStep-&gt;GetPostStepPoint()-&gt;GetStepStatus()<sp/>!=<sp/>fGeomBoundary<sp/>)</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TMXkeff::getInstance()-&gt;addCollision(<sp/>MaterialSigmaF<sp/>/<sp/>MaterialSigmaTot);</highlight></codeline>
<codeline lineno="90"><highlight class="comment"></highlight></codeline>
<codeline lineno="91"><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(MaterialSigmaF<sp/>*<sp/>theStep-&gt;GetStepLength()<sp/>/<sp/>cm<sp/>!=<sp/>0)<sp/>std::cout&lt;&lt;MaterialSigmaF<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;&lt;&lt;<sp/>theStep-&gt;GetStepLength()<sp/>/<sp/>cm<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;&lt;&lt;<sp/>MaterialSigmaF<sp/>*<sp/>(theStep-&gt;GetStepLength()<sp/>/<sp/>cm)&lt;&lt;std::endl;</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TMXkeff::getInstance()-&gt;addTrackLength(MaterialSigmaF<sp/>*<sp/>(theStep-&gt;GetStepLength()<sp/>/<sp/>cm));</highlight></codeline>
<codeline lineno="93"><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment"></highlight></codeline>
<codeline lineno="95"><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(processName<sp/>==<sp/>&quot;nFission&quot;)</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>std::vector&lt;const<sp/>G4Track*&gt;<sp/>*secondaries<sp/>=<sp/>theStep-&gt;GetSecondaryInCurrentStep();</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>countSecNeutrons<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for(G4int<sp/>i=0;<sp/>i&lt;(G4int)secondaries-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4String<sp/>secondary_particleName<sp/>=<sp/>(*secondaries)[i]-&gt;GetDefinition()-&gt;GetParticleName();</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(secondary_particleName<sp/>==<sp/>&quot;neutron&quot;)</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countSecNeutrons++;</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TMXkeff::getInstance()-&gt;addFissionSite(thePostPoint-&gt;GetPosition(),<sp/>(*secondaries)[i]-&gt;GetMomentumDirection(),<sp/>(*secondaries)[i]-&gt;GetKineticEnergy());</highlight></codeline>
<codeline lineno="107"><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TMXkeff::getInstance()-&gt;addFission(countSecNeutrons);</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theTrack-&gt;SetTrackStatus(fKillTrackAndSecondaries);</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if(processName<sp/>==<sp/>&quot;RadioactiveDecayBase&quot;)</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theTrack-&gt;SetTrackStatus(fKillTrackAndSecondaries);</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal">G4double<sp/>B1SteppingAction::GetNu(G4double<sp/>en)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>CLHEP::eV;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nump<sp/>=<sp/>85;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>G4double<sp/>nu235[170]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/>1.000000e-5,2.429850e+0,2.000000e-1,2.429850e+0,3.000000e-1,2.433850e+0,1.500000e+0,2.433850e+0,2.040000e+0,2.405850e+0,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/>2.500000e+0,2.446650e+0,3.610000e+0,2.449650e+0,4.850000e+0,2.398500e+0,6.390000e+0,2.420920e+0,7.080000e+0,2.423830e+0,</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/>8.790000e+0,2.417800e+0,9.300000e+0,2.417800e+0,1.016000e+1,2.398710e+0,1.239000e+1,2.410770e+0,1.545000e+1,2.410970e+0,</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/>1.610000e+1,2.407750e+0,1.667000e+1,2.417800e+0,1.805000e+1,2.410770e+0,1.930000e+1,2.408760e+0,2.110000e+1,2.417800e+0,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/>2.295000e+1,2.423830e+0,2.365000e+1,2.420820e+0,2.555000e+1,2.425840e+0,2.648000e+1,2.424830e+0,3.086000e+1,2.383850e+0,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/>3.207000e+1,2.400750e+0,3.352000e+1,2.409650e+0,3.439000e+1,2.433450e+0,3.520000e+1,2.420550e+0,3.830000e+1,2.415550e+0,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/>3.941000e+1,2.392750e+0,4.460000e+1,2.358150e+0,5.126000e+1,2.418550e+0,5.222000e+1,2.443350e+0,5.345000e+1,2.456150e+0,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/>5.506000e+1,2.418550e+0,5.868000e+1,2.359050e+0,7.240000e+1,2.432450e+0,7.457000e+1,2.360050e+0,1.000000e+2,2.433800e+0,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/>1.000000e+3,2.431810e+0,2.250000e+3,2.427590e+0,7.000000e+3,2.417970e+0,2.000000e+4,2.417390e+0,5.000000e+4,2.418100e+0,</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/>6.000000e+4,2.419220e+0,7.000000e+4,2.422000e+0,8.000000e+4,2.430880e+0,1.700000e+5,2.461380e+0,2.000000e+5,2.468670e+0,</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/>3.000000e+5,2.474470e+0,4.000000e+5,2.478470e+0,6.000000e+5,2.488800e+0,7.000000e+5,2.498080e+0,8.500000e+5,2.514080e+0,</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/>9.000000e+5,2.518670e+0,1.000000e+6,2.529690e+0,1.200000e+6,2.549830e+0,1.600000e+6,2.599670e+0,1.800000e+6,2.623370e+0,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/>2.400000e+6,2.690480e+0,2.600000e+6,2.720510e+0,3.500000e+6,2.827820e+0,4.000000e+6,2.892750e+0,4.500000e+6,2.967100e+0,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/>5.000000e+6,3.045350e+0,5.500000e+6,3.132000e+0,6.000000e+6,3.222550e+0,6.500000e+6,3.317200e+0,7.000000e+6,3.405400e+0,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/>7.500000e+6,3.476410e+0,8.000000e+6,3.544630e+0,9.000000e+6,3.689830e+0,9.500000e+6,3.761160e+0,1.050000e+7,3.899280e+0,</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/>1.200000e+7,4.101020e+0,1.250000e+7,4.169660e+0,1.300000e+7,4.241150e+0,1.450000e+7,4.462290e+0,1.600000e+7,4.690100e+0,</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/>1.650000e+7,4.763750e+0,1.700000e+7,4.833440e+0,1.800000e+7,4.964850e+0,1.900000e+7,5.090170e+0,3.000000e+7,6.249000e+0};</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>e<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu235[2*i];};</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>nu<sp/>=<sp/>[&amp;]<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu235[2*i+1];};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>G4double<sp/>enev<sp/>=<sp/>en/eV;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&lt;=<sp/>e(0))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu(0);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&gt;=<sp/>e(nump-1))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu(nump-1);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>G4int<sp/>ilow<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/>G4int<sp/>ihig<sp/>=<sp/>nump-1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/>G4int<sp/>ihal=0;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ihig-ilow<sp/>&gt;<sp/>1)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&gt;<sp/>e(ihal=(ilow+ihig)/2))<sp/>ilow<sp/>=<sp/>ihal;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>ihig<sp/>=<sp/>ihal;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(enev<sp/>&lt;<sp/>e(ilow)<sp/>||<sp/>enev<sp/>&gt;<sp/>e(ihig))<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;AAAAAAAAAAAAAAGH&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>std::cout&lt;&lt;enev<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;&lt;&lt;<sp/>nu(ilow)<sp/>+<sp/>(nu(ihig)-nu(ilow))<sp/>*<sp/>(enev<sp/>-<sp/>e(ilow))<sp/>/<sp/>(e(ihig)-e(ilow))&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nu(ilow)<sp/>+<sp/>(nu(ihig)-nu(ilow))<sp/>*<sp/>(enev<sp/>-<sp/>e(ilow))<sp/>/<sp/>(e(ihig)-e(ilow));</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4HadronicProcess.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>reactions</highlight></codeline>
<codeline lineno="171"><highlight class="normal">{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>nFission,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>nCapture,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>hadElastic,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>neutronInelastic</highlight></codeline>
<codeline lineno="176"><highlight class="normal">};</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">G4double<sp/>B1SteppingAction::GetMaterialXS(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step<sp/>*<sp/>theStep,<sp/>std::string<sp/>XSreaction)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>reactions<sp/>nFission;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4DynamicParticle*<sp/>particleDyn<sp/>=<sp/>theStep-&gt;GetTrack()-&gt;GetDynamicParticle();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>particleDyn<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particleDyn-&gt;GetMomentumDirection(),</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>theStep-&gt;GetPreStepPoint()-&gt;GetKineticEnergy());</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Material<sp/>*mat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ParticleDefinition<sp/>*particle<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>G4ParticleTable::GetParticleTable()-&gt;FindParticle(</highlight><highlight class="stringliteral">&quot;neutron&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HadronicProcess<sp/>*<sp/>process<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>(G4HadronicProcess<sp/>*)particle-&gt;GetProcessManager()-&gt;GetProcess(XSreaction);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>particleDyn;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>process-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>mat)*cm;</highlight></codeline>
<codeline lineno="190"><highlight class="normal">}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal">G4double<sp/>B1SteppingAction::GetMaterialFissionCrossSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step<sp/>*<sp/>theStep)<sp/><sp/>{</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>une<sp/>DynamicParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4DynamicParticle*<sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/>theStep-&gt;GetTrack()-&gt;GetDynamicParticle();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>G4StepPoint<sp/>PreStep<sp/>=<sp/>*theStep-&gt;GetPreStepPoint();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),<sp/>particleDyn-&gt;GetMomentumDirection(),<sp/>PreStep.GetKineticEnergy());</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>vérifie<sp/>l&apos;énergie<sp/>cinltique<sp/>non<sp/>nulle<sp/>sinon<sp/>on<sp/>en<sp/>défini<sp/>une<sp/>autre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Track<sp/>theTrack<sp/>=<sp/>*theStep-&gt;GetTrack();</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>if(particleDyn-&gt;GetKineticEnergy()<sp/>==<sp/>0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>matCrossSection<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Material<sp/>*mat<sp/>=<sp/>theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>G4int<sp/>nElements<sp/>=<sp/>mat-&gt;GetNumberOfElements();</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HadronicProcess*<sp/>fProcessFis<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ParticleDefinition<sp/>*particle<sp/>=<sp/>G4ParticleTable::GetParticleTable()-&gt;FindParticle(</highlight><highlight class="stringliteral">&quot;neutron&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>G4Neutron::Definition();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>le<sp/>process<sp/>manager<sp/>pour<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessManager<sp/>*pManager<sp/>=<sp/>particle-&gt;GetProcessManager();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>liste<sp/>des<sp/>processus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessVector<sp/>*pList<sp/>=<sp/>pManager-&gt;GetProcessList();</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>boucle<sp/>pour<sp/>trouver<sp/>le<sp/>bon<sp/>process<sp/>(je<sp/>pense<sp/>qu&apos;il<sp/>faut<sp/>les<sp/>imprimer<sp/>une<sp/>fois<sp/>pour<sp/>voir)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4VProcess<sp/>*pp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>pList-&gt;size();<sp/>idx++)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>(*pList)[idx];</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>ptype<sp/>=<sp/>pp-&gt;GetProcessType();</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout&lt;&lt;pp-&gt;GetProcessName()&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>pp-&gt;GetProcessType()&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>pp-&gt;GetProcessSubType()<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;&lt;&lt;<sp/>pp-&gt;GetProcessSubType()&lt;&lt;std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptype<sp/>==<sp/>4<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Reaction<sp/>of<sp/>a<sp/>neutron<sp/>with<sp/>something<sp/>else<sp/>(no<sp/>surface,<sp/>parallel<sp/>world,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hadElastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessElas<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;neutronInelastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessInel<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nCapture&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessCap<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nFission&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessFis<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;<sp/>}</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n<sp/>!!<sp/>WARNING<sp/>!!<sp/>\n<sp/>!!<sp/>At<sp/>least<sp/>one<sp/>hadronic<sp/>process<sp/>has<sp/>not<sp/>been<sp/>taken<sp/>into<sp/>account<sp/>in<sp/>SteppingAction::GetNeutronHadronicProcesses<sp/>!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>[%s,%d,%d]&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pp-&gt;GetProcessName(),<sp/>ptype,<sp/>pp-&gt;GetProcessSubType());</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(G4int<sp/>i=0;<sp/>i&lt;nElements;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matCrossSection<sp/>+=<sp/><sp/>*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()<sp/>/<sp/>(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()<sp/>*<sp/>(fProcessFis-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>(*mat-&gt;GetElementVector())[i],<sp/>mat)/cm2);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>section<sp/>efficace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matCrossSection<sp/>*<sp/>mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>fProcessFis-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>mat)/cm2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal">}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal">G4double<sp/>B1SteppingAction::GetMaterialElasticCrossSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step<sp/>*<sp/>theStep)<sp/><sp/>{</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>une<sp/>DynamicParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4DynamicParticle*<sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/>theStep-&gt;GetTrack()-&gt;GetDynamicParticle();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>vérifie<sp/>l&apos;énergie<sp/>cinltique<sp/>non<sp/>nulle<sp/>sinon<sp/>on<sp/>en<sp/>défini<sp/>une<sp/>autre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Track<sp/>theTrack<sp/>=<sp/>*theStep-&gt;GetTrack();</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>G4StepPoint<sp/>PerStep<sp/>=<sp/>*theStep-&gt;GetPreStepPoint();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(particleDyn-&gt;GetKineticEnergy()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),<sp/>particleDyn-&gt;GetMomentumDirection(),<sp/>PerStep.GetKineticEnergy());</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>matCrossSection<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Material<sp/>*mat<sp/>=<sp/>theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>G4int<sp/>nElements<sp/>=<sp/>mat-&gt;GetNumberOfElements();</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HadronicProcess*<sp/>fProcessElas<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ParticleDefinition<sp/>*particle<sp/>=<sp/>G4ParticleTable::GetParticleTable()-&gt;FindParticle(</highlight><highlight class="stringliteral">&quot;neutron&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>G4Neutron::Definition();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>le<sp/>process<sp/>manager<sp/>pour<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessManager<sp/>*pManager<sp/>=<sp/>particle-&gt;GetProcessManager();</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>liste<sp/>des<sp/>processus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessVector<sp/>*pList<sp/>=<sp/>pManager-&gt;GetProcessList();</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>boucle<sp/>pour<sp/>trouver<sp/>le<sp/>bon<sp/>process<sp/>(je<sp/>pense<sp/>qu&apos;il<sp/>faut<sp/>les<sp/>imprimer<sp/>une<sp/>fois<sp/>pour<sp/>voir)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4VProcess<sp/>*pp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>pList-&gt;size();<sp/>idx++)</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>(*pList)[idx];</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>ptype<sp/>=<sp/>pp-&gt;GetProcessType();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptype<sp/>==<sp/>4<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Reaction<sp/>of<sp/>a<sp/>neutron<sp/>with<sp/>something<sp/>else<sp/>(no<sp/>surface,<sp/>parallel<sp/>world,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hadElastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessElas<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;neutronInelastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessInel<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nCapture&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessCap<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nFission&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessFis<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n<sp/>!!<sp/>WARNING<sp/>!!<sp/>\n<sp/>!!<sp/>At<sp/>least<sp/>one<sp/>hadronic<sp/>process<sp/>has<sp/>not<sp/>been<sp/>taken<sp/>into<sp/>account<sp/>in<sp/>SteppingAction::GetNeutronHadronicProcesses<sp/>!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>[%s,%d,%d]&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pp-&gt;GetProcessName(),<sp/>ptype,<sp/>pp-&gt;GetProcessSubType());</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(G4int<sp/>i=0;<sp/>i&lt;nElements;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matCrossSection<sp/>+=<sp/>nAtomsPerVolume[i]/(G4double)TotNbAtomsPerVolume<sp/>*<sp/>(fProcessElas-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>(*mat-&gt;GetElementVector())[i],<sp/>mat)/cm2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matCrossSection<sp/>+=<sp/>*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()<sp/>/<sp/>(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()<sp/>*<sp/>(fProcessElas-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>(*mat-&gt;GetElementVector())[i],<sp/>mat)/cm2);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>section<sp/>efficace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matCrossSection*<sp/>mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>fProcessElas-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>mat/*thePrePV-&gt;GetLogicalVolume()-&gt;GetMaterial()*/);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal">}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal">G4double<sp/>B1SteppingAction::GetMaterialInelastCrossSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step<sp/>*<sp/>theStep)<sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>une<sp/>DynamicParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4DynamicParticle*<sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/>theStep-&gt;GetTrack()-&gt;GetDynamicParticle();</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>vérifie<sp/>l&apos;énergie<sp/>cinltique<sp/>non<sp/>nulle<sp/>sinon<sp/>on<sp/>en<sp/>défini<sp/>une<sp/>autre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Track<sp/>theTrack<sp/>=<sp/>*theStep-&gt;GetTrack();</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/>G4StepPoint<sp/>PerStep<sp/>=<sp/>*theStep-&gt;GetPreStepPoint();</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(particleDyn-&gt;GetKineticEnergy()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),<sp/>particleDyn-&gt;GetMomentumDirection(),<sp/>PerStep.GetKineticEnergy());</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>matCrossSection<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Material<sp/>*mat<sp/>=<sp/>theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>G4int<sp/>nElements<sp/>=<sp/>mat-&gt;GetNumberOfElements();</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HadronicProcess*<sp/>fProcessInel<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ParticleDefinition<sp/>*particle<sp/>=<sp/>G4ParticleTable::GetParticleTable()-&gt;FindParticle(</highlight><highlight class="stringliteral">&quot;neutron&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>G4Neutron::Definition();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>le<sp/>process<sp/>manager<sp/>pour<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessManager<sp/>*pManager<sp/>=<sp/>particle-&gt;GetProcessManager();</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>liste<sp/>des<sp/>processus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessVector<sp/>*pList<sp/>=<sp/>pManager-&gt;GetProcessList();</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>boucle<sp/>pour<sp/>trouver<sp/>le<sp/>bon<sp/>process<sp/>(je<sp/>pense<sp/>qu&apos;il<sp/>faut<sp/>les<sp/>imprimer<sp/>une<sp/>fois<sp/>pour<sp/>voir)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4VProcess<sp/>*pp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>pList-&gt;size();<sp/>idx++)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>(*pList)[idx];</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>ptype<sp/>=<sp/>pp-&gt;GetProcessType();</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptype<sp/>==<sp/>4<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Reaction<sp/>of<sp/>a<sp/>neutron<sp/>with<sp/>something<sp/>else<sp/>(no<sp/>surface,<sp/>parallel<sp/>world,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hadElastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessElas<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;neutronInelastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessInel<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nCapture&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessCap<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nFission&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessFis<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n<sp/>!!<sp/>WARNING<sp/>!!<sp/>\n<sp/>!!<sp/>At<sp/>least<sp/>one<sp/>hadronic<sp/>process<sp/>has<sp/>not<sp/>been<sp/>taken<sp/>into<sp/>account<sp/>in<sp/>SteppingAction::GetNeutronHadronicProcesses<sp/>!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>[%s,%d,%d]&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pp-&gt;GetProcessName(),<sp/>ptype,<sp/>pp-&gt;GetProcessSubType());</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(G4int<sp/>i=0;<sp/>i&lt;nElements;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matCrossSection<sp/>+=<sp/>nAtomsPerVolume[i]/(G4double)TotNbAtomsPerVolume<sp/>*<sp/>(fProcessInel-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>(*mat-&gt;GetElementVector())[i],<sp/>mat)/cm2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matCrossSection<sp/>+=<sp/>*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()<sp/>/<sp/>(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()<sp/>*<sp/>(fProcessInel-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>(*mat-&gt;GetElementVector())[i],<sp/>mat)/cm2);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>section<sp/>efficace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matCrossSection*<sp/>mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>fProcessInel-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>mat)/cm2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal">}</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal">G4double<sp/>B1SteppingAction::GetMaterialCaptureCrossSection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4Step<sp/>*<sp/>theStep)<sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>une<sp/>DynamicParticle</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4DynamicParticle*<sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/>theStep-&gt;GetTrack()-&gt;GetDynamicParticle();</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>vérifie<sp/>l&apos;énergie<sp/>cinltique<sp/>non<sp/>nulle<sp/>sinon<sp/>on<sp/>en<sp/>défini<sp/>une<sp/>autre</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Track<sp/>theTrack<sp/>=<sp/>*theStep-&gt;GetTrack();</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>G4StepPoint<sp/>PerStep<sp/>=<sp/>*theStep-&gt;GetPreStepPoint();</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(particleDyn-&gt;GetKineticEnergy()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>particleDyn<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),<sp/>particleDyn-&gt;GetMomentumDirection(),<sp/>PerStep.GetKineticEnergy());</highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>matCrossSection<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Material<sp/>*mat<sp/>=<sp/>theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>G4int<sp/>nElements<sp/>=<sp/>mat-&gt;GetNumberOfElements();</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/>G4HadronicProcess*<sp/>fProcessCap<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ParticleDefinition<sp/>*particle<sp/>=<sp/>G4ParticleTable::GetParticleTable()-&gt;FindParticle(</highlight><highlight class="stringliteral">&quot;neutron&quot;</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">//<sp/>G4Neutron::Definition();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>le<sp/>process<sp/>manager<sp/>pour<sp/>la<sp/>particule</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessManager<sp/>*pManager<sp/>=<sp/>particle-&gt;GetProcessManager();</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>liste<sp/>des<sp/>processus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>G4ProcessVector<sp/>*pList<sp/>=<sp/>pManager-&gt;GetProcessList();</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>boucle<sp/>pour<sp/>trouver<sp/>le<sp/>bon<sp/>process<sp/>(je<sp/>pense<sp/>qu&apos;il<sp/>faut<sp/>les<sp/>imprimer<sp/>une<sp/>fois<sp/>pour<sp/>voir)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4VProcess<sp/>*pp<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>idx<sp/>=<sp/>0;<sp/>idx<sp/>&lt;<sp/>pList-&gt;size();<sp/>idx++)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>(*pList)[idx];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4int<sp/>ptype<sp/>=<sp/>pp-&gt;GetProcessType();</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ptype<sp/>==<sp/>4<sp/>)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Reaction<sp/>of<sp/>a<sp/>neutron<sp/>with<sp/>something<sp/>else<sp/>(no<sp/>surface,<sp/>parallel<sp/>world,<sp/>etc.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hadElastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessElas<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;neutronInelastic&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessInel<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nCapture&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessCap<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((G4String)pp-&gt;GetProcessName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;nFission&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fProcessFis<sp/>=<sp/>(G4HadronicProcess<sp/>*)pp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n\n<sp/>!!<sp/>WARNING<sp/>!!<sp/>\n<sp/>!!<sp/>At<sp/>least<sp/>one<sp/>hadronic<sp/>process<sp/>has<sp/>not<sp/>been<sp/>taken<sp/>into<sp/>account<sp/>in<sp/>SteppingAction::GetNeutronHadronicProcesses<sp/>!!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/>[%s,%d,%d]&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)pp-&gt;GetProcessName(),<sp/>ptype,<sp/>pp-&gt;GetProcessSubType());</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(G4int<sp/>i=0;<sp/>i&lt;nElements;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matCrossSection<sp/>+=<sp/>nAtomsPerVolume[i]/(G4double)TotNbAtomsPerVolume<sp/>*<sp/>(fProcessCap-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>(*mat-&gt;GetElementVector())[i],<sp/>mat)/cm2);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matCrossSection<sp/>+=<sp/>*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()<sp/>/<sp/>(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()<sp/>*<sp/>(fProcessCap-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>(*mat-&gt;GetElementVector())[i],<sp/>mat)/cm2);</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>on<sp/>recupere<sp/>la<sp/>section<sp/>efficace</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>matCrossSection*<sp/>mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>return<sp/>fProcessCap-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,<sp/>mat)/cm2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal">}</highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/testKeff_v0.1/src/B1SteppingAction.cc"/>
  </compounddef>
</doxygen>
