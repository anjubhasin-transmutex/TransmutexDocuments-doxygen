<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_t_m_x_physical_volume_name_8hh" kind="file" language="C++">
    <compoundname>TMXPhysicalVolumeName.hh</compoundname>
    <includes local="no">map</includes>
    <includes local="no">string</includes>
    <includedby refid="_t_m_x_physical_volume_name_8cc" local="yes">/Users/Transmutex/Simulation/ADS_SimulationCode/TMXElements/src/TMXPhysicalVolumeName.cc</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/TMXElements/include/TMXPhysicalVolumeName.hh</label>
        <link refid="_t_m_x_physical_volume_name_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/TMXElements/include/TMXPhysicalVolumeName.hh</label>
        <link refid="_t_m_x_physical_volume_name_8hh"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/TMXElements/src/TMXPhysicalVolumeName.cc</label>
        <link refid="_t_m_x_physical_volume_name_8cc_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_t_m_x_physical_volume_name" prot="public">TMXPhysicalVolumeName</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>To<sp/>get<sp/>a<sp/>volume<sp/>number<sp/>automatically<sp/>when<sp/>defining<sp/>the<sp/>geometry.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>It<sp/>will<sp/>serve<sp/>to<sp/>fill<sp/>histograms<sp/>with<sp/>a<sp/>volume<sp/>number<sp/>corresponding<sp/>to<sp/>its<sp/>physical<sp/>volume.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>For<sp/>this<sp/>purpose,<sp/>it<sp/>is<sp/>necessary<sp/>to<sp/>instanciate<sp/>this<sp/>class<sp/>in<sp/>steppingAction<sp/>and<sp/>DetectorConstruction<sp/>or<sp/>its<sp/>subclass.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TMXPhysicalVolumeName</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Donovan<sp/>Maire,<sp/>Transmutex,<sp/>04/09/2020</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copyright<sp/>2020<sp/>Transmutex<sp/>SA<sp/>--<sp/>all<sp/>rights<sp/>reserved</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TMXPhysicalVolumeName_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TMXPhysicalVolumeName_H<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transmutex<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="class_t_m_x_physical_volume_name" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_t_m_x_physical_volume_name" kindref="compound">TMXPhysicalVolumeName</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_m_x_physical_volume_name_1a27ae3e1c1ecb5d31099f462893a7afe6" kindref="member">TMXPhysicalVolumeName</ref>();</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_m_x_physical_volume_name" kindref="compound">~TMXPhysicalVolumeName</ref>();</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Initialize();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Register<sp/>physical<sp/>volume<sp/>name<sp/>in<sp/>a<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeInTargetRegion<sp/>(std::string<sp/>PhysicalVolumeName);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Beam<sp/>pipe,<sp/>beam<sp/>window,<sp/>target<sp/>slabs,<sp/>target<sp/>coolant,<sp/>target<sp/>tube</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeInLeadRegion<sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lead<sp/>around<sp/>target<sp/>or<sp/>in<sp/>fast<sp/>neutron<sp/>flux<sp/>region,<sp/>sensors<sp/>inside<sp/>lead,<sp/>samples,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeInCoreRegion<sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fuel,<sp/>cladding,<sp/>coolant<sp/>insideand<sp/>between<sp/>fuel<sp/>rods,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeInVesselRegion<sp/>(std::string<sp/>PhysicalVolumeName);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Vessel,<sp/>coolant,<sp/>moderator,<sp/>sensors,<sp/>etc.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeInWorldRegion<sp/><sp/>(std::string<sp/>PhysicalVolumeName);<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Outside<sp/>vessel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsTarget<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);<sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>slabs</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsTargetCoolant(std::string<sp/>PhysicalVolumeName);<sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>coolant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsTargetTub<sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);<sp/><sp/></highlight><highlight class="comment">//<sp/>Target<sp/>tube<sp/>surrounding<sp/>the<sp/>target<sp/>coolant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsLead<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsFuel<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsWorld<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsBeamPipe<sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsBeamWindow<sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsModerator<sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsVessel<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsSample<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetNewVolumeAsSensor<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(std::string<sp/>PhysicalVolumeName);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>and<sp/>Set<sp/>volume<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetVolumeNumber(std::string<sp/>PhysicalVolumeName)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fMap_PhysicalVolume[PhysicalVolumeName];<sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetVolumeNumber(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>VolumeNumber,<sp/>std::string<sp/>PhysicalVolumeName)<sp/>{<sp/>fMap_PhysicalVolume[PhysicalVolumeName]<sp/>=<sp/>VolumeNumber;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Test<sp/>of<sp/>the<sp/>physical<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsTarget(std::string<sp/>PhysicalVolumeName)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fMap_PhysicalVolume[PhysicalVolumeName]<sp/>==<sp/>targetNbr);<sp/>}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsLead<sp/><sp/>(std::string<sp/>PhysicalVolumeName)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fMap_PhysicalVolume[PhysicalVolumeName]<sp/>==<sp/>leadNbr<sp/><sp/>);<sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::map&lt;<sp/>std::string,<sp/>int&gt;<sp/>fMap_PhysicalVolume;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>targetNbr;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leadNbr;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal">};</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/TMXElements/include/TMXPhysicalVolumeName.hh"/>
  </compounddef>
</doxygen>
