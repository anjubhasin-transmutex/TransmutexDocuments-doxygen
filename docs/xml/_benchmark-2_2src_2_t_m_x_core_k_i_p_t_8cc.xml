<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_benchmark-2_2src_2_t_m_x_core_k_i_p_t_8cc" kind="file" language="C++">
    <compoundname>TMXCoreKIPT.cc</compoundname>
    <includes refid="_t_m_x_input_parameters_8hh" local="yes">TMXInputParameters.hh</includes>
    <includes local="yes">TMXMaterial.hh</includes>
    <includes local="yes">TMXCoreKIPT.hh</includes>
    <includes local="yes">TMXFuelAssemblyVVRM2.hh</includes>
    <includes local="yes">TMXReflectorKIPT.hh</includes>
    <includes local="yes">G4LogicalVolume.hh</includes>
    <includes local="yes">G4NistManager.hh</includes>
    <includes local="yes">G4PVPlacement.hh</includes>
    <includes local="yes">G4SubtractionSolid.hh</includes>
    <includes local="yes">G4VisAttributes.hh</includes>
    <includes local="yes">G4Color.hh</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/TMXCoreKIPT.cc</label>
        <link refid="_benchmark-2_2src_2_t_m_x_core_k_i_p_t_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>TMXInputParameters.hh</label>
        <link refid="_t_m_x_input_parameters_8hh_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>G4Color.hh</label>
      </node>
      <node id="11">
        <label>G4LogicalVolume.hh</label>
      </node>
      <node id="12">
        <label>G4NistManager.hh</label>
      </node>
      <node id="13">
        <label>G4PVPlacement.hh</label>
      </node>
      <node id="14">
        <label>G4SubtractionSolid.hh</label>
      </node>
      <node id="15">
        <label>G4VisAttributes.hh</label>
      </node>
      <node id="8">
        <label>TMXCoreKIPT.hh</label>
      </node>
      <node id="9">
        <label>TMXFuelAssemblyVVRM2.hh</label>
      </node>
      <node id="7">
        <label>TMXMaterial.hh</label>
      </node>
      <node id="10">
        <label>TMXReflectorKIPT.hh</label>
      </node>
      <node id="4">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="6">
        <label>unordered_map</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Implementation<sp/>of<sp/>the<sp/>TMXCoreKIPT<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TMXCoreKIPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thomas<sp/>Guilbaud,<sp/>Transmutex,<sp/>24/03/2021</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Class<sp/>to<sp/>manage<sp/>the<sp/>different<sp/>fuel<sp/>types</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">//<sp/>TMX<sp/>Class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXInputParameters.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXMaterial.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXCoreKIPT.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXFuelAssemblyVVRM2.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMXReflectorKIPT.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>GEANT4<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//#include<sp/>&quot;G4Material.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4LogicalVolume.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4NistManager.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PVPlacement.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4SubtractionSolid.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4VisAttributes.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Color.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal">TMXCoreKIPT::TMXCoreKIPT(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>coreName,<sp/><ref refid="class_t_m_x_input_parameters" kindref="compound">TMXInputParameters</ref>*<sp/>parameter,<sp/>std::string<sp/>latticeMapFile,<sp/><ref refid="class_t_m_x_neutron_source" kindref="compound">TMXNeutronSource</ref>*<sp/>sourceKipt)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">:<sp/><sp/><sp/><ref refid="class_t_m_x_abstract_core" kindref="compound">TMXAbstractCore</ref>(coreName,<sp/>parameter),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>fLatticeMapFile{latticeMapFile},</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_TMXNeutronSource(sourceKipt)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>createMaterial();</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>createGeometry();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>VisualisationConfig();</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------*------------------------------------------------------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Construction<sp/>of<sp/>the<sp/>material<sp/>compositions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------*------------------------------------------------------------------------------//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXCoreKIPT::createMaterial()</highlight></codeline>
<codeline lineno="52"><highlight class="normal">{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>temperature_fuel<sp/>=<sp/>m_p-&gt;TemperatureFuel;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Graphite<sp/>reflector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>*<sp/>_Graphite<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>(</highlight><highlight class="stringliteral">&quot;Graphite&quot;</highlight><highlight class="normal">,<sp/>1.84*(g/cm3),<sp/>1,<sp/>kStateSolid,<sp/>temperature_fuel);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>_Graphite-&gt;AddElement(60120,<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;C_12&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectMaterial<sp/>=<sp/>_Graphite;</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXCoreKIPT::createGeometry()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>G4bool<sp/>overlap<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_p-&gt;Verbose<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>overlap<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4double<sp/>outerRadius_fuelAssembly<sp/>=<sp/>35<sp/>/<sp/>2.<sp/>*<sp/>mm;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>fOuterRadius_assembly<sp/>=<sp/>outerRadius_fuelAssembly;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4double<sp/>innerRadius_core<sp/>=<sp/>13.5<sp/>*<sp/>std::sqrt(3.)/2.<sp/>*<sp/>outerRadius_fuelAssembly;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//const<sp/>G4double<sp/>halfHeightAssembly<sp/>=<sp/>50./2.<sp/>*<sp/>cm;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>G4double<sp/>halfHeightCore<sp/>=<sp/>0.7/2.<sp/>*<sp/>m;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>G4VSolid*<sp/>sMasterSolid<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Polyhedra(</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sMasterSolid&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0.,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>phiStart</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>360.<sp/>*<sp/>deg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>phiTotal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numSide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>numZPlanes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>[2]{-halfHeightCore,<sp/>halfHeightCore},<sp/></highlight><highlight class="comment">//<sp/>zPlane[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>[2]{0.,<sp/>0.},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rInner[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>[2]{innerRadius_core,<sp/>innerRadius_core}<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>rOuter[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>zRot<sp/>=<sp/>new<sp/>G4RotationMatrix;<sp/>//<sp/>Rotates<sp/>X<sp/>and<sp/>Z<sp/>axes<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>zRot-&gt;rotateZ(30.*deg);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/>sMasterSolid<sp/>=<sp/>m_TMXNeutronSource-&gt;SubstractTarget(sMasterSolid,<sp/>G4ThreeVector(0,<sp/>0,<sp/>0),<sp/>zRot);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>m_masterVolume<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(sMasterSolid,<sp/>m_reflectMaterial,<sp/></highlight><highlight class="stringliteral">&quot;lReactorCore&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXCoreKIPT::AddAssembliesInCore()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countFuel<sp/>=<sp/>0,<sp/>countReflector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>line,<sp/>assID;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>std::ifstream<sp/>file(fLatticeMapFile);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(file,<sp/>line))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>by<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>input(line);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineCount<sp/>!=<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Structure<sp/>of<sp/>the<sp/>lattice<sp/>after<sp/>the<sp/>first<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(input<sp/>&gt;&gt;<sp/>assID)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>read<sp/>by<sp/>word<sp/>for<sp/>any<sp/>length<sp/>of<sp/>space<sp/>between<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assID<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>||<sp/>assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Fuel<sp/>Assembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_m_x_fuel_assembly_v_v_r_m2" kindref="compound">TMXFuelAssemblyVVRM2</ref>*<sp/>FuelAssemblyVVRM2<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_fuel_assembly_v_v_r_m2" kindref="compound">TMXFuelAssemblyVVRM2</ref>(</highlight><highlight class="stringliteral">&quot;FuelAssemblyVVRM2_&quot;</highlight><highlight class="normal">+std::to_string(countFuel),<sp/>m_p,<sp/>0.);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4LogicalVolume*<sp/>lFuelAssembly<sp/>=<sp/>FuelAssemblyVVRM2-&gt;getMasterVolume();</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addAssemblyToList(lFuelAssembly);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TMXFuelAssemblies.push_back(FuelAssemblyVVRM2);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countFuel++;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal"><sp/>||<sp/>assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Reflector<sp/>Assembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_m_x_reflector_k_i_p_t" kindref="compound">TMXReflectorKIPT</ref>*<sp/>ReflectorAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_reflector_k_i_p_t" kindref="compound">TMXReflectorKIPT</ref>(</highlight><highlight class="stringliteral">&quot;ReflectorAssembly_&quot;</highlight><highlight class="normal">+std::to_string(countReflector),<sp/>m_p,<sp/>0.,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4LogicalVolume*<sp/>lReflectorAssembly<sp/>=<sp/>ReflectorAssembly-&gt;getMasterVolume();</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>addAssemblyToList(lReflectorAssembly);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_TMXReflectorAssemblies.push_back(ReflectorAssembly);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countReflector++;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineCount++;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXCoreKIPT::subtract(G4LogicalVolume*<sp/>subtracterLV)<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>G4VSolid*<sp/>sSubtracter<sp/>=<sp/>subtracterLV-&gt;GetSolid();</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>G4VSolid*<sp/>sSubtratedSolid<sp/>=<sp/>m_masterVolume-&gt;GetSolid();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>G4SubtractionSolid*<sp/>sHoled<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4SubtractionSolid(sSubtratedSolid-&gt;GetName()+</highlight><highlight class="stringliteral">&quot;_sub&quot;</highlight><highlight class="normal">,<sp/>sSubtratedSolid,<sp/>sSubtracter);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>m_masterVolume-&gt;SetSolid(sHoled);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXCoreKIPT::subtract(G4VSolid*<sp/>subtracterSolid)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>G4VSolid*<sp/>sSubtratedSolid<sp/>=<sp/>m_masterVolume-&gt;GetSolid();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>G4SubtractionSolid*<sp/>sHoled<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4SubtractionSolid(sSubtratedSolid-&gt;GetName()+</highlight><highlight class="stringliteral">&quot;_sub&quot;</highlight><highlight class="normal">,<sp/>sSubtratedSolid,<sp/>subtracterSolid);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>m_masterVolume-&gt;SetSolid(sHoled);</highlight></codeline>
<codeline lineno="150"><highlight class="normal">}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXCoreKIPT::placeGeometry(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>overlap,<sp/>G4ThreeVector<sp/>position,<sp/>G4RotationMatrix*<sp/>rotation,<sp/>G4LogicalVolume*<sp/>masterVolume,<sp/>std::string<sp/>latticeType)<sp/>{<sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>elements<sp/>of<sp/>the<sp/>target<sp/>in<sp/>the<sp/>geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Place<sp/>the<sp/>master<sp/>volume<sp/>that<sp/>contain<sp/>the<sp/>core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement(rotation,<sp/>position,<sp/>m_masterVolume,<sp/></highlight><highlight class="stringliteral">&quot;pCore&quot;</highlight><highlight class="normal">,<sp/>masterVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0,<sp/>overlap);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_TMXFuelAssemblies.size()<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>m_TMXReflectorAssemblies.size()<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(latticeType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hexagonal&quot;</highlight><highlight class="normal"><sp/>||<sp/>latticeType<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hexa&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_p-&gt;Verbose<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;----------------<sp/>Begin<sp/>Assembly<sp/>------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Example<sp/>of<sp/>Hexagonal<sp/>Lattice<sp/>(0<sp/>=<sp/>void)</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-2<sp/>2<sp/><sp/><sp/>-2<sp/>2</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>0<sp/>0<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=-2<sp/>;<sp/>x=[-2;<sp/>2]<sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>0<sp/>0<sp/>0</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>1<sp/>1<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>y=-1<sp/>;<sp/>x=[-2;<sp/>2]<sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>F<sp/>F<sp/>0</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>1<sp/>1<sp/>1<sp/>0<sp/><sp/><sp/><sp/><sp/>//<sp/>y=<sp/>0<sp/>;<sp/>x=[-2;<sp/>2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>F<sp/>F<sp/>F<sp/>0</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>1<sp/>1<sp/>0<sp/>0<sp/><sp/><sp/><sp/>//<sp/>y=<sp/>1<sp/>;<sp/>x=[-2;<sp/>2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>F<sp/>F<sp/>0<sp/>0</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>0<sp/>0<sp/>0<sp/><sp/><sp/>//<sp/>y=<sp/>2<sp/>;<sp/>x=[-2;<sp/>2]<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>0<sp/>0<sp/>0<sp/>0</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>read<sp/>README.md<sp/>in<sp/>latticeMap<sp/>for<sp/>more<sp/>precision</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xMin,<sp/>xMax,<sp/>yMin,<sp/>yMax;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nx,<sp/>ny;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>r<sp/>=<sp/>fOuterRadius_assembly;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4double<sp/>d<sp/>=<sp/>std::sqrt(3)<sp/>*<sp/>r;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>countFuel<sp/>=<sp/>0,<sp/>countReflector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>zRot<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix;<sp/></highlight><highlight class="comment">//<sp/>Rotates<sp/>X<sp/>and<sp/>Z<sp/>axes<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zRot-&gt;rotateZ(30.*deg);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lineCount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>line,<sp/>assID;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::ifstream<sp/>file(fLatticeMapFile);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(std::getline(file,<sp/>line))<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Read<sp/>by<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::stringstream<sp/>input(line);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lineCount<sp/>==<sp/>0)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>first<sp/>line,<sp/>receive<sp/>the<sp/>limits<sp/>of<sp/>the<sp/>lattice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>&gt;&gt;<sp/>xMin<sp/>&gt;&gt;<sp/>xMax<sp/>&gt;&gt;<sp/>yMin<sp/>&gt;&gt;<sp/>yMax;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>xMin;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny<sp/>=<sp/>yMin;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>Structure<sp/>of<sp/>the<sp/>lattice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(input<sp/>&gt;&gt;<sp/>assID)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>read<sp/>by<sp/>word<sp/>for<sp/>any<sp/>length<sp/>of<sp/>space<sp/>between<sp/>words</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assID<sp/>!=<sp/></highlight><highlight class="stringliteral">&quot;0&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;1&quot;</highlight><highlight class="normal"><sp/>||<sp/>assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Fuel<sp/>Assembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_m_x_fuel_assembly_v_v_r_m2" kindref="compound">TMXFuelAssemblyVVRM2</ref>*<sp/>FuelAssemblyVVRM2<sp/>=<sp/>m_TMXFuelAssemblies[countFuel];</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>2.*(double)(nx)*r<sp/>+<sp/>(double)(ny)*r;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(double)ny*d;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>r<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>&quot;<sp/>&gt;&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FuelAssemblyVVRM2-&gt;placeGeometry(overlap,<sp/>G4ThreeVector(x,<sp/>y,<sp/>0.),<sp/>zRot,<sp/>m_masterVolume);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countFuel++;</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;2&quot;</highlight><highlight class="normal"><sp/>||<sp/>assID<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;R&quot;</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>Reflector<sp/>Assembly</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_t_m_x_reflector_k_i_p_t" kindref="compound">TMXReflectorKIPT</ref>*<sp/>ReflectorAssembly<sp/>=<sp/>m_TMXReflectorAssemblies[countReflector];</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>2.*(double)(nx)*r<sp/>+<sp/>(double)(ny)*r;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>(double)ny*d;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::cout<sp/>&lt;&lt;<sp/>r<sp/>&lt;&lt;<sp/>&quot;<sp/>&quot;<sp/>&lt;&lt;<sp/>d<sp/>&lt;&lt;<sp/>&quot;<sp/>&gt;&gt;<sp/>&quot;<sp/>&lt;&lt;<sp/>x<sp/>&lt;&lt;<sp/>&quot;,&quot;<sp/>&lt;&lt;<sp/>y<sp/>&lt;&lt;<sp/>std::endl;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReflectorAssembly-&gt;placeGeometry(overlap,<sp/>G4ThreeVector(x,<sp/>y,<sp/>0.),<sp/>zRot,<sp/>m_masterVolume);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>countReflector++;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx++;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nx<sp/>=<sp/>xMin;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ny++;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineCount++;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_p-&gt;Verbose<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Lattice<sp/>Configuration:<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\tx<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xMin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>xMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\ty<sp/>=<sp/>[&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>yMin<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>yMax<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;-----------------<sp/>End<sp/>Assembly<sp/>-------------------&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TMXCoreKIPT::VisualisationConfig()<sp/>{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_p-&gt;Verbose<sp/>==<sp/>1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\nConfiguration<sp/>of<sp/>the<sp/>visualisation&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;}</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>visualisation<sp/>colors<sp/>configured<sp/>by<sp/>DL</highlight></codeline>
<codeline lineno="240"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>black<sp/><sp/><sp/>(<sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lblack<sp/><sp/>(<sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.6);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>vlblack<sp/>(<sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/><sp/>.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>very<sp/>light<sp/>black</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>white<sp/><sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3);<sp/></highlight><highlight class="comment">//<sp/>white</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>grayD3l<sp/>(211<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>211<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>211<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>gray<sp/>D3<sp/>(light)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>grayC<sp/><sp/><sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>flgrayC<sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.8);<sp/></highlight><highlight class="comment">//<sp/>few<sp/>light<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lgrayC<sp/><sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.4);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>vlgrayC<sp/>(0.5<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.5<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>very<sp/>ligth<sp/>gray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>red<sp/><sp/><sp/><sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>red</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>violet<sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>violet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>orange<sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.65<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>orange</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>green<sp/><sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lgreen<sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.4);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>blue<sp/><sp/><sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>yellow<sp/><sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>yellow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lyellow<sp/>(1.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>yellow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>cyan<sp/><sp/><sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>cya</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>sky<sp/><sp/><sp/><sp/><sp/>(0.0/255.0,<sp/>191.0/255.0,<sp/>255.0/255.0,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>sky</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>dgreen<sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>153.0/255.0,<sp/>153.0/255.0,<sp/>0.2);<sp/></highlight><highlight class="comment">//<sp/>dark<sp/>green</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>cyangr<sp/><sp/>(0.0<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>204.0/255.0,<sp/>204.0/255.0<sp/><sp/><sp/><sp/><sp/>);<sp/></highlight><highlight class="comment">//<sp/>cyan+green<sp/>colour<sp/>for<sp/>different<sp/>colour<sp/>of<sp/>h20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>lblue<sp/><sp/><sp/>(0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>1.0<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.4);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>grayblu<sp/>(0.4<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.6<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.6);<sp/></highlight><highlight class="comment">//<sp/>light<sp/>gray<sp/>blue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>wcolour<sp/>(0.3<sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Colour<sp/><sp/>Ccolour<sp/>(0.<sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>,<sp/>0.7<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4bool<sp/>bool_visible<sp/>=<sp/>true;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>G4VisAttributes*<sp/>visWorld<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4VisAttributes(sky);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>visWorld-&gt;SetVisibility(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_masterVolume)<sp/>{m_masterVolume-&gt;SetVisAttributes(visWorld);}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(m_p-&gt;Verbose<sp/>==<sp/>1)<sp/>{<sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;End<sp/>of<sp/>VisualisationConfig&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;}</highlight></codeline>
<codeline lineno="274"><highlight class="normal">}</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal">G4LogicalVolume*<sp/>TMXCoreKIPT::getMasterVolume()<sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(m_masterVolume);</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/TMXCoreKIPT.cc"/>
  </compounddef>
</doxygen>
