<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="_benchmark-1_2src_2geometry_2_s_v_b_r100_2_s_v_b_r100___core_8cc" kind="file" language="C++">
    <compoundname>SVBR100_Core.cc</compoundname>
    <includes local="yes">SVBR100_Core.hh</includes>
    <includes local="yes">SVBR100_FuelAssembly.hh</includes>
    <includes local="yes">G4Box.hh</includes>
    <includes local="yes">G4PhysicalConstants.hh</includes>
    <includes local="yes">G4PVPlacement.hh</includes>
    <includes local="yes">G4RotationMatrix.hh</includes>
    <includes local="yes">G4SystemOfUnits.hh</includes>
    <includes local="yes">G4Tubs.hh</includes>
    <includes local="yes">G4UnionSolid.hh</includes>
    <includes local="no">functional</includes>
    <incdepgraph>
      <node id="1">
        <label>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/src/geometry/SVBR100/SVBR100_Core.cc</label>
        <link refid="_benchmark-1_2src_2geometry_2_s_v_b_r100_2_s_v_b_r100___core_8cc"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>G4Box.hh</label>
      </node>
      <node id="6">
        <label>G4PVPlacement.hh</label>
      </node>
      <node id="5">
        <label>G4PhysicalConstants.hh</label>
      </node>
      <node id="7">
        <label>G4RotationMatrix.hh</label>
      </node>
      <node id="8">
        <label>G4SystemOfUnits.hh</label>
      </node>
      <node id="9">
        <label>G4Tubs.hh</label>
      </node>
      <node id="10">
        <label>G4UnionSolid.hh</label>
      </node>
      <node id="2">
        <label>SVBR100_Core.hh</label>
      </node>
      <node id="3">
        <label>SVBR100_FuelAssembly.hh</label>
      </node>
      <node id="11">
        <label>functional</label>
      </node>
    </incdepgraph>
    <innernamespace refid="namespacestd_1_1placeholders">std::placeholders</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>\brief<sp/>Implementation<sp/>of<sp/>the<sp/>SVBR100&apos;s<sp/>Core<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SVBR100_Core</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Thomas<sp/>Guilbaud,<sp/>Transmutex,<sp/>21/05/2021</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">//</highlight></codeline>
<codeline lineno="12"><highlight class="comment"></highlight><highlight class="comment">//<sp/>Geometry<sp/>represented<sp/>the<sp/>SVBR100&apos;s<sp/>Core<sp/>of<sp/>AKME</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SVBR100_Core.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;SVBR100_FuelAssembly.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Geant4<sp/>Class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Box.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PhysicalConstants.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4PVPlacement.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4RotationMatrix.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4SystemOfUnits.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4Tubs.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;G4UnionSolid.hh&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>C++<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;functional&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std::placeholders;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal">SVBR100_Core::SVBR100_Core(<ref refid="class_t_m_x_input_parameters" kindref="compound">TMXInputParameters</ref>*<sp/>p,<sp/>G4LogicalVolume*<sp/>motherVolume,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isMultipleExternalTarget,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbTarget,<sp/>G4double<sp/>distanceTargetCenter,<sp/>G4double<sp/>offsetAngle)</highlight></codeline>
<codeline lineno="34"><highlight class="normal">:<sp/><sp/><sp/><ref refid="class_t_m_x_abstract_core" kindref="compound">TMXAbstractCore</ref>(</highlight><highlight class="stringliteral">&quot;SVBR_Core&quot;</highlight><highlight class="normal">,<sp/>p),</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>m_p{p},</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>m_overlap(m_p-&gt;Verbose<sp/>&gt;=<sp/>1),</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isBurnupDivision(false),</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbAxialFuelPinDivision(1),</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isMultipleExternalTarget(isMultipleExternalTarget),</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbTarget(nbTarget),</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>m_distanceTargetCenter(distanceTargetCenter),</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>m_offsetAngle(offsetAngle),</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>m_motherVolume(motherVolume),</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lActiveCore(nullptr),</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lNeutronShield(nullptr),</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lBottomHolder(nullptr),</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lBottomHolderWall(nullptr),</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>m_coreLattice(nullptr),</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>m_fuelAssembly(nullptr),</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>m_translationVector(G4ThreeVector()),</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zPosition_neutronShield(0.),</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zPosition_bottomHolder(0.),</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zPosition_bottomHolderWall(0.),</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>m_halfHeight_bottomHolderWall(1030./2.<sp/>*<sp/>mm),</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>m_halfHeight_neutronShield(1695./2.<sp/>*<sp/>mm),</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>m_innerRadius_activeCore(0.),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outerRadius_activeCore(2149./2.<sp/>*<sp/>mm),</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>m_outerRadius_neutronShield(2525./2.<sp/>*<sp/>mm),</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_pitchAssemblies(225.45<sp/>*<sp/>mm),<sp/>//<sp/>Optionnal,<sp/>can<sp/>be<sp/>set<sp/>with<sp/>the<sp/>Map<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>m_primaryCoolantMaterial(nullptr),</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>m_metalicStructureMaterial(nullptr)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Builder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::createGeometry()<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>createMaterial();</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Keep<sp/>the<sp/>Order</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>buildActiveCore();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>buildFuelAssemblyLattice();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>buildInternalStructures();</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::buildActiveCore()<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>halfHeight_activeCore<sp/>=<sp/>m_halfHeight_neutronShield+m_halfHeight_bottomHolderWall;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Tubs*<sp/>sActiveCore<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;sCore_activeCore&quot;</highlight><highlight class="normal">,<sp/>m_innerRadius_activeCore,<sp/>m_outerRadius_activeCore,<sp/>halfHeight_activeCore,<sp/>0.,<sp/>twopi);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lActiveCore<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(sActiveCore,<sp/>m_primaryCoolantMaterial,<sp/></highlight><highlight class="stringliteral">&quot;lCore_activeCore&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::buildFuelAssemblyLattice()<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>m_coreLattice<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_lattice" kindref="compound">TMXLattice</ref>();</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_coreLattice-&gt;setPitch(m_pitchAssemblies);<sp/>//<sp/>Optionnal,<sp/>can<sp/>be<sp/>set<sp/>with<sp/>the<sp/>Map<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>zRot<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix;<sp/></highlight><highlight class="comment">//<sp/>Rotates<sp/>on<sp/>Z<sp/>axes<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>zRot-&gt;rotateZ(30.*deg);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>m_coreLattice-&gt;setElementRotation(zRot);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_isBurnupDivision)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;setLatticeMap(m_p-&gt;PathToCoreLatticeFile);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>roundIndex<sp/>=<sp/>1;<sp/>roundIndex<sp/>&lt;<sp/>5;<sp/>roundIndex++)<sp/>{</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_b_r100___fuel_assembly" kindref="compound">SVBR100_FuelAssembly</ref>(</highlight><highlight class="stringliteral">&quot;SVBR100_FuelAssembly_&quot;</highlight><highlight class="normal">+std::to_string(roundIndex),<sp/>m_p);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setPrimaryCoolantMaterial(m_primaryCoolantMaterial);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setMetalicStructureMaterial(m_metalicStructureMaterial);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setNbFuelPinSections(m_nbAxialFuelPinDivision);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setIndex(std::to_string(roundIndex));</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;createGeometry();</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterVolume(</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">+std::to_string(roundIndex),<sp/>m_fuelAssembly-&gt;getMasterVolume());</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;setLatticeMap(m_p-&gt;PathToCoreLatticeFile);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_b_r100___fuel_assembly" kindref="compound">SVBR100_FuelAssembly</ref>(</highlight><highlight class="stringliteral">&quot;SVBR100_FuelAssembly&quot;</highlight><highlight class="normal">,<sp/>m_p);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setPrimaryCoolantMaterial(m_primaryCoolantMaterial);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setMetalicStructureMaterial(m_metalicStructureMaterial);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setNbFuelPinSections(m_nbAxialFuelPinDivision);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setIndex(</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;createGeometry();</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterVolume(</highlight><highlight class="stringliteral">&quot;F&quot;</highlight><highlight class="normal">,<sp/>m_fuelAssembly-&gt;getMasterVolume());</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_b_r100___fuel_assembly" kindref="compound">SVBR100_FuelAssembly</ref>(</highlight><highlight class="stringliteral">&quot;SVBR100_FuelAssembly_CR&quot;</highlight><highlight class="normal">,<sp/>m_p);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setPrimaryCoolantMaterial(m_primaryCoolantMaterial);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setMetalicStructureMaterial(m_metalicStructureMaterial);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setNbFuelPinSections(m_nbAxialFuelPinDivision);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setIndex(</highlight><highlight class="stringliteral">&quot;CR&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;createGeometry();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterVolume(</highlight><highlight class="stringliteral">&quot;CR&quot;</highlight><highlight class="normal">,<sp/>m_fuelAssembly-&gt;getMasterVolume());</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterAction(</highlight><highlight class="stringliteral">&quot;CR&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;SVBR100_FuelAssembly::placeControlRod,<sp/>m_fuelAssembly,<sp/>_1));<sp/></highlight><highlight class="comment">//<sp/>https://stackoverflow.com/questions/12662891/how-can-i-pass-a-member-function-where-a-free-function-is-expected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_b_r100___fuel_assembly" kindref="compound">SVBR100_FuelAssembly</ref>(</highlight><highlight class="stringliteral">&quot;SVBR100_FuelAssembly_CC&quot;</highlight><highlight class="normal">,<sp/>m_p);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setPrimaryCoolantMaterial(m_primaryCoolantMaterial);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setMetalicStructureMaterial(m_metalicStructureMaterial);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setNbFuelPinSections(m_nbAxialFuelPinDivision);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setIndex(</highlight><highlight class="stringliteral">&quot;CC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;createGeometry();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterVolume(</highlight><highlight class="stringliteral">&quot;CC&quot;</highlight><highlight class="normal">,<sp/>m_fuelAssembly-&gt;getMasterVolume());</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterAction(</highlight><highlight class="stringliteral">&quot;CC&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;SVBR100_FuelAssembly::placeControlRod,<sp/>m_fuelAssembly,<sp/>_1));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_b_r100___fuel_assembly" kindref="compound">SVBR100_FuelAssembly</ref>(</highlight><highlight class="stringliteral">&quot;SVBR100_FuelAssembly_AC&quot;</highlight><highlight class="normal">,<sp/>m_p);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setPrimaryCoolantMaterial(m_primaryCoolantMaterial);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setMetalicStructureMaterial(m_metalicStructureMaterial);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setNbFuelPinSections(m_nbAxialFuelPinDivision);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setIndex(</highlight><highlight class="stringliteral">&quot;AC&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;createGeometry();</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterVolume(</highlight><highlight class="stringliteral">&quot;AC&quot;</highlight><highlight class="normal">,<sp/>m_fuelAssembly-&gt;getMasterVolume());</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterAction(</highlight><highlight class="stringliteral">&quot;AC&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;SVBR100_FuelAssembly::placeControlRod,<sp/>m_fuelAssembly,<sp/>_1));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_b_r100___fuel_assembly" kindref="compound">SVBR100_FuelAssembly</ref>(</highlight><highlight class="stringliteral">&quot;SVBR100_FuelAssembly_EP&quot;</highlight><highlight class="normal">,<sp/>m_p);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setPrimaryCoolantMaterial(m_primaryCoolantMaterial);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setMetalicStructureMaterial(m_metalicStructureMaterial);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setNbFuelPinSections(m_nbAxialFuelPinDivision);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setIndex(</highlight><highlight class="stringliteral">&quot;EP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;createGeometry();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterVolume(</highlight><highlight class="stringliteral">&quot;EP&quot;</highlight><highlight class="normal">,<sp/>m_fuelAssembly-&gt;getMasterVolume());</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterAction(</highlight><highlight class="stringliteral">&quot;EP&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;SVBR100_FuelAssembly::placeControlRod,<sp/>m_fuelAssembly,<sp/>_1));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_s_v_b_r100___fuel_assembly" kindref="compound">SVBR100_FuelAssembly</ref>(</highlight><highlight class="stringliteral">&quot;SVBR100_FuelAssembly_AP&quot;</highlight><highlight class="normal">,<sp/>m_p);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setPrimaryCoolantMaterial(m_primaryCoolantMaterial);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setMetalicStructureMaterial(m_metalicStructureMaterial);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setNbFuelPinSections(m_nbAxialFuelPinDivision);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;setIndex(</highlight><highlight class="stringliteral">&quot;AP&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_fuelAssembly-&gt;createGeometry();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterVolume(</highlight><highlight class="stringliteral">&quot;AP&quot;</highlight><highlight class="normal">,<sp/>m_fuelAssembly-&gt;getMasterVolume());</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;addDaughterAction(</highlight><highlight class="stringliteral">&quot;AP&quot;</highlight><highlight class="normal">,<sp/>std::bind(&amp;SVBR100_FuelAssembly::placeControlRod,<sp/>m_fuelAssembly,<sp/>_1));</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::buildNeutronShield()<sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>innerRadius_neutronShield<sp/>=<sp/>m_outerRadius_activeCore;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//G4double<sp/>thickness_neutronShield<sp/>=<sp/>m_outerRadius_neutronShield<sp/>-<sp/>innerRadius_neutronShield;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zPosition_neutronShield<sp/>=<sp/>m_zPosition_bottomHolderWall<sp/>+<sp/>m_halfHeight_bottomHolderWall<sp/>+<sp/>m_halfHeight_neutronShield;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Tubs*<sp/>sNeutronShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;sCore_neutronShield&quot;</highlight><highlight class="normal">,<sp/>innerRadius_neutronShield,<sp/>m_outerRadius_neutronShield,<sp/>m_halfHeight_neutronShield,<sp/>0.,<sp/>twopi);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lNeutronShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(sNeutronShield,<sp/>m_metalicStructureMaterial,<sp/></highlight><highlight class="stringliteral">&quot;lCore_neutronShield&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal">}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::buildNeutronShieldForMultipleTarget(G4ThreeVector<sp/>translation,<sp/>G4LogicalVolume*<sp/>motherVolume)<sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>innerRadius_neutronShield<sp/>=<sp/>m_outerRadius_activeCore;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zPosition_neutronShield<sp/>=<sp/>m_zPosition_bottomHolderWall<sp/>+<sp/>m_halfHeight_bottomHolderWall<sp/>+<sp/>m_halfHeight_neutronShield;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>x,<sp/>y;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>ext;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>thickness_wall<sp/>=<sp/>5.<sp/>*<sp/>cm;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>innerRadius_cornerShield<sp/>=<sp/>455./2.<sp/>*<sp/>mm;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>outerRadius_cornerShield<sp/>=<sp/>innerRadius_cornerShield<sp/>+<sp/>thickness_wall;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>centerRadius_cornerShield<sp/>=<sp/>(outerRadius_cornerShield<sp/>+<sp/>innerRadius_cornerShield)<sp/>/<sp/>2.;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>centerRadius_neutronShield<sp/>=<sp/>(m_outerRadius_neutronShield<sp/>+<sp/>innerRadius_neutronShield)/2.;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>halfLength_wallShield<sp/>=<sp/>(m_distanceTargetCenter<sp/>-<sp/>innerRadius_neutronShield)/2.;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>angle_aperture<sp/>=<sp/>atan(centerRadius_cornerShield/centerRadius_neutronShield);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Tubs*<sp/>sCornerShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;sCornerShield&quot;</highlight><highlight class="normal">,<sp/>innerRadius_cornerShield,<sp/>outerRadius_cornerShield,<sp/>m_halfHeight_neutronShield,<sp/>3.*twopi/4.,<sp/>twopi/2.);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Box*<sp/>sWallShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Box(</highlight><highlight class="stringliteral">&quot;sWallShield&quot;</highlight><highlight class="normal">,<sp/>halfLength_wallShield,<sp/>thickness_wall/2.,<sp/>m_halfHeight_neutronShield);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Tubs*<sp/>sNeutronShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;sCore_neutronShield&quot;</highlight><highlight class="normal">,<sp/>innerRadius_neutronShield,<sp/>m_outerRadius_neutronShield,<sp/>m_halfHeight_neutronShield,<sp/>0.,<sp/>twopi/(2.*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)m_nbTarget)<sp/>-<sp/>angle_aperture);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>zRotNeutronShieldRight<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix;<sp/></highlight><highlight class="comment">//<sp/>Rotates<sp/>on<sp/>Z<sp/>axes<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>zRotNeutronShieldRight-&gt;rotateZ(-angle_aperture);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>zRotNeutronShieldLeft<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix;<sp/></highlight><highlight class="comment">//<sp/>Rotates<sp/>on<sp/>Z<sp/>axes<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>zRotNeutronShieldLeft-&gt;rotateZ(twopi/(2.*(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)m_nbTarget));</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>m_nbTarget;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ext<sp/>=<sp/>std::to_string(i);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4RotationMatrix*<sp/>zRot<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4RotationMatrix;<sp/></highlight><highlight class="comment">//<sp/>Rotates<sp/>on<sp/>Z<sp/>axes<sp/>only</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zRot-&gt;rotateZ(-twopi/((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)m_nbTarget)<sp/>*<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i<sp/>-<sp/>m_offsetAngle);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>=<sp/>m_distanceTargetCenter<sp/>*<sp/>cos((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)m_nbTarget<sp/>*<sp/>twopi<sp/>+<sp/>m_offsetAngle);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y<sp/>=<sp/>m_distanceTargetCenter<sp/>*<sp/>sin((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)i/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)m_nbTarget<sp/>*<sp/>twopi<sp/>+<sp/>m_offsetAngle);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4VSolid*<sp/>sChannelShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4UnionSolid(</highlight><highlight class="stringliteral">&quot;sChannelShield&quot;</highlight><highlight class="normal">,<sp/>sCornerShield,<sp/>sWallShield,<sp/>0,<sp/>G4ThreeVector(-halfLength_wallShield,<sp/>-centerRadius_cornerShield,<sp/>0.));</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sChannelShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4UnionSolid(</highlight><highlight class="stringliteral">&quot;sChannelShield&quot;</highlight><highlight class="normal">,<sp/>sChannelShield,<sp/>sWallShield,<sp/>0,<sp/>G4ThreeVector(-halfLength_wallShield,<sp/>+centerRadius_cornerShield,<sp/>0.));</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sChannelShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4UnionSolid(</highlight><highlight class="stringliteral">&quot;sChannelShield&quot;</highlight><highlight class="normal">,<sp/>sChannelShield,<sp/>sNeutronShield,<sp/>zRotNeutronShieldRight,<sp/>G4ThreeVector(-m_distanceTargetCenter,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sChannelShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4UnionSolid(</highlight><highlight class="stringliteral">&quot;sChannelShield&quot;</highlight><highlight class="normal">,<sp/>sChannelShield,<sp/>sNeutronShield,<sp/>zRotNeutronShieldLeft,<sp/>G4ThreeVector(-m_distanceTargetCenter,<sp/>0.,<sp/>0.));</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_lNeutronShield<sp/>=<sp/>new<sp/>G4LogicalVolume(sChannelShield,<sp/>m_metalicStructureMaterial,<sp/>&quot;lCore_neutronShield&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>G4LogicalVolume*<sp/>lChannelShield<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(sChannelShield,<sp/>m_reflectorMaterial</highlight><highlight class="comment">/*m_metalicStructureMaterial*/</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;lChannelShield&quot;</highlight><highlight class="normal">+ext);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement(zRot,<sp/>G4ThreeVector(x,<sp/>y,<sp/>m_zPosition_neutronShield)<sp/>+<sp/>translation,<sp/>lChannelShield,<sp/></highlight><highlight class="stringliteral">&quot;pChannelShield&quot;</highlight><highlight class="normal">+ext,<sp/>motherVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0,<sp/>m_overlap);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m_lNeutronShield<sp/>=<sp/>new<sp/>G4LogicalVolume(sNeutronShield,<sp/>m_metalicStructureMaterial,<sp/>&quot;lCore_neutronShield&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::buildInternalStructures()<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom<sp/>Fuel<sp/>Assembly<sp/>Holder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>halfThickness_bottomHolder<sp/>=<sp/>20./2.<sp/>*<sp/>cm;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>outerRadius_bottomHolder<sp/>=<sp/>m_outerRadius_activeCore;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zPosition_bottomHolder<sp/>=<sp/>-(1550./2.<sp/>+<sp/>30./2.+110.)<sp/>*<sp/>mm<sp/></highlight><highlight class="comment">/*-1845./2.<sp/>*<sp/>mm*/</highlight><highlight class="normal"><sp/>-<sp/>halfThickness_bottomHolder;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Tubs*<sp/>sBottomHolder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;sCore_bottomHolder&quot;</highlight><highlight class="normal">,<sp/>0.,<sp/>outerRadius_bottomHolder,<sp/>halfThickness_bottomHolder,<sp/>0.,<sp/>twopi);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lBottomHolder<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(sBottomHolder,<sp/>m_metalicStructureMaterial,<sp/></highlight><highlight class="stringliteral">&quot;lCore_bottomHolder&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom<sp/>Fuel<sp/>Assembly<sp/>Holder<sp/>Wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>outerRadius_bottomHolderWall<sp/>=<sp/>outerRadius_bottomHolder<sp/>+<sp/>78.<sp/>*<sp/>mm;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>G4double<sp/>innerRadius_bottomHolderWall<sp/>=<sp/>m_outerRadius_activeCore;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>m_zPosition_bottomHolderWall<sp/>=<sp/>m_zPosition_bottomHolder<sp/>-<sp/>m_halfHeight_bottomHolderWall<sp/>+<sp/>521.<sp/>*<sp/>mm<sp/>+<sp/>halfThickness_bottomHolder;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>G4Tubs*<sp/>sBottomHolderWall<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4Tubs(</highlight><highlight class="stringliteral">&quot;sCore_bottomHolderWall&quot;</highlight><highlight class="normal">,<sp/>innerRadius_bottomHolderWall,<sp/>outerRadius_bottomHolderWall,<sp/>m_halfHeight_bottomHolderWall,<sp/>0.,<sp/>twopi);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>m_lBottomHolderWall<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4LogicalVolume(sBottomHolderWall,<sp/>m_metalicStructureMaterial,<sp/></highlight><highlight class="stringliteral">&quot;lCore_bottomHolderWall&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::createMaterial()<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>c<sp/>-----<sp/>Be,<sp/>1.85<sp/>g/cm3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>m4<sp/><sp/><sp/><sp/><sp/><sp/>1001.70c<sp/>8.565E-05</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1002.70c<sp/>1.545E-07</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>1003.70c<sp/>1.659E-04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2003.70c<sp/>5.109E-06</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>2004.70c<sp/>8.891E-04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3006.70c<sp/>1.204E-05</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>3007.70c<sp/>1.374E-07</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>4009.70c<sp/>9.988E-01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>5010.70c<sp/>3.795E-11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>5011.70c<sp/>1.185E-09</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6012<sp/><sp/><sp/><sp/><sp/>3.209E-14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>6013<sp/><sp/><sp/><sp/><sp/>3.838E-19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>mt4<sp/><sp/><sp/><sp/>be.10t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$<sp/>294<sp/>K</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>(</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;reflector&quot;</highlight><highlight class="normal">,<sp/>1.85<sp/>*<sp/>(g/cm3),<sp/>12,<sp/>kStateSolid,<sp/>294.<sp/>*<sp/>kelvin</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(10010,<sp/>8.565E-05);<sp/></highlight><highlight class="comment">//<sp/>H1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(10020,<sp/>1.545E-07);<sp/></highlight><highlight class="comment">//<sp/>H2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(10030,<sp/>1.659E-04);<sp/></highlight><highlight class="comment">//<sp/>H3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(20030,<sp/>5.109E-06);<sp/></highlight><highlight class="comment">//<sp/>He3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(20040,<sp/>8.891E-04);<sp/></highlight><highlight class="comment">//<sp/>He4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(30060,<sp/>1.204E-05);<sp/></highlight><highlight class="comment">//<sp/>Li6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(30070,<sp/>1.374E-07);<sp/></highlight><highlight class="comment">//<sp/>Li7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(40090,<sp/>9.988E-01);<sp/></highlight><highlight class="comment">//<sp/>Be9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(50100,<sp/>3.795E-11);<sp/></highlight><highlight class="comment">//<sp/>B10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(50110,<sp/>1.185E-09);<sp/></highlight><highlight class="comment">//<sp/>B11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(60120,<sp/>3.209E-14);<sp/></highlight><highlight class="comment">//<sp/>C12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>m_reflectorMaterial-&gt;AddElement(60130,<sp/>3.838E-19);<sp/></highlight><highlight class="comment">//<sp/>C13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal">}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Placer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::placeGeometry(G4ThreeVector<sp/>translation,<sp/>G4LogicalVolume*<sp/>motherVolume)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>m_translationVector<sp/>=<sp/>translation;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*if<sp/>(m_lActiveCore)<sp/>{</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>G4PVPlacement(0,<sp/>m_translationVector,<sp/>m_lActiveCore,<sp/>&quot;pCore_activeCore&quot;,<sp/>motherVolume,<sp/>false,<sp/>0,<sp/>m_overlap);</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/><sp/><sp/><sp/>}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fuel<sp/>Assembly<sp/>Lattice</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_coreLattice<sp/></highlight><highlight class="comment">/*&amp;&amp;<sp/>m_lActiveCore*/</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;setMotherVolume(motherVolume</highlight><highlight class="comment">/*m_lActiveCore*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;setElementTranslation(m_translationVector);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_coreLattice-&gt;placeLattice(m_overlap);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Neutron<sp/>Shield</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>(m_lNeutronShield)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_isMultipleExternalTarget)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buildNeutronShieldForMultipleTarget(G4ThreeVector(0.,<sp/>0.,<sp/>m_zPosition_neutronShield)<sp/>+<sp/>m_translationVector,<sp/>motherVolume);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buildNeutronShield();</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement(0,<sp/>G4ThreeVector(0.,<sp/>0.,<sp/>m_zPosition_neutronShield)<sp/>+<sp/>m_translationVector,<sp/>m_lNeutronShield,<sp/></highlight><highlight class="stringliteral">&quot;pCore_neutronShield&quot;</highlight><highlight class="normal">,<sp/>motherVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0,<sp/>m_overlap);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom<sp/>Fuel<sp/>Assembly<sp/>Holder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_lBottomHolder)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement(0,<sp/>G4ThreeVector(0.,<sp/>0.,<sp/>m_zPosition_bottomHolder)<sp/>+<sp/>m_translationVector,<sp/>m_lBottomHolder,<sp/></highlight><highlight class="stringliteral">&quot;pCore_bottomHolder&quot;</highlight><highlight class="normal">,<sp/>motherVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0,<sp/>m_overlap);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bottom<sp/>Fuel<sp/>Assembly<sp/>Holder<sp/>Wall</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(m_lBottomHolderWall)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>G4PVPlacement(0,<sp/>G4ThreeVector(0.,<sp/>0.,<sp/>m_zPosition_bottomHolderWall)<sp/>+<sp/>m_translationVector,<sp/>m_lBottomHolderWall,<sp/></highlight><highlight class="stringliteral">&quot;pCore_bottomHolderWall&quot;</highlight><highlight class="normal">,<sp/>motherVolume,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>0,<sp/>m_overlap);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal">}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::placeGeometry(G4ThreeVector<sp/>translation)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>placeGeometry(translation,<sp/>m_motherVolume);</highlight></codeline>
<codeline lineno="313"><highlight class="normal">}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::placeGeometry()<sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>placeGeometry(m_translationVector);</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Setter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::setMotherVolume(G4LogicalVolume*<sp/>motherVolume)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>m_motherVolume<sp/>=<sp/>motherVolume;</highlight></codeline>
<codeline lineno="324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::setTranslation(G4ThreeVector<sp/>translation)<sp/>{</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>m_translationVector<sp/>=<sp/>translation;</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::setPrimaryCoolantMaterial(<ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>*<sp/>primaryCoolantMaterial)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>m_primaryCoolantMaterial<sp/>=<sp/>primaryCoolantMaterial;</highlight></codeline>
<codeline lineno="332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::setMetalicStructureMaterial(<ref refid="class_t_m_x_material" kindref="compound">TMXMaterial</ref>*<sp/>metalicStructureMaterial)<sp/>{</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/>m_metalicStructureMaterial<sp/>=<sp/>metalicStructureMaterial;</highlight></codeline>
<codeline lineno="336"><highlight class="normal">}</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::setInnerRadiusActiveCore(G4double<sp/>innerRadius)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>m_innerRadius_activeCore<sp/>=<sp/>innerRadius;</highlight></codeline>
<codeline lineno="340"><highlight class="normal">}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SVBR100_Core::setBurnupDivision(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isRoundAssemblyDivision,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nbAxialFuelPinDivision)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/>m_isBurnupDivision<sp/>=<sp/>isRoundAssemblyDivision;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>m_nbAxialFuelPinDivision<sp/>=<sp/>nbAxialFuelPinDivision;</highlight></codeline>
<codeline lineno="345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Getter</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal">G4double<sp/>SVBR100_Core::getOuterRadiusNeutronShield()<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(m_outerRadius_neutronShield);</highlight></codeline>
<codeline lineno="352"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/src/geometry/SVBR100/SVBR100_Core.cc"/>
  </compounddef>
</doxygen>
