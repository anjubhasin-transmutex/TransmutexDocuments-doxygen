<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__critical_thermal_power_8hh_source" xml:lang="en-US">
<title>CriticalThermalPower.hh</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/include/CriticalThermalPower.hh</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__critical_thermal_power_8hh_source_1l00001"/>00001 
<anchor xml:id="__critical_thermal_power_8hh_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00005"/>00005 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00006"/>00006 <emphasis role="comment">//&#32;CriticalThermalPower</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00007"/>00007 <emphasis role="comment">//</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00008"/>00008 <emphasis role="comment">//&#32;Transmutex,&#32;Sept.&#32;23,&#32;2021,&#32;all&#32;rights&#32;reserved</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00009"/>00009 <emphasis role="comment">//&#32;</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00011"/>00011 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00012"/>00012 
<anchor xml:id="__critical_thermal_power_8hh_source_1l00013"/>00013 <emphasis role="preprocessor">#ifndef&#32;CriticalThermalPower_h</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00014"/>00014 <emphasis role="preprocessor">#define&#32;CriticalThermalPower_h&#32;1</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00015"/>00015 
<anchor xml:id="__critical_thermal_power_8hh_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;TMXAbstractScoringAccumulable.hh&quot;</emphasis>
<anchor xml:id="__critical_thermal_power_8hh_source_1l00017"/>00017 
<anchor xml:id="__critical_thermal_power_8hh_source_1l00018"/><link linkend="_class_critical_thermal_power">00018</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_critical_thermal_power">CriticalThermalPower</link>&#32;:&#32;<emphasis role="keyword">public</emphasis>&#32;<link linkend="_class_t_m_x_abstract_scoring_accumulable">TMXAbstractScoringAccumulable</link>&#32;{
<anchor xml:id="__critical_thermal_power_8hh_source_1l00019"/>00019 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__critical_thermal_power_8hh_source_1l00020"/>00020 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_critical_thermal_power">CriticalThermalPower</link>(<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>*&#32;parameter,&#32;std::string&#32;name);
<anchor xml:id="__critical_thermal_power_8hh_source_1l00021"/>00021 &#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_critical_thermal_power">~CriticalThermalPower</link>();
<anchor xml:id="__critical_thermal_power_8hh_source_1l00022"/>00022 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00023"/>00023 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;score(<emphasis role="keyword">const</emphasis>&#32;G4Step*&#32;theStep);
<anchor xml:id="__critical_thermal_power_8hh_source_1l00024"/>00024 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Definet0(<emphasis role="keyword">const</emphasis>&#32;G4Step*&#32;theStep,&#32;<emphasis role="keywordtype">int</emphasis>&#32;NeutronGeneration);
<anchor xml:id="__critical_thermal_power_8hh_source_1l00025"/>00025 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;printAverage()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00026"/>00026 &#32;&#32;&#32;&#32;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00027"/>00027 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__critical_thermal_power_8hh_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Initialize();
<anchor xml:id="__critical_thermal_power_8hh_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;primitiveScorer(<emphasis role="keyword">const</emphasis>&#32;G4Step*&#32;theStep);
<anchor xml:id="__critical_thermal_power_8hh_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SetNeutronGeneration(<emphasis role="keywordtype">int</emphasis>&#32;NeutronGeneration);
<anchor xml:id="__critical_thermal_power_8hh_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;m_CurrentNeutronGeneration;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;m_NeutronGeneration_trigger;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;m_t0;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;m_Deltat;
<anchor xml:id="__critical_thermal_power_8hh_source_1l00036"/>00036 };
<anchor xml:id="__critical_thermal_power_8hh_source_1l00037"/>00037 
<anchor xml:id="__critical_thermal_power_8hh_source_1l00038"/>00038 
<anchor xml:id="__critical_thermal_power_8hh_source_1l00039"/>00039 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
