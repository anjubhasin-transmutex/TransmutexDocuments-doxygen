<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source" xml:lang="en-US">
<title>TMXCoreKIPT.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/TMXCoreKIPT.cc</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00001"/>00001 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00002"/>00002 <emphasis role="comment">//&#32;\brief&#32;Implementation&#32;of&#32;the&#32;TMXCoreKIPT&#32;class</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00004"/>00004 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00006"/>00006 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00007"/>00007 <emphasis role="comment">//&#32;TMXCoreKIPT</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00008"/>00008 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;Thomas&#32;Guilbaud,&#32;Transmutex,&#32;24/03/2021</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00010"/>00010 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00012"/>00012 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;Class&#32;to&#32;manage&#32;the&#32;different&#32;fuel&#32;types</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00014"/>00014 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00015"/>00015 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00016"/>00016 <emphasis role="comment">//&#32;TMX&#32;Class</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;TMXInputParameters.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;TMXMaterial.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;TMXCoreKIPT.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00020"/>00020 <emphasis role="preprocessor">#include&#32;&quot;TMXFuelAssemblyVVRM2.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&quot;TMXReflectorKIPT.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00022"/>00022 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00023"/>00023 <emphasis role="comment">//&#32;GEANT4&#32;libraries</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00024"/>00024 <emphasis role="comment">//#include&#32;&quot;G4Material.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00025"/>00025 <emphasis role="preprocessor">#include&#32;&quot;G4LogicalVolume.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00026"/>00026 <emphasis role="preprocessor">#include&#32;&quot;G4NistManager.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&quot;G4PVPlacement.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&quot;G4SubtractionSolid.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&quot;G4VisAttributes.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&quot;G4Color.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00031"/>00031 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00032"/>00032 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00033"/>00033 <emphasis role="comment">//&#32;C++&#32;libraries</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00034"/>00034 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00035"/>00035 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00036"/>00036 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00037"/>00037 TMXCoreKIPT::TMXCoreKIPT(<emphasis role="keyword">const</emphasis>&#32;std::string&amp;&#32;coreName,&#32;<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>*&#32;parameter,&#32;std::string&#32;latticeMapFile,&#32;<link linkend="_class_t_m_x_neutron_source">TMXNeutronSource</link>*&#32;sourceKipt)
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00038"/>00038 :&#32;&#32;&#32;<link linkend="_class_t_m_x_abstract_core">TMXAbstractCore</link>(coreName,&#32;parameter),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00039"/>00039 &#32;&#32;&#32;&#32;fLatticeMapFile{latticeMapFile},
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00040"/>00040 &#32;&#32;&#32;&#32;m_TMXNeutronSource(sourceKipt)
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00041"/>00041 {
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00042"/>00042 &#32;&#32;&#32;&#32;createMaterial();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00043"/>00043 &#32;&#32;&#32;&#32;createGeometry();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00044"/>00044 &#32;&#32;&#32;&#32;VisualisationConfig();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00045"/>00045 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00046"/>00046 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00047"/>00047 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00048"/>00048 <emphasis role="comment">//------------------------------------------------------------------------------*------------------------------------------------------------------------------//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00049"/>00049 <emphasis role="comment">//&#32;Construction&#32;of&#32;the&#32;material&#32;compositions</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00050"/>00050 <emphasis role="comment">//------------------------------------------------------------------------------*------------------------------------------------------------------------------//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00051"/>00051 <emphasis role="keywordtype">void</emphasis>&#32;TMXCoreKIPT::createMaterial()
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00052"/>00052 {
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00053"/>00053 &#32;&#32;&#32;&#32;G4double&#32;temperature_fuel&#32;=&#32;m_p-&gt;TemperatureFuel;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00054"/>00054 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Graphite&#32;reflector</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;_Graphite&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_t_m_x_material">TMXMaterial</link>(<emphasis role="stringliteral">&quot;Graphite&quot;</emphasis>,&#32;1.84*(g/cm3),&#32;1,&#32;kStateSolid,&#32;temperature_fuel);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00058"/>00058 &#32;&#32;&#32;&#32;_Graphite-&gt;AddElement(60120,&#32;1,&#32;<emphasis role="stringliteral">&quot;C_12&quot;</emphasis>);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00059"/>00059 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00060"/>00060 &#32;&#32;&#32;&#32;m_reflectMaterial&#32;=&#32;_Graphite;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00061"/>00061 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00062"/>00062 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00063"/>00063 <emphasis role="keywordtype">void</emphasis>&#32;TMXCoreKIPT::createGeometry()
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00064"/>00064 {
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00065"/>00065 &#32;&#32;&#32;&#32;G4bool&#32;overlap&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_p-&gt;Verbose&#32;==&#32;1)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overlap&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00069"/>00069 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;outerRadius_fuelAssembly&#32;=&#32;35&#32;/&#32;2.&#32;*&#32;mm;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00072"/>00072 &#32;&#32;&#32;&#32;fOuterRadius_assembly&#32;=&#32;outerRadius_fuelAssembly;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;innerRadius_core&#32;=&#32;13.5&#32;*&#32;std::sqrt(3.)/2.&#32;*&#32;outerRadius_fuelAssembly;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00074"/>00074 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="comment">//const&#32;G4double&#32;halfHeightAssembly&#32;=&#32;50./2.&#32;*&#32;cm;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfHeightCore&#32;=&#32;0.7/2.&#32;*&#32;m;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00078"/>00078 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00079"/>00079 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00083"/>00083 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00084"/>00084 &#32;&#32;&#32;&#32;G4VSolid*&#32;sMasterSolid&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4Polyhedra(
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="stringliteral">&quot;sMasterSolid&quot;</emphasis>,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;name</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0.,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;phiStart</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;360.&#32;*&#32;deg,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;phiTotal</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;6,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;numSide</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;2,&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;numZPlanes</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;[2]{-halfHeightCore,&#32;halfHeightCore},&#32;<emphasis role="comment">//&#32;zPlane[]</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;[2]{0.,&#32;0.},&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rInner[]</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;[2]{innerRadius_core,&#32;innerRadius_core}&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;rOuter[]</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00093"/>00093 &#32;&#32;&#32;&#32;);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00094"/>00094 <emphasis role="comment">//&#32;&#32;&#32;&#32;G4RotationMatrix*&#32;zRot&#32;=&#32;new&#32;G4RotationMatrix;&#32;//&#32;Rotates&#32;X&#32;and&#32;Z&#32;axes&#32;only</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00095"/>00095 <emphasis role="comment">//&#32;&#32;&#32;&#32;zRot-&gt;rotateZ(30.*deg);</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00096"/>00096 <emphasis role="comment">//&#32;&#32;&#32;&#32;sMasterSolid&#32;=&#32;m_TMXNeutronSource-&gt;SubstractTarget(sMasterSolid,&#32;G4ThreeVector(0,&#32;0,&#32;0),&#32;zRot);</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00097"/>00097 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00098"/>00098 &#32;&#32;&#32;&#32;m_masterVolume&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4LogicalVolume(sMasterSolid,&#32;m_reflectMaterial,&#32;<emphasis role="stringliteral">&quot;lReactorCore&quot;</emphasis>);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00099"/>00099 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00100"/>00100 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00101"/>00101 <emphasis role="keywordtype">void</emphasis>&#32;TMXCoreKIPT::AddAssembliesInCore()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;countFuel&#32;=&#32;0,&#32;countReflector&#32;=&#32;0;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00103"/>00103 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00104"/>00104 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineCount&#32;=&#32;0;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00105"/>00105 &#32;&#32;&#32;&#32;std::string&#32;line,&#32;assID;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00106"/>00106 &#32;&#32;&#32;&#32;std::ifstream&#32;file(fLatticeMapFile);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00107"/>00107 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(std::getline(file,&#32;line))&#32;{&#32;<emphasis role="comment">//&#32;Read&#32;by&#32;line</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::stringstream&#32;input(line);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00110"/>00110 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineCount&#32;!=&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;Structure&#32;of&#32;the&#32;lattice&#32;after&#32;the&#32;first&#32;line</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(input&#32;&gt;&gt;&#32;assID)&#32;{&#32;<emphasis role="comment">//&#32;read&#32;by&#32;word&#32;for&#32;any&#32;length&#32;of&#32;space&#32;between&#32;words</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(assID&#32;!=&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(assID&#32;==&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;||&#32;assID&#32;==&#32;<emphasis role="stringliteral">&quot;F&quot;</emphasis>)&#32;{&#32;<emphasis role="comment">//&#32;Fuel&#32;Assembly</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_fuel_assembly_v_v_r_m2">TMXFuelAssemblyVVRM2</link>*&#32;FuelAssemblyVVRM2&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_t_m_x_fuel_assembly_v_v_r_m2">TMXFuelAssemblyVVRM2</link>(<emphasis role="stringliteral">&quot;FuelAssemblyVVRM2_&quot;</emphasis>+std::to_string(countFuel),&#32;m_p,&#32;0.);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4LogicalVolume*&#32;lFuelAssembly&#32;=&#32;FuelAssemblyVVRM2-&gt;getMasterVolume();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addAssemblyToList(lFuelAssembly);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_TMXFuelAssemblies.push_back(FuelAssemblyVVRM2);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;countFuel++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(assID&#32;==&#32;<emphasis role="stringliteral">&quot;2&quot;</emphasis>&#32;||&#32;assID&#32;==&#32;<emphasis role="stringliteral">&quot;R&quot;</emphasis>)&#32;{&#32;<emphasis role="comment">//&#32;Reflector&#32;Assembly</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_reflector_k_i_p_t">TMXReflectorKIPT</link>*&#32;ReflectorAssembly&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_t_m_x_reflector_k_i_p_t">TMXReflectorKIPT</link>(<emphasis role="stringliteral">&quot;ReflectorAssembly_&quot;</emphasis>+std::to_string(countReflector),&#32;m_p,&#32;0.,&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4LogicalVolume*&#32;lReflectorAssembly&#32;=&#32;ReflectorAssembly-&gt;getMasterVolume();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;addAssemblyToList(lReflectorAssembly);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_TMXReflectorAssemblies.push_back(ReflectorAssembly);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;countReflector++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineCount++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00131"/>00131 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00132"/>00132 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00133"/>00133 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00134"/>00134 <emphasis role="keywordtype">void</emphasis>&#32;TMXCoreKIPT::subtract(G4LogicalVolume*&#32;subtracterLV)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00135"/>00135 &#32;&#32;&#32;&#32;G4VSolid*&#32;sSubtracter&#32;=&#32;subtracterLV-&gt;GetSolid();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00136"/>00136 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00137"/>00137 &#32;&#32;&#32;&#32;G4VSolid*&#32;sSubtratedSolid&#32;=&#32;m_masterVolume-&gt;GetSolid();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00138"/>00138 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00139"/>00139 &#32;&#32;&#32;&#32;G4SubtractionSolid*&#32;sHoled&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4SubtractionSolid(sSubtratedSolid-&gt;GetName()+<emphasis role="stringliteral">&quot;_sub&quot;</emphasis>,&#32;sSubtratedSolid,&#32;sSubtracter);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00140"/>00140 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00141"/>00141 &#32;&#32;&#32;&#32;m_masterVolume-&gt;SetSolid(sHoled);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00142"/>00142 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00143"/>00143 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00144"/>00144 <emphasis role="keywordtype">void</emphasis>&#32;TMXCoreKIPT::subtract(G4VSolid*&#32;subtracterSolid)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00145"/>00145 &#32;&#32;&#32;&#32;G4VSolid*&#32;sSubtratedSolid&#32;=&#32;m_masterVolume-&gt;GetSolid();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00146"/>00146 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00147"/>00147 &#32;&#32;&#32;&#32;G4SubtractionSolid*&#32;sHoled&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4SubtractionSolid(sSubtratedSolid-&gt;GetName()+<emphasis role="stringliteral">&quot;_sub&quot;</emphasis>,&#32;sSubtratedSolid,&#32;subtracterSolid);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00148"/>00148 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00149"/>00149 &#32;&#32;&#32;&#32;m_masterVolume-&gt;SetSolid(sHoled);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00150"/>00150 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00151"/>00151 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00152"/>00152 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00153"/>00153 <emphasis role="keywordtype">void</emphasis>&#32;TMXCoreKIPT::placeGeometry(<emphasis role="keywordtype">bool</emphasis>&#32;overlap,&#32;G4ThreeVector&#32;position,&#32;G4RotationMatrix*&#32;rotation,&#32;G4LogicalVolume*&#32;masterVolume,&#32;std::string&#32;latticeType)&#32;{&#32;&#32;<emphasis role="comment">//&#32;Place&#32;elements&#32;of&#32;the&#32;target&#32;in&#32;the&#32;geometry</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Place&#32;the&#32;master&#32;volume&#32;that&#32;contain&#32;the&#32;core</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00155"/>00155 &#32;&#32;&#32;&#32;<emphasis role="keyword">new</emphasis>&#32;G4PVPlacement(rotation,&#32;position,&#32;m_masterVolume,&#32;<emphasis role="stringliteral">&quot;pCore&quot;</emphasis>,&#32;masterVolume,&#32;<emphasis role="keyword">false</emphasis>,&#32;0,&#32;overlap);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00156"/>00156 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00159"/>00159 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_TMXFuelAssemblies.size()&#32;!=&#32;0&#32;&amp;&amp;&#32;m_TMXReflectorAssemblies.size()&#32;!=&#32;0)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(latticeType&#32;==&#32;<emphasis role="stringliteral">&quot;hexagonal&quot;</emphasis>&#32;||&#32;latticeType&#32;==&#32;<emphasis role="stringliteral">&quot;hexa&quot;</emphasis>)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_p-&gt;Verbose&#32;==&#32;1)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------&#32;Begin&#32;Assembly&#32;------------------&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00163"/>00163 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00164"/>00164 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00165"/>00165 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Example&#32;of&#32;Hexagonal&#32;Lattice&#32;(0&#32;=&#32;void)</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00166"/>00166 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;-2&#32;2&#32;&#32;&#32;-2&#32;2</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00167"/>00167 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;0&#32;0&#32;0&#32;0&#32;&#32;&#32;&#32;&#32;&#32;&#32;//&#32;y=-2&#32;;&#32;x=[-2;&#32;2]&#32;&#32;&#32;&#32;&#32;0&#32;0&#32;0&#32;0&#32;0</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00168"/>00168 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;0&#32;1&#32;1&#32;0&#32;&#32;&#32;&#32;&#32;&#32;//&#32;y=-1&#32;;&#32;x=[-2;&#32;2]&#32;&#32;&#32;&#32;&#32;&#32;0&#32;0&#32;F&#32;F&#32;0</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00169"/>00169 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;1&#32;1&#32;1&#32;0&#32;&#32;&#32;&#32;&#32;//&#32;y=&#32;0&#32;;&#32;x=[-2;&#32;2]&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;F&#32;F&#32;F&#32;0</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00170"/>00170 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;1&#32;1&#32;0&#32;0&#32;&#32;&#32;&#32;//&#32;y=&#32;1&#32;;&#32;x=[-2;&#32;2]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;F&#32;F&#32;0&#32;0</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00171"/>00171 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;0&#32;0&#32;0&#32;0&#32;&#32;&#32;//&#32;y=&#32;2&#32;;&#32;x=[-2;&#32;2]&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;0&#32;0&#32;0&#32;0&#32;0</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00172"/>00172 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;read&#32;README.md&#32;in&#32;latticeMap&#32;for&#32;more&#32;precision</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00173"/>00173 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00174"/>00174 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;xMin,&#32;xMax,&#32;yMin,&#32;yMax;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nx,&#32;ny;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;x,&#32;y;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;r&#32;=&#32;fOuterRadius_assembly;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;d&#32;=&#32;std::sqrt(3)&#32;*&#32;r;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;countFuel&#32;=&#32;0,&#32;countReflector&#32;=&#32;0;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4RotationMatrix*&#32;zRot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4RotationMatrix;&#32;<emphasis role="comment">//&#32;Rotates&#32;X&#32;and&#32;Z&#32;axes&#32;only</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;zRot-&gt;rotateZ(30.*deg);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00183"/>00183 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;lineCount&#32;=&#32;0;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;line,&#32;assID;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00186"/>00186 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::ifstream&#32;file(fLatticeMapFile);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00187"/>00187 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(std::getline(file,&#32;line))&#32;{&#32;<emphasis role="comment">//&#32;Read&#32;by&#32;line</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::stringstream&#32;input(line);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(lineCount&#32;==&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;first&#32;line,&#32;receive&#32;the&#32;limits&#32;of&#32;the&#32;lattice</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;input&#32;&gt;&gt;&#32;xMin&#32;&gt;&gt;&#32;xMax&#32;&gt;&gt;&#32;yMin&#32;&gt;&gt;&#32;yMax;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nx&#32;=&#32;xMin;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ny&#32;=&#32;yMin;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;<emphasis role="comment">//&#32;Structure&#32;of&#32;the&#32;lattice</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(input&#32;&gt;&gt;&#32;assID)&#32;{&#32;<emphasis role="comment">//&#32;read&#32;by&#32;word&#32;for&#32;any&#32;length&#32;of&#32;space&#32;between&#32;words</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(assID&#32;!=&#32;<emphasis role="stringliteral">&quot;0&quot;</emphasis>)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(assID&#32;==&#32;<emphasis role="stringliteral">&quot;1&quot;</emphasis>&#32;||&#32;assID&#32;==&#32;<emphasis role="stringliteral">&quot;F&quot;</emphasis>)&#32;{&#32;<emphasis role="comment">//&#32;Fuel&#32;Assembly</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_fuel_assembly_v_v_r_m2">TMXFuelAssemblyVVRM2</link>*&#32;FuelAssemblyVVRM2&#32;=&#32;m_TMXFuelAssemblies[countFuel];
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;2.*(double)(nx)*r&#32;+&#32;(double)(ny)*r;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;(double)ny*d;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;r&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;d&#32;&lt;&lt;&#32;&quot;&#32;&gt;&gt;&#32;&quot;&#32;&lt;&lt;&#32;x&#32;&lt;&lt;&#32;&quot;,&quot;&#32;&lt;&lt;&#32;y&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FuelAssemblyVVRM2-&gt;placeGeometry(overlap,&#32;G4ThreeVector(x,&#32;y,&#32;0.),&#32;zRot,&#32;m_masterVolume);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;countFuel++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>&#32;(assID&#32;==&#32;<emphasis role="stringliteral">&quot;2&quot;</emphasis>&#32;||&#32;assID&#32;==&#32;<emphasis role="stringliteral">&quot;R&quot;</emphasis>)&#32;{&#32;<emphasis role="comment">//&#32;Reflector&#32;Assembly</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_reflector_k_i_p_t">TMXReflectorKIPT</link>*&#32;ReflectorAssembly&#32;=&#32;m_TMXReflectorAssemblies[countReflector];
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;x&#32;=&#32;2.*(double)(nx)*r&#32;+&#32;(double)(ny)*r;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;y&#32;=&#32;(double)ny*d;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;r&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;d&#32;&lt;&lt;&#32;&quot;&#32;&gt;&gt;&#32;&quot;&#32;&lt;&lt;&#32;x&#32;&lt;&lt;&#32;&quot;,&quot;&#32;&lt;&lt;&#32;y&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ReflectorAssembly-&gt;placeGeometry(overlap,&#32;G4ThreeVector(x,&#32;y,&#32;0.),&#32;zRot,&#32;m_masterVolume);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;countReflector++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nx++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nx&#32;=&#32;xMin;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ny++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00220"/>00220 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lineCount++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00221"/>00221 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00222"/>00222 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_p-&gt;Verbose&#32;==&#32;1)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Lattice&#32;Configuration:&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\tx&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;xMin&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;;&quot;</emphasis>&#32;&lt;&lt;&#32;xMax&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\ty&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;yMin&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;;&quot;</emphasis>&#32;&lt;&lt;&#32;yMax&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00227"/>00227 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;-----------------&#32;End&#32;Assembly&#32;-------------------&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00231"/>00231 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00232"/>00232 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00233"/>00233 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00234"/>00234 <emphasis role="keywordtype">void</emphasis>&#32;TMXCoreKIPT::VisualisationConfig()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00235"/>00235 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_p-&gt;Verbose&#32;==&#32;1)&#32;{&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\nConfiguration&#32;of&#32;the&#32;visualisation&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00236"/>00236 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00238"/>00238 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;visualisation&#32;colors&#32;configured&#32;by&#32;DL</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00240"/>00240 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;G4Colour&#32;&#32;black&#32;&#32;&#32;(&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;black</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00241"/>00241 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;lblack&#32;&#32;(&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.6);&#32;<emphasis role="comment">//&#32;light&#32;black</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00242"/>00242 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;vlblack&#32;(&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;&#32;.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.2);&#32;<emphasis role="comment">//&#32;very&#32;light&#32;black</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00243"/>00243 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;white&#32;&#32;&#32;(1.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.3);&#32;<emphasis role="comment">//&#32;white</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00244"/>00244 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;grayD3l&#32;(211&#32;&#32;&#32;&#32;&#32;&#32;,&#32;211&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;211&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;gray&#32;D3&#32;(light)</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00245"/>00245 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;grayC&#32;&#32;&#32;(0.5&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;gray</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00246"/>00246 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;flgrayC&#32;(0.5&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.8);&#32;<emphasis role="comment">//&#32;few&#32;light&#32;gray</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00247"/>00247 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;lgrayC&#32;&#32;(0.5&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.4);&#32;<emphasis role="comment">//&#32;light&#32;gray</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00248"/>00248 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;vlgrayC&#32;(0.5&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.5&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.2);&#32;<emphasis role="comment">//&#32;very&#32;ligth&#32;gray</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00249"/>00249 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;red&#32;&#32;&#32;&#32;&#32;(1.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;red</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00250"/>00250 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;violet&#32;&#32;(1.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;violet</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00251"/>00251 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;orange&#32;&#32;(1.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.65&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;orange</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00252"/>00252 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;green&#32;&#32;&#32;(0.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;green</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00253"/>00253 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;lgreen&#32;&#32;(0.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.4);&#32;<emphasis role="comment">//&#32;light&#32;green</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00254"/>00254 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;blue&#32;&#32;&#32;&#32;(0.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;blue</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00255"/>00255 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;yellow&#32;&#32;(1.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;yellow</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00256"/>00256 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;lyellow&#32;(1.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.2);&#32;<emphasis role="comment">//&#32;light&#32;yellow</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00257"/>00257 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;cyan&#32;&#32;&#32;&#32;(0.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.2);&#32;<emphasis role="comment">//&#32;cya</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00258"/>00258 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;sky&#32;&#32;&#32;&#32;&#32;(0.0/255.0,&#32;191.0/255.0,&#32;255.0/255.0,&#32;0.2);&#32;<emphasis role="comment">//&#32;sky</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00259"/>00259 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;dgreen&#32;&#32;(0.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;153.0/255.0,&#32;153.0/255.0,&#32;0.2);&#32;<emphasis role="comment">//&#32;dark&#32;green</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00260"/>00260 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;cyangr&#32;&#32;(0.0&#32;&#32;&#32;&#32;&#32;&#32;,&#32;204.0/255.0,&#32;204.0/255.0&#32;&#32;&#32;&#32;&#32;);&#32;<emphasis role="comment">//&#32;cyan+green&#32;colour&#32;for&#32;different&#32;colour&#32;of&#32;h20</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00261"/>00261 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;lblue&#32;&#32;&#32;(0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;1.0&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.4);&#32;<emphasis role="comment">//&#32;light&#32;blue</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00262"/>00262 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;grayblu&#32;(0.4&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.6&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.8&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.6);&#32;<emphasis role="comment">//&#32;light&#32;gray&#32;blue</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00263"/>00263 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;wcolour&#32;(0.3&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.3&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.3&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00264"/>00264 &#32;&#32;&#32;&#32;G4Colour&#32;&#32;Ccolour&#32;(0.&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.3&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;,&#32;0.7&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00265"/>00265 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="comment">//G4bool&#32;bool_visible&#32;=&#32;true;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00268"/>00268 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00269"/>00269 &#32;&#32;&#32;&#32;G4VisAttributes*&#32;visWorld&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4VisAttributes(sky);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00270"/>00270 &#32;&#32;&#32;&#32;visWorld-&gt;SetVisibility(<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_masterVolume)&#32;{m_masterVolume-&gt;SetVisAttributes(visWorld);}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00272"/>00272 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00273"/>00273 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_p-&gt;Verbose&#32;==&#32;1)&#32;{&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;End&#32;of&#32;VisualisationConfig&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00274"/>00274 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00275"/>00275 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00276"/>00276 G4LogicalVolume*&#32;TMXCoreKIPT::getMasterVolume()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00277"/>00277 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(m_masterVolume);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_core_k_i_p_t_8cc_source_1l00278"/>00278 }
</programlisting></section>
