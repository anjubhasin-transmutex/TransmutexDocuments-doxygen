<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_t_m_x_abstract_target_assembly" xml:lang="en-US">
<title>TMXAbstractTargetAssembly Class Reference</title>
<indexterm><primary>TMXAbstractTargetAssembly</primary></indexterm>
<para>Inheritance diagram for TMXAbstractTargetAssembly:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_t_m_x_abstract_target_assembly.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_t_m_x_abstract_target_assembly_1a9653a618c940403dcf85c5219a5c3a0b">TMXAbstractTargetAssembly</link> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para>const std::vector&lt; G4VSolid * &gt; * <link linkend="_class_t_m_x_abstract_target_assembly_1aa6120cf696f2600b76e7e793d84cf4fe">getSolids</link> ()</para>
</listitem>
            <listitem><para>const std::vector&lt; G4ThreeVector * &gt; * <link linkend="_class_t_m_x_abstract_target_assembly_1a00ff34e005b02579ad2d33233ceb7360">getTranslations</link> ()</para>
</listitem>
            <listitem><para>const std::vector&lt; G4RotationMatrix * &gt; * <link linkend="_class_t_m_x_abstract_target_assembly_1ad61537b9a02d916c4433714c9c866530">getRotations</link> ()</para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a32449f5f63851b2b2dfc74e6d5295329">getTargetLogicalVolumes</link> ()</para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1aea0ae2e71635704e4510534978893d5d">getCladLogicalVolumes</link> ()</para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a575001f8eee9deb186047125b38b52bb">getCoolantLogicalVolumes</link> ()</para>
</listitem>
            <listitem><para>G4LogicalVolume * <link linkend="_class_t_m_x_abstract_target_assembly_1ae68eeb76a9dcae4910b4902b946c026a">getMasterVolume</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_target_assembly_1ac75557a9498633f4f1cd4ecd9d2aafda">getCladMaterial</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_target_assembly_1a99fda149b45fb5a0c83996c387b0d666">getTargetMaterial</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_target_assembly_1a5eee442843d07bee1e6c7320156e8fa1">getCoolantMaterial</link> ()</para>
</listitem>
            <listitem><para>const std::string * <link linkend="_class_t_m_x_abstract_target_assembly_1a8667c359e480e196232fd7048ed04e85">getAssemblyName</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_t_m_x_abstract_target_assembly_1ab6755cf566a07b92524b66f9ac8374f4">createMaterial</link> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2dbe83ef9aa86484b0a2fe78a54a7b97"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para>virtual G4Element * <link linkend="_class_t_m_x_abstract_target_assembly_1afa6d32a48000f1bba0584b1f7e598dba">ElementExists</link> (int Z, double A)</para>
</listitem>
            <listitem><para>virtual G4Element * <link linkend="_class_t_m_x_abstract_target_assembly_1ae4e5a26ab67bc7b78bb997288636bf6a">ElementExists</link> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afaa37c11d74cd39d8ccc789c0bd1adf4"/>virtual G4ThreeVector <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a91bac261b84ca57ba8e3f5e6086f7ffa"/>virtual void <emphasis role="strong">placeSlabs</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a7e97fffbbde68dd2ced383229d8ca5b6"/>virtual void <emphasis role="strong">placeCoolant</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af09d9905098b8d25819792bd4c481fbe"/>virtual void <emphasis role="strong">placeTube</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_t_m_x_abstract_target_assembly_1a2cb9798d9abe57da4ccc9ab3aa686e34">getFirstOccurence</link> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_t_m_x_abstract_target_assembly_1a55b51392fa334b351d963b44d488b11d">VisualisationConfig</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a9653a618c940403dcf85c5219a5c3a0b"/><emphasis role="strong">TMXAbstractTargetAssembly</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aa6120cf696f2600b76e7e793d84cf4fe"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a00ff34e005b02579ad2d33233ceb7360"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ad61537b9a02d916c4433714c9c866530"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a32449f5f63851b2b2dfc74e6d5295329"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTargetLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aea0ae2e71635704e4510534978893d5d"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCladLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a575001f8eee9deb186047125b38b52bb"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoolantLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ae68eeb76a9dcae4910b4902b946c026a"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ac75557a9498633f4f1cd4ecd9d2aafda"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCladMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a99fda149b45fb5a0c83996c387b0d666"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTargetMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a5eee442843d07bee1e6c7320156e8fa1"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoolantMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a8667c359e480e196232fd7048ed04e85"/>const std::string * <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a0e5082be6a95320a095a948c861968d7"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2dbe83ef9aa86484b0a2fe78a54a7b97"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a482e6c7311bf98ce9cd0cfca9cf7d984"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a83e21de0f94a4aaae701e64968042a20"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afaa37c11d74cd39d8ccc789c0bd1adf4"/>virtual G4ThreeVector <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a91bac261b84ca57ba8e3f5e6086f7ffa"/>virtual void <emphasis role="strong">placeSlabs</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a7e97fffbbde68dd2ced383229d8ca5b6"/>virtual void <emphasis role="strong">placeCoolant</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af09d9905098b8d25819792bd4c481fbe"/>virtual void <emphasis role="strong">placeTube</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2cb9798d9abe57da4ccc9ab3aa686e34"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1a98ce69e3d7f0d6eaa526e0b03d9fe0"/>virtual void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a9653a618c940403dcf85c5219a5c3a0b"/><emphasis role="strong">TMXAbstractTargetAssembly</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aa6120cf696f2600b76e7e793d84cf4fe"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a00ff34e005b02579ad2d33233ceb7360"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ad61537b9a02d916c4433714c9c866530"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a32449f5f63851b2b2dfc74e6d5295329"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTargetLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aea0ae2e71635704e4510534978893d5d"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCladLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a575001f8eee9deb186047125b38b52bb"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoolantLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ae68eeb76a9dcae4910b4902b946c026a"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ac75557a9498633f4f1cd4ecd9d2aafda"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCladMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a99fda149b45fb5a0c83996c387b0d666"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTargetMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a5eee442843d07bee1e6c7320156e8fa1"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoolantMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a8667c359e480e196232fd7048ed04e85"/>const std::string * <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a0e5082be6a95320a095a948c861968d7"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2dbe83ef9aa86484b0a2fe78a54a7b97"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a482e6c7311bf98ce9cd0cfca9cf7d984"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a83e21de0f94a4aaae701e64968042a20"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afaa37c11d74cd39d8ccc789c0bd1adf4"/>virtual G4ThreeVector <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a91bac261b84ca57ba8e3f5e6086f7ffa"/>virtual void <emphasis role="strong">placeSlabs</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a7e97fffbbde68dd2ced383229d8ca5b6"/>virtual void <emphasis role="strong">placeCoolant</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af09d9905098b8d25819792bd4c481fbe"/>virtual void <emphasis role="strong">placeTube</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2cb9798d9abe57da4ccc9ab3aa686e34"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1a98ce69e3d7f0d6eaa526e0b03d9fe0"/>virtual void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a9653a618c940403dcf85c5219a5c3a0b"/><emphasis role="strong">TMXAbstractTargetAssembly</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aa6120cf696f2600b76e7e793d84cf4fe"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a00ff34e005b02579ad2d33233ceb7360"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ad61537b9a02d916c4433714c9c866530"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a32449f5f63851b2b2dfc74e6d5295329"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTargetLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aea0ae2e71635704e4510534978893d5d"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCladLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a575001f8eee9deb186047125b38b52bb"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoolantLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ae68eeb76a9dcae4910b4902b946c026a"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ac75557a9498633f4f1cd4ecd9d2aafda"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCladMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a99fda149b45fb5a0c83996c387b0d666"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTargetMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a5eee442843d07bee1e6c7320156e8fa1"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoolantMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a8667c359e480e196232fd7048ed04e85"/>const std::string * <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a0e5082be6a95320a095a948c861968d7"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2dbe83ef9aa86484b0a2fe78a54a7b97"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a482e6c7311bf98ce9cd0cfca9cf7d984"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a83e21de0f94a4aaae701e64968042a20"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afaa37c11d74cd39d8ccc789c0bd1adf4"/>virtual G4ThreeVector <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a91bac261b84ca57ba8e3f5e6086f7ffa"/>virtual void <emphasis role="strong">placeSlabs</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a7e97fffbbde68dd2ced383229d8ca5b6"/>virtual void <emphasis role="strong">placeCoolant</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af09d9905098b8d25819792bd4c481fbe"/>virtual void <emphasis role="strong">placeTube</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2cb9798d9abe57da4ccc9ab3aa686e34"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1a98ce69e3d7f0d6eaa526e0b03d9fe0"/>virtual void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a9653a618c940403dcf85c5219a5c3a0b"/><emphasis role="strong">TMXAbstractTargetAssembly</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aa6120cf696f2600b76e7e793d84cf4fe"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a00ff34e005b02579ad2d33233ceb7360"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ad61537b9a02d916c4433714c9c866530"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a32449f5f63851b2b2dfc74e6d5295329"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTargetLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1aea0ae2e71635704e4510534978893d5d"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCladLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a575001f8eee9deb186047125b38b52bb"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoolantLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ae68eeb76a9dcae4910b4902b946c026a"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1ac75557a9498633f4f1cd4ecd9d2aafda"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCladMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a99fda149b45fb5a0c83996c387b0d666"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTargetMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a5eee442843d07bee1e6c7320156e8fa1"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoolantMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a8667c359e480e196232fd7048ed04e85"/>const std::string * <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a0e5082be6a95320a095a948c861968d7"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2dbe83ef9aa86484b0a2fe78a54a7b97"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a482e6c7311bf98ce9cd0cfca9cf7d984"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a83e21de0f94a4aaae701e64968042a20"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afaa37c11d74cd39d8ccc789c0bd1adf4"/>virtual G4ThreeVector <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a91bac261b84ca57ba8e3f5e6086f7ffa"/>virtual void <emphasis role="strong">placeSlabs</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a7e97fffbbde68dd2ced383229d8ca5b6"/>virtual void <emphasis role="strong">placeCoolant</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af09d9905098b8d25819792bd4c481fbe"/>virtual void <emphasis role="strong">placeTube</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2cb9798d9abe57da4ccc9ab3aa686e34"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1a98ce69e3d7f0d6eaa526e0b03d9fe0"/>virtual void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static const std::vector&lt; std::string &gt; * <link linkend="_class_t_m_x_abstract_target_assembly_1aafec3c237f97d58903edecfd419ff442">getTargetName</link> ()</para>
</listitem>
            <listitem><para>static const std::vector&lt; std::string &gt; * <link linkend="_class_t_m_x_abstract_target_assembly_1a0494fff5ff42e5d179b05b3ad2bd1b34">getCladName</link> ()</para>
</listitem>
            <listitem><para>static const std::vector&lt; std::string &gt; * <link linkend="_class_t_m_x_abstract_target_assembly_1aad21cb7f75cc08f66d09f4828d8ca841">getCoolantName</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af63ebca473e6b28d68141d666aa4f4d0"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTargetName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1446047ad342ee3e45e2ff08889a3714"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCladName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afa98be75cb348b131708c2bf8a9af0d4"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCoolantName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af63ebca473e6b28d68141d666aa4f4d0"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTargetName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1446047ad342ee3e45e2ff08889a3714"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCladName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afa98be75cb348b131708c2bf8a9af0d4"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCoolantName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af63ebca473e6b28d68141d666aa4f4d0"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTargetName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1446047ad342ee3e45e2ff08889a3714"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCladName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afa98be75cb348b131708c2bf8a9af0d4"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCoolantName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1af63ebca473e6b28d68141d666aa4f4d0"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTargetName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1446047ad342ee3e45e2ff08889a3714"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCladName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_target_assembly_1afa98be75cb348b131708c2bf8a9af0d4"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getCoolantName</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>const std::string <link linkend="_class_t_m_x_abstract_target_assembly_1a03f1b9c472d6047724c50c33bb5f8cf2">m_assemblyName</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * <link linkend="_class_t_m_x_abstract_target_assembly_1a4ba6000d34dd998559fe996130c88600">m_p</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_t_m_x_abstract_target_assembly_1a6ebf11f1e73cfc1172122e582a4cd1b6">m_copy_number</link></para>
</listitem>
            <listitem><para>std::vector&lt; double &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a3bfbf0c3aa21be4494c17a60cebcd98f">m_vectorTargetThickness</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4VSolid * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a1d7dd6212c14972498fec0b3c58eb629">m_Solids</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4ThreeVector * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a345503e1bbf6076f7f80286a6dea0b3f">m_translation</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4RotationMatrix * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a7cf53b6f303ae26dea6fd670f1cc17d7">m_rotation</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4VSolid * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a81dd8e3ebf13999dd26f38c81dcdd5a3">m_targetSolidVolumes</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4VSolid * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1af95adc80be51ff84939cec101fc8cd12">m_cladSolidVolumes</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4VSolid * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a5a2692b28f3e8c4213f6128005f23a09">m_coolantSolidVolumes</link></para>
</listitem>
            <listitem><para>G4LogicalVolume * <link linkend="_class_t_m_x_abstract_target_assembly_1a066c5e5fec2d83e344c8bd2681ed0c4f">m_masterVolume</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1afb25eb4d32690ddf26527e03e2b85d56">m_targetLogicalVolumes</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1abe82029462942dd6a2dbed87ae66004a">m_cladLogicalVolumes</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1aba0ed3208f0600a926a835227ae4a3db">m_coolantLogicalVolumes</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_target_assembly_1a836135b0b6f04fb26eea3313d9f9bd1f">m_CladMaterial</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_target_assembly_1a2f41246ceb5114045cc6ff03bfb74cef">m_TargetMaterial</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_target_assembly_1a4ce7bb3aa9eef1f20491f2f614097bb5">m_CoolantMaterial</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>static std::vector&lt; std::string &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1aedd1ddb0c3cf75004358084cb9bb0593">m_targetName</link></para>
</listitem>
            <listitem><para>static std::vector&lt; std::string &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a1f57fb6c34d9a8007bba62477a0e761e">m_cladName</link></para>
</listitem>
            <listitem><para>static std::vector&lt; std::string &gt; <link linkend="_class_t_m_x_abstract_target_assembly_1a4c67b73396a9d1dc9042c15c27e639d1">m_coolantName</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00045">45</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a9653a618c940403dcf85c5219a5c3a0b"/><section>
    <title>TMXAbstractTargetAssembly()</title>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<para><computeroutput>TMXAbstractTargetAssembly::TMXAbstractTargetAssembly (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * parameters, const std::string &amp; TargetAssemblyName)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00047">47</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a8c9718487b2389dfca41f66efa980b33"/><section>
    <title>~TMXAbstractTargetAssembly()</title>
<indexterm><primary>~TMXAbstractTargetAssembly</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>~TMXAbstractTargetAssembly</secondary></indexterm>
<para><computeroutput>TMXAbstractTargetAssembly::~TMXAbstractTargetAssembly ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00057">57</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1ab6755cf566a07b92524b66f9ac8374f4"/><section>
    <title>createMaterial()</title>
<indexterm><primary>createMaterial</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>createMaterial</secondary></indexterm>
<para><computeroutput>void TMXAbstractTargetAssembly::createMaterial (double Kelvin_temperature = <computeroutput>273.15</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00096">96</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1afa6d32a48000f1bba0584b1f7e598dba"/><section>
    <title>ElementExists()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ElementExists</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>ElementExists</secondary></indexterm>
<para><computeroutput>G4Element * TMXAbstractTargetAssembly::ElementExists (int Z, double A)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00151">151</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1ae4e5a26ab67bc7b78bb997288636bf6a"/><section>
    <title>ElementExists()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ElementExists</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>ElementExists</secondary></indexterm>
<para><computeroutput>G4Element * TMXAbstractTargetAssembly::ElementExists (std::string name)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00162">162</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a8667c359e480e196232fd7048ed04e85"/><section>
    <title>getAssemblyName()</title>
<indexterm><primary>getAssemblyName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getAssemblyName</secondary></indexterm>
<para><computeroutput>const std::string * TMXAbstractTargetAssembly::getAssemblyName ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00305">305</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1aea0ae2e71635704e4510534978893d5d"/><section>
    <title>getCladLogicalVolumes()</title>
<indexterm><primary>getCladLogicalVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getCladLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractTargetAssembly::getCladLogicalVolumes ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00245">245</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1ac75557a9498633f4f1cd4ecd9d2aafda"/><section>
    <title>getCladMaterial()</title>
<indexterm><primary>getCladMaterial</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getCladMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractTargetAssembly::getCladMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00290">290</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a0494fff5ff42e5d179b05b3ad2bd1b34"/><section>
    <title>getCladName()</title>
<indexterm><primary>getCladName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getCladName</secondary></indexterm>
<para><computeroutput>const std::vector&lt; std::string &gt; * TMXAbstractTargetAssembly::getCladName ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00313">313</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a575001f8eee9deb186047125b38b52bb"/><section>
    <title>getCoolantLogicalVolumes()</title>
<indexterm><primary>getCoolantLogicalVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getCoolantLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractTargetAssembly::getCoolantLogicalVolumes ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00250">250</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a5eee442843d07bee1e6c7320156e8fa1"/><section>
    <title>getCoolantMaterial()</title>
<indexterm><primary>getCoolantMaterial</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getCoolantMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractTargetAssembly::getCoolantMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00300">300</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1aad21cb7f75cc08f66d09f4828d8ca841"/><section>
    <title>getCoolantName()</title>
<indexterm><primary>getCoolantName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getCoolantName</secondary></indexterm>
<para><computeroutput>const std::vector&lt; std::string &gt; * TMXAbstractTargetAssembly::getCoolantName ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00317">317</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2cb9798d9abe57da4ccc9ab3aa686e34"/><section>
    <title>getFirstOccurence()</title>
<indexterm><primary>getFirstOccurence</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getFirstOccurence</secondary></indexterm>
<para><computeroutput>size_t TMXAbstractTargetAssembly::getFirstOccurence (std::vector&lt; std::string &gt; * nameVector)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00173">173</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1ae68eeb76a9dcae4910b4902b946c026a"/><section>
    <title>getMasterVolume()</title>
<indexterm><primary>getMasterVolume</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getMasterVolume</secondary></indexterm>
<para><computeroutput>G4LogicalVolume * TMXAbstractTargetAssembly::getMasterVolume ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00091">91</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1ad61537b9a02d916c4433714c9c866530"/><section>
    <title>getRotations()</title>
<indexterm><primary>getRotations</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getRotations</secondary></indexterm>
<para><computeroutput>const std::vector&lt; G4RotationMatrix * &gt; * TMXAbstractTargetAssembly::getRotations ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00265">265</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1aa6120cf696f2600b76e7e793d84cf4fe"/><section>
    <title>getSolids()</title>
<indexterm><primary>getSolids</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getSolids</secondary></indexterm>
<para><computeroutput>const std::vector&lt; G4VSolid * &gt; * TMXAbstractTargetAssembly::getSolids ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00255">255</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a32449f5f63851b2b2dfc74e6d5295329"/><section>
    <title>getTargetLogicalVolumes()</title>
<indexterm><primary>getTargetLogicalVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getTargetLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractTargetAssembly::getTargetLogicalVolumes ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00240">240</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a99fda149b45fb5a0c83996c387b0d666"/><section>
    <title>getTargetMaterial()</title>
<indexterm><primary>getTargetMaterial</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getTargetMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractTargetAssembly::getTargetMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00295">295</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1aafec3c237f97d58903edecfd419ff442"/><section>
    <title>getTargetName()</title>
<indexterm><primary>getTargetName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getTargetName</secondary></indexterm>
<para><computeroutput>const std::vector&lt; std::string &gt; * TMXAbstractTargetAssembly::getTargetName ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00309">309</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a00ff34e005b02579ad2d33233ceb7360"/><section>
    <title>getTranslations()</title>
<indexterm><primary>getTranslations</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>getTranslations</secondary></indexterm>
<para><computeroutput>const std::vector&lt; G4ThreeVector * &gt; * TMXAbstractTargetAssembly::getTranslations ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00260">260</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a55b51392fa334b351d963b44d488b11d"/><section>
    <title>VisualisationConfig()</title>
<indexterm><primary>VisualisationConfig</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>VisualisationConfig</secondary></indexterm>
<para><computeroutput>void TMXAbstractTargetAssembly::VisualisationConfig ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source_1l00182">182</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8cc_source">TMXAbstractTargetAssembly.cc</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a03f1b9c472d6047724c50c33bb5f8cf2"/><section>
    <title>m_assemblyName</title>
<indexterm><primary>m_assemblyName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_assemblyName</secondary></indexterm>
<para><computeroutput>const std::string TMXAbstractTargetAssembly::m_assemblyName<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00102">102</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1abe82029462942dd6a2dbed87ae66004a"/><section>
    <title>m_cladLogicalVolumes</title>
<indexterm><primary>m_cladLogicalVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_cladLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractTargetAssembly::m_cladLogicalVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00129">129</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a836135b0b6f04fb26eea3313d9f9bd1f"/><section>
    <title>m_CladMaterial</title>
<indexterm><primary>m_CladMaterial</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_CladMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractTargetAssembly::m_CladMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00138">138</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1f57fb6c34d9a8007bba62477a0e761e"/><section>
    <title>m_cladName</title>
<indexterm><primary>m_cladName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_cladName</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::string &gt; TMXAbstractTargetAssembly::m_cladName<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00104">104</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1af95adc80be51ff84939cec101fc8cd12"/><section>
    <title>m_cladSolidVolumes</title>
<indexterm><primary>m_cladSolidVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_cladSolidVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4VSolid * &gt; TMXAbstractTargetAssembly::m_cladSolidVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00120">120</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1aba0ed3208f0600a926a835227ae4a3db"/><section>
    <title>m_coolantLogicalVolumes</title>
<indexterm><primary>m_coolantLogicalVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_coolantLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractTargetAssembly::m_coolantLogicalVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00130">130</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a4ce7bb3aa9eef1f20491f2f614097bb5"/><section>
    <title>m_CoolantMaterial</title>
<indexterm><primary>m_CoolantMaterial</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_CoolantMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractTargetAssembly::m_CoolantMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00140">140</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a4c67b73396a9d1dc9042c15c27e639d1"/><section>
    <title>m_coolantName</title>
<indexterm><primary>m_coolantName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_coolantName</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::string &gt; TMXAbstractTargetAssembly::m_coolantName<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00105">105</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a5a2692b28f3e8c4213f6128005f23a09"/><section>
    <title>m_coolantSolidVolumes</title>
<indexterm><primary>m_coolantSolidVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_coolantSolidVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4VSolid * &gt; TMXAbstractTargetAssembly::m_coolantSolidVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00121">121</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a6ebf11f1e73cfc1172122e582a4cd1b6"/><section>
    <title>m_copy_number</title>
<indexterm><primary>m_copy_number</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_copy_number</secondary></indexterm>
<para><computeroutput>int TMXAbstractTargetAssembly::m_copy_number<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00107">107</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a066c5e5fec2d83e344c8bd2681ed0c4f"/><section>
    <title>m_masterVolume</title>
<indexterm><primary>m_masterVolume</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_masterVolume</secondary></indexterm>
<para><computeroutput>G4LogicalVolume * TMXAbstractTargetAssembly::m_masterVolume<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00126">126</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a4ba6000d34dd998559fe996130c88600"/><section>
    <title>m_p</title>
<indexterm><primary>m_p</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_p</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * TMXAbstractTargetAssembly::m_p<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00106">106</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a7cf53b6f303ae26dea6fd670f1cc17d7"/><section>
    <title>m_rotation</title>
<indexterm><primary>m_rotation</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_rotation</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4RotationMatrix * &gt; TMXAbstractTargetAssembly::m_rotation<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00117">117</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a1d7dd6212c14972498fec0b3c58eb629"/><section>
    <title>m_Solids</title>
<indexterm><primary>m_Solids</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_Solids</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4VSolid * &gt; TMXAbstractTargetAssembly::m_Solids<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00115">115</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1afb25eb4d32690ddf26527e03e2b85d56"/><section>
    <title>m_targetLogicalVolumes</title>
<indexterm><primary>m_targetLogicalVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_targetLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractTargetAssembly::m_targetLogicalVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00128">128</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a2f41246ceb5114045cc6ff03bfb74cef"/><section>
    <title>m_TargetMaterial</title>
<indexterm><primary>m_TargetMaterial</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_TargetMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractTargetAssembly::m_TargetMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00139">139</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1aedd1ddb0c3cf75004358084cb9bb0593"/><section>
    <title>m_targetName</title>
<indexterm><primary>m_targetName</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_targetName</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::string &gt; TMXAbstractTargetAssembly::m_targetName<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00103">103</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a81dd8e3ebf13999dd26f38c81dcdd5a3"/><section>
    <title>m_targetSolidVolumes</title>
<indexterm><primary>m_targetSolidVolumes</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_targetSolidVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4VSolid * &gt; TMXAbstractTargetAssembly::m_targetSolidVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00119">119</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a345503e1bbf6076f7f80286a6dea0b3f"/><section>
    <title>m_translation</title>
<indexterm><primary>m_translation</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_translation</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4ThreeVector * &gt; TMXAbstractTargetAssembly::m_translation<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00116">116</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_target_assembly_1a3bfbf0c3aa21be4494c17a60cebcd98f"/><section>
    <title>m_vectorTargetThickness</title>
<indexterm><primary>m_vectorTargetThickness</primary><secondary>TMXAbstractTargetAssembly</secondary></indexterm>
<indexterm><primary>TMXAbstractTargetAssembly</primary><secondary>m_vectorTargetThickness</secondary></indexterm>
<para><computeroutput>std::vector&lt; double &gt; TMXAbstractTargetAssembly::m_vectorTargetThickness<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source_1l00110">110</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_abstract_target_assembly_8hh_source">TMXAbstractTargetAssembly.hh</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/include/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/include/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/include/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/include/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.hh/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/include/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/src/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/src/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.cc/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/NSource/NeutronEmmiter/TMXAbstractTargetAssembly.cc</section>
</section>
