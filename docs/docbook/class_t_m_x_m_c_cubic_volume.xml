<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_t_m_x_m_c_cubic_volume" xml:lang="en-US">
<title>TMXMCCubicVolume Class Reference</title>
<indexterm><primary>TMXMCCubicVolume</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_t_m_x_m_c_cubic_volume_1abd9fb4d24b7900f1ca1e80d1f14b889e">TMXMCCubicVolume</link> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *p)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a38b7c771612a5ddc7074162963bf9a51">setErrorLimit</link> (const double errorLimit)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1aa0c3452edfb450073ccbc211e097cbb3">setNavigator</link> (G4Navigator *navigator)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1ac8a33d33c9f33809bb8e2e3739a57ebe">setNumberOfPoints</link> (const long nbPoints)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a9c89e485da9daf09fb417663c0b28215">setSlicedLogicalVolume</link> (std::string logicalVolumeName)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a7a2407353c356d2ccef1c54648ebc63f">setSliceBoundariesZ</link> (G4double minZ, G4double maxZ, int nbinsZ)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1ac4c0ca4e5615e97ed6df642c0808c986">buildMapLogicalVolume</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a2b631a4ece1487f93640dbe33ec0e5eb">buildMapMaterial</link> ()</para>
</listitem>
            <listitem><para>double <link linkend="_class_t_m_x_m_c_cubic_volume_1a7d548547f683f49882871b2f7617693c">getError</link> (const long nbPointsInsideVolume) const</para>
</listitem>
            <listitem><para>double <link linkend="_class_t_m_x_m_c_cubic_volume_1adefbf30c8e9fc357aca41b48b3dedee5">getMaximumError</link> () const</para>
</listitem>
            <listitem><para>double <link linkend="_class_t_m_x_m_c_cubic_volume_1a95e677a83ee8f85785045e8c246af007">getMaximumErrorLV</link> () const</para>
</listitem>
            <listitem><para>double <link linkend="_class_t_m_x_m_c_cubic_volume_1add4d7fde8cbcf2cac16f3d656efb64ec">getMaximumErrorMat</link> () const</para>
</listitem>
            <listitem><para>double <link linkend="_class_t_m_x_m_c_cubic_volume_1ab5d806e6a62e71b16966c8632db2582a">getMaximumErrorSlicedLV</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1ac4a87f5bfe5441a5b9fc5df2cd44bc80">run</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1aed2d17e9803add01f4971a54939dda5c">runMCVolumeEstimator</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a437928e62b03501c817b34ad50eb3909">runSlicedLogicalVolumeMC</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a3364647503cb09b3e85818a75a3e8504">calculationMC</link> (const long nbPoints, const G4double halfX, const G4double halfY, const G4double halfZ)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a7bb1e1a0330a5d1ff1be318b8d2a7e97">calculationMCSlicedLV</link> (const long nbPoints, const G4double halfX, const G4double halfY, G4String LVname)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1ae29f5ab6f1aa5f1f50f13e7323760d44">printLogicalVolumeMap</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a762b7642168df019cab90bc9848c15d0">printMaterialMap</link> () const</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_m_c_cubic_volume_1a0f648a0937caeff440780998487f1fc9">printSlicedVolume</link> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1abd9fb4d24b7900f1ca1e80d1f14b889e"/><emphasis role="strong">TMXMCCubicVolume</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *p)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a38b7c771612a5ddc7074162963bf9a51"/>void <emphasis role="strong">setErrorLimit</emphasis> (const double errorLimit)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aa0c3452edfb450073ccbc211e097cbb3"/>void <emphasis role="strong">setNavigator</emphasis> (G4Navigator *navigator)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac8a33d33c9f33809bb8e2e3739a57ebe"/>void <emphasis role="strong">setNumberOfPoints</emphasis> (const long nbPoints)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a9c89e485da9daf09fb417663c0b28215"/>void <emphasis role="strong">setSlicedLogicalVolume</emphasis> (std::string logicalVolumeName)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7a2407353c356d2ccef1c54648ebc63f"/>void <emphasis role="strong">setSliceBoundariesZ</emphasis> (G4double minZ, G4double maxZ, int nbinsZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4c0ca4e5615e97ed6df642c0808c986"/>void <emphasis role="strong">buildMapLogicalVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a2b631a4ece1487f93640dbe33ec0e5eb"/>void <emphasis role="strong">buildMapMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7d548547f683f49882871b2f7617693c"/>double <emphasis role="strong">getError</emphasis> (const long nbPointsInsideVolume) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1adefbf30c8e9fc357aca41b48b3dedee5"/>double <emphasis role="strong">getMaximumError</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a95e677a83ee8f85785045e8c246af007"/>double <emphasis role="strong">getMaximumErrorLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1add4d7fde8cbcf2cac16f3d656efb64ec"/>double <emphasis role="strong">getMaximumErrorMat</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ab5d806e6a62e71b16966c8632db2582a"/>double <emphasis role="strong">getMaximumErrorSlicedLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4a87f5bfe5441a5b9fc5df2cd44bc80"/>void <emphasis role="strong">run</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aed2d17e9803add01f4971a54939dda5c"/>void <emphasis role="strong">runMCVolumeEstimator</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a437928e62b03501c817b34ad50eb3909"/>void <emphasis role="strong">runSlicedLogicalVolumeMC</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a3364647503cb09b3e85818a75a3e8504"/>void <emphasis role="strong">calculationMC</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, const G4double halfZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7bb1e1a0330a5d1ff1be318b8d2a7e97"/>void <emphasis role="strong">calculationMCSlicedLV</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, G4String LVname)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ae29f5ab6f1aa5f1f50f13e7323760d44"/>void <emphasis role="strong">printLogicalVolumeMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a762b7642168df019cab90bc9848c15d0"/>void <emphasis role="strong">printMaterialMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a0f648a0937caeff440780998487f1fc9"/>void <emphasis role="strong">printSlicedVolume</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1abd9fb4d24b7900f1ca1e80d1f14b889e"/><emphasis role="strong">TMXMCCubicVolume</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *p)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a38b7c771612a5ddc7074162963bf9a51"/>void <emphasis role="strong">setErrorLimit</emphasis> (const double errorLimit)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aa0c3452edfb450073ccbc211e097cbb3"/>void <emphasis role="strong">setNavigator</emphasis> (G4Navigator *navigator)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac8a33d33c9f33809bb8e2e3739a57ebe"/>void <emphasis role="strong">setNumberOfPoints</emphasis> (const long nbPoints)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a9c89e485da9daf09fb417663c0b28215"/>void <emphasis role="strong">setSlicedLogicalVolume</emphasis> (std::string logicalVolumeName)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7a2407353c356d2ccef1c54648ebc63f"/>void <emphasis role="strong">setSliceBoundariesZ</emphasis> (G4double minZ, G4double maxZ, int nbinsZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4c0ca4e5615e97ed6df642c0808c986"/>void <emphasis role="strong">buildMapLogicalVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a2b631a4ece1487f93640dbe33ec0e5eb"/>void <emphasis role="strong">buildMapMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7d548547f683f49882871b2f7617693c"/>double <emphasis role="strong">getError</emphasis> (const long nbPointsInsideVolume) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1adefbf30c8e9fc357aca41b48b3dedee5"/>double <emphasis role="strong">getMaximumError</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a95e677a83ee8f85785045e8c246af007"/>double <emphasis role="strong">getMaximumErrorLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1add4d7fde8cbcf2cac16f3d656efb64ec"/>double <emphasis role="strong">getMaximumErrorMat</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ab5d806e6a62e71b16966c8632db2582a"/>double <emphasis role="strong">getMaximumErrorSlicedLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4a87f5bfe5441a5b9fc5df2cd44bc80"/>void <emphasis role="strong">run</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aed2d17e9803add01f4971a54939dda5c"/>void <emphasis role="strong">runMCVolumeEstimator</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a437928e62b03501c817b34ad50eb3909"/>void <emphasis role="strong">runSlicedLogicalVolumeMC</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a3364647503cb09b3e85818a75a3e8504"/>void <emphasis role="strong">calculationMC</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, const G4double halfZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7bb1e1a0330a5d1ff1be318b8d2a7e97"/>void <emphasis role="strong">calculationMCSlicedLV</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, G4String LVname)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ae29f5ab6f1aa5f1f50f13e7323760d44"/>void <emphasis role="strong">printLogicalVolumeMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a762b7642168df019cab90bc9848c15d0"/>void <emphasis role="strong">printMaterialMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a0f648a0937caeff440780998487f1fc9"/>void <emphasis role="strong">printSlicedVolume</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1abd9fb4d24b7900f1ca1e80d1f14b889e"/><emphasis role="strong">TMXMCCubicVolume</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *p)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a38b7c771612a5ddc7074162963bf9a51"/>void <emphasis role="strong">setErrorLimit</emphasis> (const double errorLimit)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aa0c3452edfb450073ccbc211e097cbb3"/>void <emphasis role="strong">setNavigator</emphasis> (G4Navigator *navigator)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac8a33d33c9f33809bb8e2e3739a57ebe"/>void <emphasis role="strong">setNumberOfPoints</emphasis> (const long nbPoints)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a9c89e485da9daf09fb417663c0b28215"/>void <emphasis role="strong">setSlicedLogicalVolume</emphasis> (std::string logicalVolumeName)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7a2407353c356d2ccef1c54648ebc63f"/>void <emphasis role="strong">setSliceBoundariesZ</emphasis> (G4double minZ, G4double maxZ, int nbinsZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4c0ca4e5615e97ed6df642c0808c986"/>void <emphasis role="strong">buildMapLogicalVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a2b631a4ece1487f93640dbe33ec0e5eb"/>void <emphasis role="strong">buildMapMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7d548547f683f49882871b2f7617693c"/>double <emphasis role="strong">getError</emphasis> (const long nbPointsInsideVolume) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1adefbf30c8e9fc357aca41b48b3dedee5"/>double <emphasis role="strong">getMaximumError</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a95e677a83ee8f85785045e8c246af007"/>double <emphasis role="strong">getMaximumErrorLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1add4d7fde8cbcf2cac16f3d656efb64ec"/>double <emphasis role="strong">getMaximumErrorMat</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ab5d806e6a62e71b16966c8632db2582a"/>double <emphasis role="strong">getMaximumErrorSlicedLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4a87f5bfe5441a5b9fc5df2cd44bc80"/>void <emphasis role="strong">run</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aed2d17e9803add01f4971a54939dda5c"/>void <emphasis role="strong">runMCVolumeEstimator</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a437928e62b03501c817b34ad50eb3909"/>void <emphasis role="strong">runSlicedLogicalVolumeMC</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a3364647503cb09b3e85818a75a3e8504"/>void <emphasis role="strong">calculationMC</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, const G4double halfZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7bb1e1a0330a5d1ff1be318b8d2a7e97"/>void <emphasis role="strong">calculationMCSlicedLV</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, G4String LVname)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ae29f5ab6f1aa5f1f50f13e7323760d44"/>void <emphasis role="strong">printLogicalVolumeMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a762b7642168df019cab90bc9848c15d0"/>void <emphasis role="strong">printMaterialMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a0f648a0937caeff440780998487f1fc9"/>void <emphasis role="strong">printSlicedVolume</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1abd9fb4d24b7900f1ca1e80d1f14b889e"/><emphasis role="strong">TMXMCCubicVolume</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *p)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a38b7c771612a5ddc7074162963bf9a51"/>void <emphasis role="strong">setErrorLimit</emphasis> (const double errorLimit)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aa0c3452edfb450073ccbc211e097cbb3"/>void <emphasis role="strong">setNavigator</emphasis> (G4Navigator *navigator)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac8a33d33c9f33809bb8e2e3739a57ebe"/>void <emphasis role="strong">setNumberOfPoints</emphasis> (const long nbPoints)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a9c89e485da9daf09fb417663c0b28215"/>void <emphasis role="strong">setSlicedLogicalVolume</emphasis> (std::string logicalVolumeName)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7a2407353c356d2ccef1c54648ebc63f"/>void <emphasis role="strong">setSliceBoundariesZ</emphasis> (G4double minZ, G4double maxZ, int nbinsZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4c0ca4e5615e97ed6df642c0808c986"/>void <emphasis role="strong">buildMapLogicalVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a2b631a4ece1487f93640dbe33ec0e5eb"/>void <emphasis role="strong">buildMapMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7d548547f683f49882871b2f7617693c"/>double <emphasis role="strong">getError</emphasis> (const long nbPointsInsideVolume) const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1adefbf30c8e9fc357aca41b48b3dedee5"/>double <emphasis role="strong">getMaximumError</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a95e677a83ee8f85785045e8c246af007"/>double <emphasis role="strong">getMaximumErrorLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1add4d7fde8cbcf2cac16f3d656efb64ec"/>double <emphasis role="strong">getMaximumErrorMat</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ab5d806e6a62e71b16966c8632db2582a"/>double <emphasis role="strong">getMaximumErrorSlicedLV</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4a87f5bfe5441a5b9fc5df2cd44bc80"/>void <emphasis role="strong">run</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aed2d17e9803add01f4971a54939dda5c"/>void <emphasis role="strong">runMCVolumeEstimator</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a437928e62b03501c817b34ad50eb3909"/>void <emphasis role="strong">runSlicedLogicalVolumeMC</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a3364647503cb09b3e85818a75a3e8504"/>void <emphasis role="strong">calculationMC</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, const G4double halfZ)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7bb1e1a0330a5d1ff1be318b8d2a7e97"/>void <emphasis role="strong">calculationMCSlicedLV</emphasis> (const long nbPoints, const G4double halfX, const G4double halfY, G4String LVname)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ae29f5ab6f1aa5f1f50f13e7323760d44"/>void <emphasis role="strong">printLogicalVolumeMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a762b7642168df019cab90bc9848c15d0"/>void <emphasis role="strong">printMaterialMap</emphasis> () const</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a0f648a0937caeff440780998487f1fc9"/>void <emphasis role="strong">printSlicedVolume</emphasis> () const</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__benchmark-1_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00042">42</link> of file <link linkend="__benchmark-1_2include_2_t_m_x_m_c_cubic_volume_8hh_source">TMXMCCubicVolume.hh</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1abd9fb4d24b7900f1ca1e80d1f14b889e"/><section>
    <title>TMXMCCubicVolume()</title>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<para><computeroutput>TMXMCCubicVolume::TMXMCCubicVolume (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * p)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00026">26</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a60170f53b86952c8908db2aede332959"/><section>
    <title>~TMXMCCubicVolume()</title>
<indexterm><primary>~TMXMCCubicVolume</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>~TMXMCCubicVolume</secondary></indexterm>
<para><computeroutput>TMXMCCubicVolume::~TMXMCCubicVolume ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00039">39</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4c0ca4e5615e97ed6df642c0808c986"/><section>
    <title>buildMapLogicalVolume()</title>
<indexterm><primary>buildMapLogicalVolume</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>buildMapLogicalVolume</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::buildMapLogicalVolume ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00045">45</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a2b631a4ece1487f93640dbe33ec0e5eb"/><section>
    <title>buildMapMaterial()</title>
<indexterm><primary>buildMapMaterial</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>buildMapMaterial</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::buildMapMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00058">58</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a3364647503cb09b3e85818a75a3e8504"/><section>
    <title>calculationMC()</title>
<indexterm><primary>calculationMC</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>calculationMC</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::calculationMC (const long nbPoints, const G4double halfX, const G4double halfY, const G4double halfZ)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00346">346</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7bb1e1a0330a5d1ff1be318b8d2a7e97"/><section>
    <title>calculationMCSlicedLV()</title>
<indexterm><primary>calculationMCSlicedLV</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>calculationMCSlicedLV</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::calculationMCSlicedLV (const long nbPoints, const G4double halfX, const G4double halfY, G4String LVname)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00364">364</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7d548547f683f49882871b2f7617693c"/><section>
    <title>getError()</title>
<indexterm><primary>getError</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>getError</secondary></indexterm>
<para><computeroutput>double TMXMCCubicVolume::getError (const long nbPointsInsideVolume) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00108">108</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1adefbf30c8e9fc357aca41b48b3dedee5"/><section>
    <title>getMaximumError()</title>
<indexterm><primary>getMaximumError</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>getMaximumError</secondary></indexterm>
<para><computeroutput>double TMXMCCubicVolume::getMaximumError ( ) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00112">112</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a95e677a83ee8f85785045e8c246af007"/><section>
    <title>getMaximumErrorLV()</title>
<indexterm><primary>getMaximumErrorLV</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>getMaximumErrorLV</secondary></indexterm>
<para><computeroutput>double TMXMCCubicVolume::getMaximumErrorLV ( ) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00121">121</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1add4d7fde8cbcf2cac16f3d656efb64ec"/><section>
    <title>getMaximumErrorMat()</title>
<indexterm><primary>getMaximumErrorMat</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>getMaximumErrorMat</secondary></indexterm>
<para><computeroutput>double TMXMCCubicVolume::getMaximumErrorMat ( ) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00132">132</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ab5d806e6a62e71b16966c8632db2582a"/><section>
    <title>getMaximumErrorSlicedLV()</title>
<indexterm><primary>getMaximumErrorSlicedLV</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>getMaximumErrorSlicedLV</secondary></indexterm>
<para><computeroutput>double TMXMCCubicVolume::getMaximumErrorSlicedLV ( ) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00143">143</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ae29f5ab6f1aa5f1f50f13e7323760d44"/><section>
    <title>printLogicalVolumeMap()</title>
<indexterm><primary>printLogicalVolumeMap</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>printLogicalVolumeMap</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::printLogicalVolumeMap ( ) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00386">386</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a762b7642168df019cab90bc9848c15d0"/><section>
    <title>printMaterialMap()</title>
<indexterm><primary>printMaterialMap</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>printMaterialMap</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::printMaterialMap ( ) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00439">439</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a0f648a0937caeff440780998487f1fc9"/><section>
    <title>printSlicedVolume()</title>
<indexterm><primary>printSlicedVolume</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>printSlicedVolume</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::printSlicedVolume ( ) const</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00491">491</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac4a87f5bfe5441a5b9fc5df2cd44bc80"/><section>
    <title>run()</title>
<indexterm><primary>run</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>run</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::run ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00183">183</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aed2d17e9803add01f4971a54939dda5c"/><section>
    <title>runMCVolumeEstimator()</title>
<indexterm><primary>runMCVolumeEstimator</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>runMCVolumeEstimator</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::runMCVolumeEstimator ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00193">193</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a437928e62b03501c817b34ad50eb3909"/><section>
    <title>runSlicedLogicalVolumeMC()</title>
<indexterm><primary>runSlicedLogicalVolumeMC</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>runSlicedLogicalVolumeMC</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::runSlicedLogicalVolumeMC ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00270">270</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a38b7c771612a5ddc7074162963bf9a51"/><section>
    <title>setErrorLimit()</title>
<indexterm><primary>setErrorLimit</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>setErrorLimit</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::setErrorLimit (const double errorLimit)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00076">76</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1aa0c3452edfb450073ccbc211e097cbb3"/><section>
    <title>setNavigator()</title>
<indexterm><primary>setNavigator</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>setNavigator</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::setNavigator (G4Navigator * navigator)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00080">80</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1ac8a33d33c9f33809bb8e2e3739a57ebe"/><section>
    <title>setNumberOfPoints()</title>
<indexterm><primary>setNumberOfPoints</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>setNumberOfPoints</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::setNumberOfPoints (const long nbPoints)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00085">85</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a7a2407353c356d2ccef1c54648ebc63f"/><section>
    <title>setSliceBoundariesZ()</title>
<indexterm><primary>setSliceBoundariesZ</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>setSliceBoundariesZ</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::setSliceBoundariesZ (G4double minZ, G4double maxZ, int nbinsZ)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00094">94</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_m_c_cubic_volume_1a9c89e485da9daf09fb417663c0b28215"/><section>
    <title>setSlicedLogicalVolume()</title>
<indexterm><primary>setSlicedLogicalVolume</primary><secondary>TMXMCCubicVolume</secondary></indexterm>
<indexterm><primary>TMXMCCubicVolume</primary><secondary>setSlicedLogicalVolume</secondary></indexterm>
<para><computeroutput>void TMXMCCubicVolume::setSlicedLogicalVolume (std::string logicalVolumeName)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00089">89</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_m_c_cubic_volume_8cc_source">TMXMCCubicVolume.cc</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/include/TMXMCCubicVolume.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/include/TMXMCCubicVolume.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/include/TMXMCCubicVolume.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/include/TMXMCCubicVolume.hh/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/include/TMXMCCubicVolume.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/src/TMXMCCubicVolume.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/TMXMCCubicVolume.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/TMXMCCubicVolume.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/src/TMXMCCubicVolume.cc/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/TMXMCCubicVolume.cc</section>
</section>
