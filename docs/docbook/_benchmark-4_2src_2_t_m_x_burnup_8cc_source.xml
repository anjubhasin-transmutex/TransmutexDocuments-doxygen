<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source" xml:lang="en-US">
<title>TMXBurnup.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/src/TMXBurnup.cc</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00001"/>00001 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00005"/>00005 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00006"/>00006 <emphasis role="comment">//&#32;TMXBurnup</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00007"/>00007 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00008"/>00008 <emphasis role="comment">//&#32;Donovan&#32;Maire,&#32;Transmutex,&#32;01/09/2020</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;Copyright&#32;2020&#32;Transmutex&#32;SA&#32;--&#32;all&#32;rights&#32;reserved</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00011"/>00011 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00012"/>00012 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00013"/>00013 <emphasis role="comment">//&#32;Transmutex&#32;class</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;TMXBurnup.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;TMXElements.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;DetectorConstruction.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00017"/>00017 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00018"/>00018 <emphasis role="comment">//&#32;GEANT4&#32;class</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;G4SystemOfUnits.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00020"/>00020 <emphasis role="preprocessor">#include&#32;&quot;G4NistManager.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&quot;G4RunManager.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00022"/>00022 <emphasis role="preprocessor">#include&#32;&quot;G4Isotope.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&quot;G4HadronicProcess.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&quot;G4Ions.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00025"/>00025 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00026"/>00026 <link linkend="_class_t_m_x_burnup_1a5d28367eda495a6f1aa7d631a8b27459">TMXBurnup::TMXBurnup</link>()&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00027"/>00027 &#32;&#32;&#32;&#32;Initialize();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00028"/>00028 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00029"/>00029 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00030"/>00030 TMXBurnup::~TMXBurnup()&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00031"/>00031 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00032"/>00032 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00033"/>00033 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::Initialize()&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00034"/>00034 &#32;&#32;&#32;&#32;fMap_N0.clear();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00035"/>00035 &#32;&#32;&#32;&#32;fDecimal_place&#32;=&#32;14;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;!&#32;TMXElementStore::Store().size()&#32;)&#32;{TMXElementStore::BuildElementDB();}&#32;<emphasis role="comment">//&#32;Build&#32;the&#32;database</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00037"/>00037 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00038"/>00038 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00039"/>00039 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::ChangeMaterial(<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>&amp;&#32;p,&#32;G4LogicalVolumeStore&#32;*LVStore,&#32;<link linkend="_class_t_m_x_bateman_decay">TMXBatemanDecay</link>&amp;&#32;batemanDecay,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_step)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00040"/>00040 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n******************&quot;</emphasis>&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00041"/>00041 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Begin&#32;of&#32;Run:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;i_step&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00042"/>00042 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;******************\n\n&quot;</emphasis>&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00043"/>00043 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;Decayt&#32;=&#32;p.TimeOfRun;&#32;<emphasis role="comment">//&#32;Decay&#32;time&#32;[s]</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00044"/>00044 &#32;&#32;&#32;&#32;fMap_Nt.clear();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00045"/>00045 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i_step&#32;==&#32;p.Nrun&#32;&amp;&amp;&#32;p.CoolingTime&#32;&gt;&#32;0)
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00047"/>00047 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Decayt&#32;=&#32;p.CoolingTime;&#32;<emphasis role="comment">//&#32;Decay&#32;time&#32;[s]</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.MultiplyTransmutedElem(&#32;1&#32;/p.Nparticles&#32;);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_detector_construction">DetectorConstruction</link>*&#32;det&#32;=&#32;<emphasis role="keyword">static_cast&lt;</emphasis><emphasis role="keyword">const&#32;</emphasis><link linkend="_class_detector_construction">DetectorConstruction</link>*<emphasis role="keyword">&gt;</emphasis>&#32;(G4RunManager::GetRunManager()-&gt;GetUserDetectorConstruction());
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;N_fuelrods&#32;=&#32;1;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(p.Geometry&#32;==&#32;1&#32;)&#32;N_fuelrods&#32;=&#32;det-&gt;GetTotalCopyNumberFuelRods();&#32;<emphasis role="comment">//&#32;Total&#32;number&#32;of&#32;fuel&#32;rods</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00054"/>00054 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Convert&#32;number&#32;of&#32;transmuted&#32;elements&#32;to&#32;a&#32;transmutation&#32;rate&#32;[s-1]&#32;per&#32;fuel&#32;rods&#32;because&#32;the&#32;logical&#32;volume&#32;corresponds&#32;to&#32;only&#32;1&#32;fuel&#32;rod&#32;WARNING</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00056"/>00056 &#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;batemanDecay.MultiplyTransmutedElem(&#32;Decayt&#32;*&#32;p.P_beam/(p.Nparticles*e_SI*p.BeamEnergy)&#32;/(double)&#32;N_fuelrods);&#32;&#32;//&#32;Number&#32;of&#32;elements&#32;converted&#32;in&#32;reaction&#32;rate&#32;[s-1]&#32;@&#32;p.P_beam</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00057"/>00057 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;batemanDecay.MultiplyTransmutedElem(&#32;1.&#32;);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;amount&#32;of&#32;transmuted&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;batemanDecay.DumpTransmutedElements();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00061"/>00061 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(G4LogicalVolumeStore::iterator&#32;it_LV=LVStore-&gt;begin();&#32;it_LV!=LVStore-&gt;end();&#32;++it_LV)&#32;{&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;logical&#32;volume&#32;store</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4LogicalVolume&#32;*LV&#32;=&#32;*it_LV;&#32;<emphasis role="comment">//&#32;Define&#32;the&#32;logical&#32;volume</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;LVName&#32;=&#32;LV-&gt;GetName();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(LVName.find(<emphasis role="stringliteral">&quot;Scoring&quot;</emphasis>)&#32;==&#32;std::string::npos&#32;)&#32;{&#32;&#32;<emphasis role="comment">//&#32;Do&#32;not&#32;consider&#32;the&#32;parallel&#32;Scoring&#32;World&#32;or&#32;the&#32;Scoring&#32;world</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00066"/>00066 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;\t&quot;&lt;&lt;LVName&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(p.Geometry&#32;==&#32;4)
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.MultiplyTransmutedElem(&#32;(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>)&#32;(1.&#32;/&#32;det-&gt;getGeomSVBR()-&gt;getNumberOfCopies(LV)),&#32;LVName);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00070"/>00070 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.MultiplyTransmutedElem(&#32;1.,&#32;LVName);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00071"/>00071 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;\t\t\t&quot;&lt;&lt;LVName&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;det-&gt;getGeomSVBR()-&gt;getNumberOfCopies(LV)&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00072"/>00072 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00073"/>00073 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConstructMapN0AndDecayChain(LV,&#32;i_step,&#32;batemanDecay);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ConstructMapN0WithTransmutedElem(LV,&#32;i_step,&#32;batemanDecay);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00075"/>00075 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;the&#32;decay&#32;of&#32;element&#32;already&#32;present&#32;in&#32;the&#32;material&#32;or&#32;added&#32;by&#32;the&#32;proton&#32;beam&#32;or&#32;fissions</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00077"/>00077 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.CalculateDecayNtNoTransmutation(Decayt,&#32;LVName);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00078"/>00078 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Define&#32;new&#32;material</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00082"/>00082 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Count&#32;the&#32;number&#32;of&#32;elements&#32;and&#32;Calculate&#32;element&#32;and&#32;material&#32;masses</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&#32;MapNt(batemanDecay.GetMapNt().begin(),batemanDecay.GetMapNt().end());&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;amount&#32;of&#32;isotopes&#32;after&#32;decay</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;newMaterialMass&#32;=&#32;0;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;std::pair&lt;int,&#32;long&#32;double&gt;&#32;&gt;&#32;MassElement;&#32;<emphasis role="comment">//&#32;Total&#32;mass&#32;and&#32;number&#32;of&#32;isotopes&#32;for&#32;every&#32;elements&#32;in&#32;the&#32;new&#32;material</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00087"/>00087 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CalculateNbElementsAndMass(MassElement,&#32;MapNt,&#32;newMaterialMass);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00089"/>00089 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(LVName&#32;==&#32;&quot;lfuelmat23&quot;)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00090"/>00090 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;&#32;&quot;MASS&#32;&quot;&#32;&lt;&lt;&#32;&#32;&#32;&#32;&#32;newMaterialMass&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00091"/>00091 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;the&#32;material&#32;with&#32;new&#32;elements&#32;composed&#32;of&#32;one&#32;or&#32;several&#32;isotopes</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Material*&#32;LVMaterial&#32;=&#32;LV-&gt;GetMaterial();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LV-&gt;SetMaterial(DefineNewMaterial(LVName,&#32;i_step,&#32;LVMaterial,&#32;MassElement,&#32;MapNt,&#32;newMaterialMass));
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fMap_Nt[LVName]&#32;=&#32;MapNt;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00096"/>00096 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00097"/>00097 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00098"/>00098 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(LVName&#32;==&#32;&quot;lfuelmat23&quot;)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00099"/>00099 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00100"/>00100 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;\nInside&#32;BURNUP1&quot;&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00101"/>00101 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::map&lt;int,&#32;long&#32;double&gt;::iterator&#32;it_isotope=MapNt.begin();&#32;it_isotope!=MapNt.end();&#32;++it_isotope)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00102"/>00102 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;it_isotope-&gt;first&lt;&lt;&quot;&#32;&quot;&lt;&lt;it_isotope-&gt;second&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00103"/>00103 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00104"/>00104 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00105"/>00105 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;LVMass&#32;=&#32;LV-&gt;GetMass(true)/g;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00106"/>00106 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;testMass&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;false,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;false,&#32;LV-&gt;GetMaterial())/g</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00107"/>00107 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00108"/>00108 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;Mass&#32;&quot;&lt;&lt;LVMass&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00109"/>00109 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;testMass&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;false,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;false,&#32;LV-&gt;GetMaterial())/g</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00110"/>00110 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00111"/>00111 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4double*&#32;MassFractionVector&#32;&#32;&#32;&#32;=&#32;LVMaterial-&gt;GetFractionVector();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00112"/>00112 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4int*&#32;AtomsVector&#32;&#32;&#32;&#32;=&#32;LVMaterial-&gt;GetAtomsVector();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00113"/>00113 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for(long&#32;unsigned&#32;int&#32;j=0;&#32;j&#32;&lt;&#32;LVMaterial-&gt;GetNumberOfElements();&#32;++j)&#32;{&#32;&#32;//&#32;Read&#32;every&#32;elements&#32;in&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00114"/>00114 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00115"/>00115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4Element*&#32;Element&#32;=&#32;LVMaterial-&gt;GetElement(j);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00116"/>00116 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double*&#32;RelativAbundanceVec=&#32;Element-&gt;GetRelativeAbundanceVector();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00117"/>00117 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for(long&#32;unsigned&#32;int&#32;i=0;&#32;i&#32;&lt;&#32;Element-&gt;GetNumberOfIsotopes();&#32;++i)&#32;{&#32;//&#32;Read&#32;every&#32;isotopes&#32;in&#32;the&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00118"/>00118 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00119"/>00119 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4Isotope*&#32;Isotope&#32;=&#32;Element-&gt;GetIsotope(i);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00120"/>00120 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;IZA&#32;=&#32;Isotope-&gt;GetZ()*10000&#32;+&#32;Isotope-&gt;GetN()*10&#32;+&#32;Isotope-&gt;Getm();&#32;&#32;//&#32;IZA&#32;identifier</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00121"/>00121 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;MolarMass&#32;=&#32;Isotope-&gt;GetN();&#32;//&#32;Isotope-&gt;GetA()/(g/(mole*amu_c2));</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00122"/>00122 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;long&#32;double&#32;N0&#32;=&#32;MassFractionVector[j]&#32;*&#32;RelativAbundanceVec[i]&#32;*&#32;LVMass&#32;/&#32;MolarMass&#32;*&#32;CLHEP::Avogadro;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00123"/>00123 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00124"/>00124 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;IZA&lt;&lt;&quot;&#32;&quot;&lt;&lt;&#32;N0&lt;&lt;&quot;&#32;&quot;&lt;&lt;&#32;AtomsVector[j]&lt;&lt;std::endl;&#32;//&#32;Store&#32;N0&#32;for&#32;post-analysis</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00125"/>00125 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00126"/>00126 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00127"/>00127 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}*/</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00129"/>00129 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00130"/>00130 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00131"/>00131 &#32;<emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(LVName&#32;==&#32;&quot;lfuelmat23&quot;){</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00132"/>00132 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;\n&#32;Inside&#32;BURNUP2&quot;&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00133"/>00133 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::map&lt;int,&#32;long&#32;double&gt;::iterator&#32;it_isotope2=fMap_Nt[&quot;lfuelmat23&quot;].begin();&#32;it_isotope2!=fMap_Nt[&quot;lfuelmat23&quot;].end();&#32;++it_isotope2)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00134"/>00134 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;it_isotope2-&gt;first&lt;&lt;&quot;&#32;&quot;&lt;&lt;it_isotope2-&gt;second&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00135"/>00135 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00136"/>00136 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00137"/>00137 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(G4LogicalVolumeStore::iterator&#32;it_LV2=LVStore-&gt;begin();&#32;it_LV2!=LVStore-&gt;end();&#32;++it_LV2)&#32;{&#32;//&#32;Read&#32;the&#32;logical&#32;volume&#32;store</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00138"/>00138 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4LogicalVolume&#32;*LV2&#32;=&#32;*it_LV2;&#32;//&#32;Define&#32;the&#32;logical&#32;volume</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00139"/>00139 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;LVName2&#32;=&#32;LV2-&gt;GetName();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00140"/>00140 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(LVName2.find(&quot;Scoring&quot;)&#32;==&#32;std::string::npos&#32;)&#32;{&#32;&#32;//&#32;Do&#32;not&#32;consider&#32;the&#32;parallel&#32;Scoring&#32;World&#32;or&#32;the&#32;Scoring&#32;world</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00141"/>00141 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00142"/>00142 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(LVName2&#32;==&#32;&quot;lfuelmat23&quot;)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00143"/>00143 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00144"/>00144 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Material*&#32;LVMaterial&#32;=&#32;LV2-&gt;GetMaterial();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00145"/>00145 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00146"/>00146 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;LVMass&#32;=&#32;LV-&gt;GetMass(true)/g;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00147"/>00147 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;testMass&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;false,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;false,&#32;LV-&gt;GetMaterial())/g</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00148"/>00148 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00149"/>00149 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;Mass&#32;&quot;&lt;&lt;LVMass&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00150"/>00150 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;testMass&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;false,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(true,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;false,&#32;LV-&gt;GetMaterial())/g</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00151"/>00151 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;LV-&gt;GetMass(false,&#32;true,&#32;LV-&gt;GetMaterial())/g&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00152"/>00152 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4double*&#32;MassFractionVector&#32;&#32;&#32;&#32;=&#32;LVMaterial-&gt;GetFractionVector();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00153"/>00153 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4int*&#32;AtomsVector&#32;&#32;&#32;&#32;=&#32;LVMaterial-&gt;GetAtomsVector();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00154"/>00154 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for(long&#32;unsigned&#32;int&#32;j=0;&#32;j&#32;&lt;&#32;LVMaterial-&gt;GetNumberOfElements();&#32;++j)&#32;{&#32;&#32;//&#32;Read&#32;every&#32;elements&#32;in&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00155"/>00155 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00156"/>00156 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4Element*&#32;Element&#32;=&#32;LVMaterial-&gt;GetElement(j);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00157"/>00157 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double*&#32;RelativAbundanceVec=&#32;Element-&gt;GetRelativeAbundanceVector();</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00158"/>00158 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for(long&#32;unsigned&#32;int&#32;i=0;&#32;i&#32;&lt;&#32;Element-&gt;GetNumberOfIsotopes();&#32;++i)&#32;{&#32;//&#32;Read&#32;every&#32;isotopes&#32;in&#32;the&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00159"/>00159 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00160"/>00160 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;G4Isotope*&#32;Isotope&#32;=&#32;Element-&gt;GetIsotope(i);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00161"/>00161 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;IZA&#32;=&#32;Isotope-&gt;GetZ()*10000&#32;+&#32;Isotope-&gt;GetN()*10&#32;+&#32;Isotope-&gt;Getm();&#32;&#32;//&#32;IZA&#32;identifier</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00162"/>00162 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;MolarMass&#32;=&#32;Isotope-&gt;GetN();&#32;//&#32;Isotope-&gt;GetA()/(g/(mole*amu_c2));</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00163"/>00163 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;long&#32;double&#32;N0&#32;=&#32;MassFractionVector[j]&#32;*&#32;RelativAbundanceVec[i]&#32;*&#32;LVMass&#32;/&#32;MolarMass&#32;*&#32;CLHEP::Avogadro;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00164"/>00164 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00165"/>00165 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;IZA&lt;&lt;&quot;&#32;&quot;&lt;&lt;&#32;N0&lt;&lt;&quot;&#32;&quot;&lt;&lt;&#32;AtomsVector[j]&lt;&lt;std::endl;&#32;//&#32;Store&#32;N0&#32;for&#32;post-analysis</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00166"/>00166 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00167"/>00167 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00168"/>00168 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00169"/>00169 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00170"/>00170 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}}*/</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00171"/>00171 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.ClearMapN_0();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.ClearMapS_0();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.ClearMapNt();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.ClearMapChains();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00176"/>00176 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00177"/>00177 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n******************&quot;</emphasis>&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00178"/>00178 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;End&#32;of&#32;Run:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;i_step&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00179"/>00179 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;******************\n\n&quot;</emphasis>&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00180"/>00180 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00181"/>00181 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n******************&quot;</emphasis>&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00182"/>00182 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;End&#32;of&#32;Run:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;i_step&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00183"/>00183 &#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;******************\n\n&quot;</emphasis>&#32;&lt;&lt;&#32;G4endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00184"/>00184 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00185"/>00185 &#32;&#32;&#32;&#32;batemanDecay.ClearMapTransmutedSrcElem();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00186"/>00186 &#32;&#32;&#32;&#32;batemanDecay.ClearMapTransmutedElement();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00187"/>00187 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Print&#32;stored&#32;linear&#32;decay&#32;chains</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00189"/>00189 &#32;&#32;&#32;&#32;batemanDecay.DumpStoredChains();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00190"/>00190 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00191"/>00191 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00192"/>00192 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::ConstructMapN0AndDecayChain(G4LogicalVolume&#32;*LV,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_step,&#32;<link linkend="_class_t_m_x_bateman_decay">TMXBatemanDecay</link>&amp;&#32;batemanDecay)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00193"/>00193 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;LVMass&#32;=&#32;LV-&gt;GetMass()/g;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00194"/>00194 &#32;&#32;&#32;&#32;G4Material*&#32;LVMaterial&#32;=&#32;LV-&gt;GetMaterial();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00195"/>00195 &#32;&#32;&#32;&#32;std::string&#32;LVName&#32;=&#32;LV-&gt;GetName();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00196"/>00196 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;LVmass&#32;[g]&#32;:&#32;&quot;&#32;&lt;&lt;&#32;LVMass&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00197"/>00197 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double*&#32;MassFractionVector&#32;&#32;&#32;&#32;=&#32;LVMaterial-&gt;GetFractionVector();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00198"/>00198 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=0;&#32;j&#32;&lt;&#32;LVMaterial-&gt;GetNumberOfElements();&#32;++j)&#32;{&#32;&#32;<emphasis role="comment">//&#32;Read&#32;every&#32;elements&#32;in&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4Element*&#32;Element&#32;=&#32;LVMaterial-&gt;GetElement(j);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double*&#32;RelativAbundanceVec=&#32;Element-&gt;GetRelativeAbundanceVector();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00201"/>00201 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;LVmat&#32;n&#32;isotop&#32;:&#32;&quot;&#32;&lt;&lt;&#32;Element-&gt;GetNumberOfIsotopes()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=0;&#32;i&#32;&lt;&#32;Element-&gt;GetNumberOfIsotopes();&#32;++i)&#32;{&#32;<emphasis role="comment">//&#32;Read&#32;every&#32;isotopes&#32;in&#32;the&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4Isotope*&#32;Isotope&#32;=&#32;Element-&gt;GetIsotope(i);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZA&#32;=&#32;Isotope-&gt;GetZ()*10000&#32;+&#32;Isotope-&gt;GetN()*10&#32;+&#32;Isotope-&gt;Getm();&#32;&#32;<emphasis role="comment">//&#32;IZA&#32;identifier</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;MolarMass&#32;=&#32;&#32;Isotope-&gt;GetA()/(g/mole);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00206"/>00206 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double&#32;MolarMass&#32;=&#32;&#32;G4NistManager::Instance()-&gt;GetAtomicMass(Isotope-&gt;GetZ(),Isotope-&gt;GetN());&#32;//&#32;Isotope-&gt;GetA()/(g/mole);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;N0&#32;=&#32;MassFractionVector[j]&#32;*&#32;RelativAbundanceVec[i]&#32;*&#32;LVMass&#32;/&#32;MolarMass&#32;*&#32;CLHEP::Avogadro;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00208"/>00208 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fMap_N0[IZA][LVName][i_step]&#32;+=&#32;N0;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00210"/>00210 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00211"/>00211 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;IZA&#32;:&#32;&quot;&#32;&lt;&lt;&#32;IZA&#32;&lt;&lt;&#32;&quot;&#32;MassFrac&#32;&quot;&#32;&lt;&lt;&#32;MassFractionVector[j]&#32;&lt;&lt;&#32;&quot;&#32;Relabun&#32;&quot;&#32;&lt;&lt;&#32;RelativAbundanceVec[i]&#32;&lt;&lt;&#32;&quot;&#32;LVMass&#32;&quot;&#32;&lt;&lt;&#32;LVMass&#32;&lt;&lt;&#32;&quot;&#32;MolarMass&#32;&quot;&#32;&lt;&lt;&#32;MolarMass&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00212"/>00212 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.ConstructMapN_0(IZA,&#32;N0);&#32;<emphasis role="comment">//&#32;Give&#32;initial&#32;amount&#32;of&#32;each&#32;isotope&#32;before&#32;decay&#32;(t=0)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.NormalizeTransmutedElem(IZA,&#32;LVName);&#32;<emphasis role="comment">//&#32;Normalize&#32;number&#32;of&#32;transmuted&#32;elements&#32;(or&#32;transmutation&#32;rate)&#32;by&#32;the&#32;number&#32;of&#32;elements&#32;already&#32;in&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.ConstructChain(IZA,&#32;LVName);&#32;&#32;<emphasis role="comment">//&#32;Construct&#32;linear&#32;decay&#32;paths&#32;for&#32;every&#32;isotopes&#32;in&#32;the&#32;volume</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00216"/>00216 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(IZA&#32;==&#32;922380)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00217"/>00217 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;IZA&#32;:&#32;&quot;&#32;&lt;&lt;&#32;IZA&#32;&lt;&lt;&#32;&quot;&#32;;&#32;LVmass&#32;:&#32;&quot;&#32;&lt;&lt;&#32;LVMass&#32;&lt;&lt;&#32;&quot;&#32;;&#32;Relabund&#32;:&#32;&quot;&#32;&lt;&lt;&#32;RelativAbundanceVec[i]&#32;&lt;&lt;&#32;&quot;&#32;;&#32;MolarMass&#32;:&#32;&quot;&#32;&lt;&lt;&#32;MolarMass&#32;&lt;&lt;&#32;&quot;&#32;;&#32;mass&#32;:&#32;&quot;&#32;&lt;&lt;&#32;MassFractionVector[j]&#32;*&#32;RelativAbundanceVec[i]&#32;*&#32;LVMass&#32;&lt;&lt;&#32;&quot;&#32;N0&#32;:&#32;&quot;&#32;&lt;&lt;&#32;N0&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00218"/>00218 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00219"/>00219 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00220"/>00220 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00221"/>00221 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00222"/>00222 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00223"/>00223 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::ConstructMapN0WithTransmutedElem(G4LogicalVolume&#32;*LV,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_step,&#32;<link linkend="_class_t_m_x_bateman_decay">TMXBatemanDecay</link>&amp;&#32;batemanDecay)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00224"/>00224 &#32;&#32;&#32;&#32;G4double&#32;LVMass&#32;=&#32;LV-&gt;GetMass(<emphasis role="keyword">true</emphasis>)/g;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00225"/>00225 &#32;&#32;&#32;&#32;G4Material*&#32;LVMaterial&#32;=&#32;LV-&gt;GetMaterial();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00226"/>00226 &#32;&#32;&#32;&#32;std::string&#32;LVName&#32;=&#32;LV-&gt;GetName();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00227"/>00227 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double*&#32;MassFractionVector&#32;&#32;&#32;&#32;=&#32;LVMaterial-&gt;GetFractionVector();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00228"/>00228 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=0;&#32;j&#32;&lt;&#32;LVMaterial-&gt;GetNumberOfElements();&#32;++j)&#32;{&#32;&#32;<emphasis role="comment">//&#32;Read&#32;every&#32;elements&#32;in&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00229"/>00229 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4Element*&#32;Element&#32;=&#32;LVMaterial-&gt;GetElement(j);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double*&#32;RelativAbundanceVec=&#32;Element-&gt;GetRelativeAbundanceVector();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i=0;&#32;i&#32;&lt;&#32;Element-&gt;GetNumberOfIsotopes();&#32;++i)&#32;{&#32;<emphasis role="comment">//&#32;Read&#32;every&#32;isotopes&#32;in&#32;the&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00233"/>00233 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4Isotope*&#32;Isotope&#32;=&#32;Element-&gt;GetIsotope(i);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZA&#32;=&#32;Isotope-&gt;GetZ()*10000&#32;+&#32;Isotope-&gt;GetN()*10&#32;+&#32;Isotope-&gt;Getm();&#32;&#32;<emphasis role="comment">//&#32;IZA&#32;identifier</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;MolarMass&#32;=&#32;Isotope-&gt;GetN();&#32;<emphasis role="comment">//&#32;Isotope-&gt;GetA()/(g/(mole*amu_c2));</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;N0&#32;=&#32;MassFractionVector[j]&#32;*&#32;RelativAbundanceVec[i]&#32;*&#32;LVMass&#32;/&#32;MolarMass&#32;*&#32;CLHEP::Avogadro;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00238"/>00238 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fMap_N0[IZA][LVName][i_step]&#32;+=&#32;N0;&#32;<emphasis role="comment">//&#32;Store&#32;N0&#32;for&#32;post-analysis</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;batemanDecay.ConstructMapN_0(IZA,&#32;N0);&#32;<emphasis role="comment">//&#32;Give&#32;initial&#32;amount&#32;of&#32;each&#32;isotope&#32;before&#32;decay&#32;(t=0)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00242"/>00242 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00243"/>00243 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00244"/>00244 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;//&#32;Direct&#32;addition&#32;or&#32;substraction&#32;of&#32;the&#32;build&#32;up&#32;or&#32;depletion&#32;of&#32;elements</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00245"/>00245 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;Consider&#32;transmuted&#32;elem&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00246"/>00246 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;batemanDecay.ConsiderTransmutedElements(LVName);</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00247"/>00247 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;End&#32;Consider&#32;transmuted&#32;elem&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00248"/>00248 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00249"/>00249 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00250"/>00250 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::CalculateNbElementsAndMass(std::unordered_map&lt;<emphasis role="keywordtype">int</emphasis>,&#32;std::pair&lt;int,&#32;long&#32;double&gt;&#32;&gt;&amp;&#32;MassElement,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&amp;&#32;MapNt,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&amp;&#32;newMaterialMass)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00251"/>00251 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::map&lt;int,&#32;long&#32;double&gt;::iterator&#32;isotope=MapNt.begin();&#32;isotope!=MapNt.end();&#32;++isotope)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZA&#32;=&#32;isotope-&gt;first;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00253"/>00253 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_t_m_x_element">TMXElement</link>&#32;*TMXElem&#32;=&#32;TMXElementStore::GetElement(IZA);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00254"/>00254 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;mass&#32;=&#32;isotope-&gt;second/CLHEP::Avogadro&#32;*&#32;TMXElem-&gt;Mweight();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++MassElement[IZA].first;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00257"/>00257 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;MassElement[IZA].second&#32;+=&#32;mass;&#32;<emphasis role="comment">//&#32;Mass&#32;=&#32;N0/N_Avogadro&#32;*&#32;MolarMass(=A)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00258"/>00258 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newMaterialMass&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+=&#32;mass;&#32;<emphasis role="comment">//&#32;Mass&#32;=&#32;N0/N_Avogadro&#32;*&#32;MolarMass(=A)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00259"/>00259 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00260"/>00260 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00261"/>00261 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00262"/>00262 G4Material*&#32;TMXBurnup::DefineNewMaterial(std::string&#32;LVName,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_step,&#32;G4Material*&#32;LVMaterial,&#32;std::unordered_map&lt;<emphasis role="keywordtype">int</emphasis>,&#32;std::pair&lt;int,&#32;long&#32;double&gt;&#32;&gt;&amp;&#32;MassElement,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&amp;&#32;MapNt,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;newMaterialMass)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Fill&#32;the&#32;material&#32;with&#32;new&#32;elements&#32;composed&#32;of&#32;one&#32;or&#32;several&#32;isotopes</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00264"/>00264 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00265"/>00265 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4ElementVector*&#32;elemVec&#32;=&#32;LVMaterial-&gt;GetElementVector()&#32;;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00266"/>00266 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00267"/>00267 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Define&#32;new&#32;material&#32;name</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00268"/>00268 &#32;&#32;&#32;&#32;std::string&#32;matName&#32;=&#32;LVMaterial-&gt;GetName();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00269"/>00269 &#32;&#32;&#32;&#32;std::size_t&#32;found&#32;=&#32;matName.find(<emphasis role="stringliteral">&quot;-&quot;</emphasis>);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00270"/>00270 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(found==std::string::npos)&#32;{&#32;matName&#32;=&#32;LVMaterial-&gt;GetName()&#32;+&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;+&#32;LVName&#32;+&#32;std::to_string(i_step+1);&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;matName&#32;=&#32;matName.substr(0,&#32;found)&#32;+&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;+&#32;LVName&#32;+&#32;std::to_string(i_step+1);}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00272"/>00272 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00273"/>00273 &#32;&#32;&#32;&#32;G4Material*&#32;newMaterial&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4Material(matName,&#32;LVMaterial-&gt;GetDensity(),&#32;MassElement.size(),&#32;LVMaterial-&gt;GetState(),&#32;LVMaterial-&gt;GetTemperature());
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00274"/>00274 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;G4Material*&#32;newMaterial&#32;=&#32;LVMaterial-&gt;ResetMaterial(matName,&#32;LVMaterial-&gt;GetDensity(),&#32;MassElement.size(),&#32;LVMaterial-&gt;GetState(),&#32;LVMaterial-&gt;GetTemperature(),&#32;LVMaterial-&gt;GetPressure());</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00275"/>00275 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::map&lt;int,&#32;long&#32;double&gt;::iterator&#32;isotope1=MapNt.begin();&#32;isotope1!=MapNt.end();&#32;++isotope1)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Element*&#32;g4Elem&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZA&#32;=&#32;isotope1-&gt;first;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_t_m_x_element">TMXElement</link>&#32;*TMXElem&#32;=&#32;TMXElementStore::GetElement(IZA);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;mass&#32;=&#32;isotope1-&gt;second/CLHEP::Avogadro&#32;*&#32;TMXElem-&gt;Mweight();&#32;&#32;&#32;<emphasis role="comment">//&#32;G4NistManager::Instance()-&gt;GetAtomicMass(Z,N))*g/mole</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00280"/>00280 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(LVName&#32;==&#32;&quot;lfuelmat23&quot;)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00281"/>00281 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&quot;MASS&#32;&quot;&#32;&lt;&lt;&#32;IZA&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;mass&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Define&#32;name&#32;of&#32;element&#32;and&#32;isotope</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;g4IsotSymb&#32;=&#32;TMXElem-&gt;Sym()&#32;+&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;+&#32;std::to_string(TMXElem-&gt;A())+&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;+&#32;std::to_string(TMXElem-&gt;ISO());
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;g4ElemSymb&#32;=&#32;g4IsotSymb;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;g4ElemName&#32;=&#32;TMXElem-&gt;Name();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i=0;&#32;i&lt;elemVec-&gt;size();&#32;++i)&#32;{&#32;<emphasis role="comment">//&#32;In&#32;case&#32;of&#32;neutron&#32;thermal&#32;scattering</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(G4String)((*elemVec)[i]-&gt;GetName()).substr(0,3)&#32;==&#32;<emphasis role="stringliteral">&quot;TS_&quot;</emphasis>&#32;&amp;&amp;&#32;(*elemVec)[i]-&gt;GetZ()&#32;==&#32;TMXElem-&gt;Z()&#32;&amp;&amp;&#32;(*elemVec)[i]-&gt;GetN()&#32;==&#32;TMXElem-&gt;A())&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4ElemName&#32;=&#32;(*elemVec)[i]-&gt;GetName();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00292"/>00292 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Definition&#32;of&#32;1&#32;isotope&#32;per&#32;element.</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;element&#32;does&#32;not&#32;exists&#32;in&#32;the&#32;G4TableOfElement,&#32;it&#32;is&#32;created.&#32;Same&#32;for&#32;G4Isotope</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4Elem&#32;=&#32;G4Element::GetElement(g4ElemName,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00296"/>00296 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!g4Elem)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4Elem&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4Element(g4ElemName,&#32;g4ElemSymb,&#32;1);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Isotope*&#32;g4Isot&#32;=&#32;G4Isotope::GetIsotope(g4IsotSymb,<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00299"/>00299 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;g4ElemName&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;g4ElemSymb&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;g4IsotSymb&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!g4Isot)&#32;{&#32;g4Isot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4Isotope(g4IsotSymb,&#32;TMXElem-&gt;Z(),&#32;TMXElem-&gt;A(),&#32;TMXElem-&gt;Mweight()*g/mole,&#32;TMXElem-&gt;ISO());}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4Elem-&gt;AddIsotope(g4Isot,&#32;1.);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newMaterial-&gt;AddElement(g4Elem,&#32;(G4double)(mass/newMaterialMass));
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00304"/>00304 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(LVName&#32;==&#32;&quot;lfuelmat23&quot;)</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00305"/>00305 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;&quot;New&#32;/&#32;Old&#32;mass&#32;&quot;&lt;&lt;IZA&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;newMaterialMass&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;mass&#32;&lt;&lt;&#32;&quot;&#32;RATIO&#32;&quot;&#32;&lt;&lt;&#32;(G4double)(mass/newMaterialMass)&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00306"/>00306 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00307"/>00307 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newMaterial;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00308"/>00308 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00309"/>00309 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00310"/>00310 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::WriteResults(std::string&#32;str_ROOTFileName)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00311"/>00311 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Results&#32;file&#32;is&#32;used&#32;to&#32;record&#32;evolution&#32;of&#32;the&#32;material&#32;composition</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00312"/>00312 &#32;&#32;&#32;&#32;std::string&#32;ResultsFileName&#32;=&#32;str_ROOTFileName.substr(0,str_ROOTFileName.find(<emphasis role="stringliteral">&quot;.root&quot;</emphasis>))&#32;+&#32;<emphasis role="stringliteral">&quot;_Transmutation&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00313"/>00313 &#32;&#32;&#32;&#32;std::ofstream&#32;ResultsFile;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00314"/>00314 &#32;&#32;&#32;&#32;ResultsFile.open((ResultsFileName&#32;+&#32;(std::string)<emphasis role="stringliteral">&quot;.txt&quot;</emphasis>).c_str(),&#32;std::ios::out);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00315"/>00315 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00316"/>00316 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;transmutation&#32;results</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00317"/>00317 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::unordered_map&#32;&lt;<emphasis role="keywordtype">int</emphasis>,&#32;std::unordered_map&#32;&lt;std::string,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&gt;&gt;::iterator&#32;isotope=fMap_N0.begin();&#32;isotope!=fMap_N0.end();&#32;++isotope)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00318"/>00318 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(TMXElementStore::GetElement(isotope-&gt;first)-&gt;Tave()&#32;&lt;&#32;100&#32;*&#32;Decayt)&#32;{&#32;//&#32;Print&#32;only&#32;element&#32;with&#32;significant&#32;decay</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::unordered_map&#32;&lt;std::string,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&gt;::iterator&#32;LVname=fMap_N0[isotope-&gt;first].begin();&#32;LVname!=fMap_N0[isotope-&gt;first].end();&#32;++LVname)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00320"/>00320 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(LVname-&gt;first&#32;==&#32;&quot;lFuel2&quot;)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>&#32;&lt;&lt;&#32;isotope-&gt;first&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;LVname-&gt;first&#32;;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::map&#32;&lt;int,&#32;long&#32;double&gt;::iterator&#32;step=fMap_N0[isotope-&gt;first][LVname-&gt;first].begin();&#32;step!=fMap_N0[isotope-&gt;first][LVname-&gt;first].end();&#32;++step)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(step&#32;==&#32;fMap_N0[isotope-&gt;first][LVname-&gt;first].begin())&#32;{<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;step-&gt;first;&#32;++i)&#32;{ResultsFile&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>&#32;&lt;&lt;&#32;0;&#32;}}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\t&quot;</emphasis>&#32;&lt;&lt;&#32;fMap_N0[isotope-&gt;first][LVname-&gt;first][step-&gt;first];
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00325"/>00325 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00327"/>00327 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00328"/>00328 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00329"/>00329 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00330"/>00330 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00331"/>00331 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Close&#32;output&#32;file</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00332"/>00332 &#32;&#32;&#32;&#32;ResultsFile.close();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00333"/>00333 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00334"/>00334 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00335"/>00335 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::WriteResultsPerRun(std::string&#32;str_ROOTFileName,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_step)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00336"/>00336 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Results&#32;file&#32;is&#32;used&#32;to&#32;record&#32;evolution&#32;of&#32;the&#32;material&#32;composition</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00337"/>00337 &#32;&#32;&#32;&#32;std::string&#32;ResultsFileName&#32;=&#32;str_ROOTFileName.substr(0,str_ROOTFileName.find(<emphasis role="stringliteral">&quot;.root&quot;</emphasis>))&#32;+&#32;<emphasis role="stringliteral">&quot;_Transmutation&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00338"/>00338 &#32;&#32;&#32;&#32;std::ofstream&#32;ResultsFile;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00339"/>00339 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i_step==0)&#32;{&#32;ResultsFile.open((ResultsFileName&#32;+&#32;(std::string)<emphasis role="stringliteral">&quot;.txt&quot;</emphasis>).c_str(),&#32;std::ios::out);}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00340"/>00340 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;ResultsFile.open((ResultsFileName&#32;+&#32;(std::string)<emphasis role="stringliteral">&quot;.txt&quot;</emphasis>).c_str(),&#32;std::ios::app);}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00341"/>00341 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00342"/>00342 &#32;&#32;&#32;&#32;ResultsFile&lt;&lt;std::left&#32;&lt;&lt;&#32;std::setw(8)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Cycle&quot;</emphasis>&lt;&lt;std::setw(12)&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Element&quot;</emphasis>&lt;&lt;std::setw(15)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Volume&quot;</emphasis>&#32;&lt;&lt;&#32;std::setw(15)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;nAtoms&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00343"/>00343 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;transmutation&#32;results</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00344"/>00344 <emphasis role="comment">//&#32;&#32;&#32;&#32;if(i_step&#32;==&#32;0){</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00345"/>00345 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::unordered_map&#32;&lt;<emphasis role="keywordtype">int</emphasis>,&#32;std::unordered_map&#32;&lt;std::string,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&gt;&gt;::iterator&#32;isotope=fMap_N0.begin();&#32;isotope!=fMap_N0.end();&#32;++isotope)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00346"/>00346 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(TMXElementStore::GetElement(isotope-&gt;first)-&gt;Tave()&#32;&lt;&#32;100&#32;*&#32;Decayt)&#32;{&#32;//&#32;Print&#32;only&#32;element&#32;with&#32;significant&#32;decay</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00347"/>00347 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::unordered_map&#32;&lt;std::string,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&gt;::iterator&#32;LVname=fMap_N0[isotope-&gt;first].begin();&#32;LVname!=fMap_N0[isotope-&gt;first].end();&#32;++LVname)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00348"/>00348 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(LVname-&gt;first&#32;==&#32;&quot;lFuel2&quot;)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00349"/>00349 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&lt;&lt;&#32;std::left&#32;&lt;&lt;&#32;std::setw(8)&#32;&lt;&lt;&#32;std::to_string(&#32;i_step)&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;isotope-&gt;first&lt;&lt;&#32;std::setw(15)&#32;&lt;&lt;&#32;LVname-&gt;first&#32;;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00350"/>00350 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::map&#32;&lt;int,&#32;long&#32;double&gt;::iterator&#32;step=fMap_N0[isotope-&gt;first][LVname-&gt;first].begin();&#32;step!=fMap_N0[isotope-&gt;first][LVname-&gt;first].end();&#32;++step)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;std::left&#32;&lt;&lt;&#32;std::setw(15)&#32;&lt;&lt;&#32;fMap_N0[isotope-&gt;first][LVname-&gt;first][i_step];
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00352"/>00352 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00354"/>00354 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00356"/>00356 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00357"/>00357 &#32;&#32;&#32;&#32;}<emphasis role="comment">//}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00358"/>00358 <emphasis role="comment">/*&#32;&#32;&#32;&#32;else{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00359"/>00359 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::unordered_map&#32;&lt;std::string,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&gt;::iterator&#32;volume=fMap_Nt.begin();&#32;volume!=fMap_Nt.end();&#32;++volume)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00360"/>00360 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(TMXElementStore::GetElement(isotope-&gt;first)-&gt;Tave()&#32;&lt;&#32;100&#32;*&#32;Decayt)&#32;{&#32;//&#32;Print&#32;only&#32;element&#32;with&#32;significant&#32;decay</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00361"/>00361 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::map&#32;&lt;int,&#32;long&#32;double&gt;::iterator&#32;isotope=fMap_Nt[volume-&gt;first].begin();&#32;isotope!=fMap_Nt[volume-&gt;first].end();&#32;++isotope)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00362"/>00362 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(LVname-&gt;first&#32;==&#32;&quot;lFuel2&quot;)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00363"/>00363 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&lt;&lt;&#32;std::left&#32;&lt;&lt;&#32;std::setw(8)&#32;&lt;&lt;&#32;std::to_string(&#32;i_step)&#32;+&#32;&quot;*&quot;&#32;&lt;&lt;&#32;std::setw(12)&lt;&lt;&#32;isotope-&gt;first&#32;&lt;&lt;&#32;std::setw(15)&lt;&lt;&#32;volume-&gt;first&#32;;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00364"/>00364 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::map&#32;&lt;int,&#32;long&#32;double&gt;::iterator&#32;step=fMap_N0[isotope-&gt;first][LVname-&gt;first].begin();&#32;step!=fMap_N0[isotope-&gt;first][LVname-&gt;first].end();&#32;++step)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00365"/>00365 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;std::left&#32;&lt;&lt;&#32;std::setw(15)&#32;&lt;&lt;&#32;fMap_Nt[volume-&gt;first][isotope-&gt;first];</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00366"/>00366 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00367"/>00367 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;&quot;\n&quot;;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00368"/>00368 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00369"/>00369 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00370"/>00370 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00371"/>00371 <emphasis role="comment">&#32;&#32;&#32;&#32;}}*/</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00372"/>00372 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Close&#32;output&#32;file</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00373"/>00373 &#32;&#32;&#32;&#32;ResultsFile.close();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00374"/>00374 &#32;&#32;&#32;&#32;fMap_N0.clear();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00375"/>00375 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00376"/>00376 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00377"/>00377 <emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::WriteDecayedResultsPerRun(std::string&#32;str_ROOTFileName,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i_step)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00378"/>00378 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Results&#32;file&#32;is&#32;used&#32;to&#32;record&#32;evolution&#32;of&#32;the&#32;material&#32;composition</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00379"/>00379 &#32;&#32;&#32;&#32;std::string&#32;ResultsFileName&#32;=&#32;str_ROOTFileName.substr(0,str_ROOTFileName.find(<emphasis role="stringliteral">&quot;.root&quot;</emphasis>))&#32;+&#32;<emphasis role="stringliteral">&quot;_Decay&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00380"/>00380 &#32;&#32;&#32;&#32;std::ofstream&#32;ResultsFile;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00381"/>00381 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(i_step==0)&#32;{&#32;ResultsFile.open((ResultsFileName&#32;+&#32;(std::string)<emphasis role="stringliteral">&quot;.txt&quot;</emphasis>).c_str(),&#32;std::ios::out);}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00382"/>00382 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{&#32;ResultsFile.open((ResultsFileName&#32;+&#32;(std::string)<emphasis role="stringliteral">&quot;.txt&quot;</emphasis>).c_str(),&#32;std::ios::app);}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00383"/>00383 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00384"/>00384 &#32;&#32;&#32;&#32;ResultsFile&lt;&lt;std::left&#32;&lt;&lt;&#32;std::setw(8)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Cycle&quot;</emphasis>&lt;&lt;std::setw(12)&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Element&quot;</emphasis>&lt;&lt;std::setw(15)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Volume&quot;</emphasis>&#32;&lt;&lt;&#32;std::setw(15)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;N_Elem_Decay&quot;</emphasis>&lt;&lt;std::endl;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00385"/>00385 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Write&#32;transmutation&#32;results</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00386"/>00386 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::unordered_map&#32;&lt;std::string,&#32;std::map&#32;&lt;int,&#32;long&#32;double&gt;&gt;::iterator&#32;volume=fMap_Nt.begin();&#32;volume!=fMap_Nt.end();&#32;++volume)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00387"/>00387 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(TMXElementStore::GetElement(isotope-&gt;first)-&gt;Tave()&#32;&lt;&#32;100&#32;*&#32;Decayt)&#32;{&#32;//&#32;Print&#32;only&#32;element&#32;with&#32;significant&#32;decay</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00388"/>00388 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(std::map&#32;&lt;int,&#32;long&#32;double&gt;::iterator&#32;isotope=fMap_Nt[volume-&gt;first].begin();&#32;isotope!=fMap_Nt[volume-&gt;first].end();&#32;++isotope)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00389"/>00389 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(LVname-&gt;first&#32;==&#32;&quot;lFuel2&quot;)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00390"/>00390 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&lt;&lt;&#32;std::left&#32;&lt;&lt;&#32;std::setw(8)&#32;&lt;&lt;&#32;std::to_string(&#32;i_step)&#32;+&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>&#32;&lt;&lt;&#32;std::setw(12)&lt;&lt;&#32;isotope-&gt;first&#32;&lt;&lt;&#32;std::setw(15)&lt;&lt;&#32;volume-&gt;first&#32;;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00391"/>00391 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for&#32;(std::map&#32;&lt;int,&#32;long&#32;double&gt;::iterator&#32;step=fMap_N0[isotope-&gt;first][LVname-&gt;first].begin();&#32;step!=fMap_N0[isotope-&gt;first][LVname-&gt;first].end();&#32;++step)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00392"/>00392 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;std::left&#32;&lt;&lt;&#32;std::setw(15)&#32;&lt;&lt;&#32;fMap_Nt[volume-&gt;first][isotope-&gt;first];
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00393"/>00393 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ResultsFile&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00395"/>00395 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00397"/>00397 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00398"/>00398 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00399"/>00399 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Close&#32;output&#32;file</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00400"/>00400 &#32;&#32;&#32;&#32;ResultsFile.close();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00401"/>00401 &#32;&#32;&#32;&#32;fMap_N0.clear();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00402"/>00402 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00403"/>00403 <emphasis role="keywordtype">double</emphasis>&#32;TMXBurnup::round(<emphasis role="keywordtype">double</emphasis>&#32;value)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00404"/>00404 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;multiplier&#32;=&#32;std::pow(10.0,&#32;fDecimal_place);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00405"/>00405 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::round(value&#32;*&#32;multiplier)&#32;/&#32;multiplier;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00406"/>00406 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00407"/>00407 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00409"/>00409 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00410"/>00410 <emphasis role="comment">//&#32;This&#32;method&#32;fills&#32;a&#32;vector&#32;from&#32;EventAction&#32;with&#32;each&#32;element&#32;produced&#32;during&#32;the&#32;run</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00411"/>00411 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00413"/>00413 <emphasis role="comment"></emphasis><emphasis role="keywordtype">void</emphasis>&#32;TMXBurnup::FillvectorBurnupElement(<emphasis role="keyword">const</emphasis>&#32;G4Step*&#32;theStep,&#32;<link linkend="_class_event_action">EventAction</link>*&#32;eventAction,&#32;<emphasis role="keyword">const</emphasis>&#32;G4Track&#32;*secondary)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4String&#32;processName&#32;=&#32;theStep-&gt;GetPostStepPoint()-&gt;GetProcessDefinedStep()-&gt;GetProcessName();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00415"/>00415 &#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00416"/>00416 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;If&#32;the&#32;process&#32;generates&#32;a&#32;nucleus</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00417"/>00417 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(processName!=<emphasis role="stringliteral">&quot;hadElastic&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;processName!=<emphasis role="stringliteral">&quot;ParallelScoringWorld&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;processName!=<emphasis role="stringliteral">&quot;RadioactiveDecayBase&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;secondary-&gt;GetDefinition()-&gt;GetParticleType()&#32;!=&#32;<emphasis role="stringliteral">&quot;gamma&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;secondary-&gt;GetDefinition()-&gt;GetParticleType()&#32;!=&#32;<emphasis role="stringliteral">&quot;lepton&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;secondary-&gt;GetDefinition()-&gt;GetParticleType()&#32;!=&#32;<emphasis role="stringliteral">&quot;meson&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Count&#32;the&#32;number&#32;of&#32;nucleus&#32;among&#32;the&#32;secondaries</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Nb_nucleus&#32;=&#32;CountNucleiProducts(theStep-&gt;GetSecondaryInCurrentStep());
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00427"/>00427 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;&quot;Begin&#32;FillvectorBurnupElement&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4VProcess*&#32;process&#32;=&#32;<emphasis role="keyword">const_cast&lt;</emphasis>G4VProcess*<emphasis role="keyword">&gt;</emphasis>(theStep-&gt;GetPostStepPoint()-&gt;GetProcessDefinedStep());
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00430"/>00430 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4HadronicProcess*&#32;hproc&#32;=&#32;<emphasis role="keyword">dynamic_cast&lt;</emphasis>G4HadronicProcess*<emphasis role="keyword">&gt;</emphasis>(process);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4Isotope*&#32;target&#32;=&#32;NULL;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00432"/>00432 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(hproc)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00434"/>00434 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_struct_t_m_x_bateman_decay_1_1_transmuted_element">TMXBatemanDecay::TransmutedElement</link>&#32;transmutation;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00436"/>00436 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Mother&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;target&#32;=&#32;hproc-&gt;GetTargetIsotope();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transmutation.IZAmother&#32;=&#32;10000*target-&gt;GetZ()&#32;+&#32;10*target-&gt;GetN()&#32;+&#32;target-&gt;Getm();&#32;&#32;&#32;<emphasis role="comment">//&#32;IZA&#32;identifier&#32;of&#32;mother</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00440"/>00440 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Daughter&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;processName==<emphasis role="stringliteral">&quot;nCapture&quot;</emphasis>)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transmutation.IZAdaughter&#32;=&#32;10000*target-&gt;GetZ()&#32;+&#32;10*(target-&gt;GetN()+1)&#32;+&#32;target-&gt;Getm();&#32;&#32;&#32;<emphasis role="comment">//&#32;IZA&#32;identifier&#32;of&#32;mother&#32;&#32;&#32;//&#32;WARNING&#32;isomer&#32;state&#32;of&#32;the&#32;mother&#32;element</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00446"/>00446 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Ions*&#32;SecondIonsType&#32;=&#32;<emphasis role="keyword">dynamic_cast&lt;</emphasis>G4Ions*<emphasis role="keyword">&gt;</emphasis>&#32;(secondary-&gt;GetDefinition());
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4int&#32;Adaughter&#32;=&#32;SecondIonsType-&gt;GetAtomicMass();&#32;&#32;&#32;<emphasis role="comment">//&#32;Atomic&#32;mass&#32;&#32;&#32;of&#32;product&#32;&#32;&#32;&#32;&#32;//&#32;!!&#32;WARNING&#32;!!&#32;Atomic&#32;mass&#32;instead&#32;of&#32;number&#32;of&#32;nucleons</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4int&#32;Zdaughter&#32;=&#32;SecondIonsType-&gt;GetAtomicNumber();&#32;<emphasis role="comment">//&#32;Atomic&#32;number&#32;of&#32;product</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4int&#32;mdaughter&#32;=&#32;SecondIonsType-&gt;GetIsomerLevel();&#32;<emphasis role="comment">//&#32;Atomic&#32;number&#32;of&#32;product</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transmutation.IZAdaughter&#32;=&#32;10000*Zdaughter&#32;+&#32;10*Adaughter&#32;+&#32;mdaughter;&#32;<emphasis role="comment">//&#32;IZA&#32;identifier&#32;of&#32;daugther</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00452"/>00452 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;transmutation.IZAdaughter&#32;==&#32;transmutation.IZAmother&#32;<emphasis role="comment">//&#32;remove&#32;(n,n&apos;),&#32;(p,p&apos;)&#32;etc...</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;transmutation.IZAdaughter&#32;==&#32;10&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;remove&#32;additional&#32;counting&#32;of&#32;mother&#32;rn&#32;e.g.&#32;for&#32;(n,&#32;Xn)&#32;with&#32;X&gt;1</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;||&#32;(secondary-&gt;GetDefinition()-&gt;GetParticleName()&#32;==&#32;<emphasis role="stringliteral">&quot;proton&quot;</emphasis>&#32;&amp;&amp;&#32;processName&#32;==&#32;<emphasis role="stringliteral">&quot;protonInelastic&quot;</emphasis>))&#32;<emphasis role="comment">//&#32;remove&#32;additional&#32;counting&#32;of&#32;mother&#32;RN&#32;from&#32;proton&#32;inelastic&#32;e.g.&#32;(p,Xp),&#32;with&#32;X&gt;1</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{&#32;<emphasis role="comment">//We&#32;need&#32;to&#32;also&#32;remove&#32;additional&#32;counting&#32;of&#32;mother&#32;RN&#32;from&#32;e.g.&#32;(n,&#32;alpha),&#32;(n,t),&#32;(n,t+alpha)&#32;....etc&#32;as&#32;well&#32;as&#32;fission&#32;which&#32;provides&#32;2&#32;fission&#32;products</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00459"/>00459 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Logical&#32;volume&#32;name</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;transmutation.LogicVolumeName&#32;=&#32;theStep-&gt;GetPostStepPoint()-&gt;GetPhysicalVolume()-&gt;GetName();
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00462"/>00462 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;transmutation.IZAmother&lt;&lt;&#32;&quot;&#32;-&gt;&#32;&quot;&lt;&lt;&#32;transmutation.IZAdaughter&lt;&lt;&#32;&quot;&#32;in&#32;&quot;&#32;&lt;&lt;&#32;transmutation.LogicVolumeName&#32;&lt;&lt;&#32;&quot;&#32;from&#32;&quot;&#32;&lt;&lt;&#32;secondary-&gt;GetDefinition()-&gt;GetParticleName()&#32;&lt;&lt;&#32;&quot;&#32;via&#32;&quot;&#32;&lt;&lt;&#32;processName&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00463"/>00463 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(processName&#32;==&#32;<emphasis role="stringliteral">&quot;nFission&quot;</emphasis>&#32;||&#32;Nb_nucleus&#32;&gt;&#32;1&#32;<emphasis role="comment">/*&#32;||&#32;theTrack.GetParentID()&#32;==&#32;0*/</emphasis>)&#32;<emphasis role="comment">//&#32;If&#32;fission&#32;or&#32;source&#32;particle</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eventAction-&gt;AddSourceElement(transmutation);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00467"/>00467 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;Fission&#32;IZAm&#32;:&#32;&quot;&#32;&lt;&lt;&#32;transmutation.IZAmother&#32;&lt;&lt;&#32;&quot;&#32;IZAd&#32;:&#32;&quot;&#32;&lt;&lt;&#32;transmutation.IZAdaughter&#32;&lt;&lt;&#32;&quot;&#32;PV&#32;:&#32;&quot;&#32;&lt;&lt;&#32;thePostPVname&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="comment">//&#32;WARNING&#32;(n,&#32;alpha)&#32;reaction&#32;is&#32;considered&#32;and&#32;the&#32;mother&#32;element&#32;is&#32;destroyed&#32;twice</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;eventAction-&gt;AddTransmuteElement(transmutation);
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00472"/>00472 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;Tranmut&#32;IZAm&#32;:&#32;&quot;&#32;&lt;&lt;&#32;transmutation.IZAmother&#32;&lt;&lt;&#32;&quot;&#32;IZAd&#32;:&#32;&quot;&#32;&lt;&lt;&#32;transmutation.IZAdaughter&#32;&lt;&lt;&#32;&quot;&#32;PV&#32;:&#32;&quot;&#32;&lt;&lt;&#32;thePostPVname&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00475"/>00475 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00476"/>00476 &#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;&quot;End&#32;&#32;&#32;FillvectorBurnupElement&quot;&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00477"/>00477 }
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00478"/>00478 
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00479"/>00479 <emphasis role="keywordtype">int</emphasis>&#32;TMXBurnup::CountNucleiProducts(<emphasis role="keyword">const</emphasis>&#32;std::vector&lt;const&#32;G4Track*&gt;&#32;*secondaries)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00480"/>00480 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;Nb_nucleus&#32;=&#32;0;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00481"/>00481 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(G4int&#32;i=0;&#32;i&lt;(int)secondaries-&gt;size();&#32;++i)&#32;{
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00482"/>00482 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((*secondaries)[i]-&gt;GetDefinition()-&gt;GetParticleType()==<emphasis role="stringliteral">&quot;nucleus&quot;</emphasis>)
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;++Nb_nucleus;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00484"/>00484 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00485"/>00485 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;Nb_nucleus;
<anchor xml:id="__benchmark-4_2src_2_t_m_x_burnup_8cc_source_1l00486"/>00486 }
</programlisting></section>
