<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_t_m_x_target_e_a" xml:lang="en-US">
<title>TMXTargetEA Class Reference</title>
<indexterm><primary>TMXTargetEA</primary></indexterm>
<para>Inheritance diagram for TMXTargetEA:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_t_m_x_target_e_a.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_t_m_x_target_e_a_1aa45cd7d73ca42da2cbc3e2d109a8f2a5">TMXTargetEA</link> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_target_e_a_1a871d1ee3bf7c2b90f85273dc88d2730a">getCoatingLogicalVolumes</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_target_e_a_1a1b53aaf09f25a87409bf0cb5de608ac6">getCoatingMaterial</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_target_e_a_1af1b95c3a737d7b061c4ce931d89bfa07">getReflectorMaterial</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad">createMaterial</link> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62">createGeometry</link> ()</para>
</listitem>
            <listitem><para>G4ThreeVector <link linkend="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373">placeGeometry</link> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f">placeSlabs</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6">placeCoolant</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f">placeTube</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b">VisualisationConfig</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1aa45cd7d73ca42da2cbc3e2d109a8f2a5"/><emphasis role="strong">TMXTargetEA</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a871d1ee3bf7c2b90f85273dc88d2730a"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoatingLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a1b53aaf09f25a87409bf0cb5de608ac6"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoatingMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1af1b95c3a737d7b061c4ce931d89bfa07"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getReflectorMaterial</emphasis> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad">createMaterial</link> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62">createGeometry</link> ()</para>
</listitem>
            <listitem><para>G4ThreeVector <link linkend="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373">placeGeometry</link> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f">placeSlabs</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6">placeCoolant</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f">placeTube</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b">VisualisationConfig</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1aa45cd7d73ca42da2cbc3e2d109a8f2a5"/><emphasis role="strong">TMXTargetEA</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a871d1ee3bf7c2b90f85273dc88d2730a"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoatingLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a1b53aaf09f25a87409bf0cb5de608ac6"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoatingMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1af1b95c3a737d7b061c4ce931d89bfa07"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getReflectorMaterial</emphasis> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad">createMaterial</link> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62">createGeometry</link> ()</para>
</listitem>
            <listitem><para>G4ThreeVector <link linkend="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373">placeGeometry</link> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f">placeSlabs</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6">placeCoolant</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f">placeTube</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b">VisualisationConfig</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1aa45cd7d73ca42da2cbc3e2d109a8f2a5"/><emphasis role="strong">TMXTargetEA</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a871d1ee3bf7c2b90f85273dc88d2730a"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoatingLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a1b53aaf09f25a87409bf0cb5de608ac6"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoatingMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1af1b95c3a737d7b061c4ce931d89bfa07"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getReflectorMaterial</emphasis> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad">createMaterial</link> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62">createGeometry</link> ()</para>
</listitem>
            <listitem><para>G4ThreeVector <link linkend="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373">placeGeometry</link> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f">placeSlabs</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6">placeCoolant</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f">placeTube</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b">VisualisationConfig</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1aa45cd7d73ca42da2cbc3e2d109a8f2a5"/><emphasis role="strong">TMXTargetEA</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a871d1ee3bf7c2b90f85273dc88d2730a"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getCoatingLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1a1b53aaf09f25a87409bf0cb5de608ac6"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getCoatingMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_target_e_a_1af1b95c3a737d7b061c4ce931d89bfa07"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getReflectorMaterial</emphasis> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad">createMaterial</link> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62">createGeometry</link> ()</para>
</listitem>
            <listitem><para>G4ThreeVector <link linkend="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373">placeGeometry</link> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f">placeSlabs</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6">placeCoolant</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f">placeTube</link> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b">VisualisationConfig</link> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>G4double <link linkend="_class_t_m_x_target_e_a_1ab6ecf5d190577e1587c98d1ea4dc2166">m_coatingThickness</link></para>
</listitem>
            <listitem><para>G4double <link linkend="_class_t_m_x_target_e_a_1a78e4eb6d9688f0a889f48a280a89e536">m_targetPipeLength</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4VSolid * &gt; <link linkend="_class_t_m_x_target_e_a_1a28536215867f2ddc6837d33b4c9f0c0b">m_coatingSolidVolumes</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_target_e_a_1a6c91bab7ca75b7bb6f68a4568929f0c3">m_coatingLogicalVolumes</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_target_e_a_1a3438d31db074b80de8ed322a967c9e7f">m_CoatingMaterial</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_target_e_a_1ae2f75e0127f88e69048c6089cc341d93">m_ReflectorMaterial</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Additional Inherited Members    </title>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source_1l00044">44</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source">TMXTargetEA.hh</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_t_m_x_target_e_a_1aa45cd7d73ca42da2cbc3e2d109a8f2a5"/><section>
    <title>TMXTargetEA()</title>
<indexterm><primary>TMXTargetEA</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>TMXTargetEA</secondary></indexterm>
<para><computeroutput>TMXTargetEA::TMXTargetEA (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * parameters, const std::string &amp; TargetAssemblyName)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00038">38</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a0ca8d38e4acf4766a27365f17230718b"/><section>
    <title>~TMXTargetEA()</title>
<indexterm><primary>~TMXTargetEA</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>~TMXTargetEA</secondary></indexterm>
<para><computeroutput>TMXTargetEA::~TMXTargetEA ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00045">45</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62"/><section>
    <title>createGeometry()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>createGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createGeometry</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createGeometry ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
<para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00093">93</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62"/><section>
    <title>createGeometry()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>createGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createGeometry</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createGeometry ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62"/><section>
    <title>createGeometry()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>createGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createGeometry</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createGeometry ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62"/><section>
    <title>createGeometry()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>createGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createGeometry</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createGeometry ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a66012f6c94fb68ca93febcea37618c62"/><section>
    <title>createGeometry()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>createGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createGeometry</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createGeometry ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad"/><section>
    <title>createMaterial()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>createMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createMaterial</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createMaterial (double Kelvin_temperature = <computeroutput>273.15</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
<para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00047">47</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad"/><section>
    <title>createMaterial()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>createMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createMaterial</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createMaterial (double Kelvin_temperature = <computeroutput>273.15</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad"/><section>
    <title>createMaterial()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>createMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createMaterial</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createMaterial (double Kelvin_temperature = <computeroutput>273.15</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad"/><section>
    <title>createMaterial()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>createMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createMaterial</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createMaterial (double Kelvin_temperature = <computeroutput>273.15</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a19bd1f7474fc2c60d2f9e3edd75a87ad"/><section>
    <title>createMaterial()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>createMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>createMaterial</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::createMaterial (double Kelvin_temperature = <computeroutput>273.15</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a871d1ee3bf7c2b90f85273dc88d2730a"/><section>
    <title>getCoatingLogicalVolumes()</title>
<indexterm><primary>getCoatingLogicalVolumes</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>getCoatingLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXTargetEA::getCoatingLogicalVolumes ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00318">318</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a1b53aaf09f25a87409bf0cb5de608ac6"/><section>
    <title>getCoatingMaterial()</title>
<indexterm><primary>getCoatingMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>getCoatingMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXTargetEA::getCoatingMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00330">330</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1af1b95c3a737d7b061c4ce931d89bfa07"/><section>
    <title>getReflectorMaterial()</title>
<indexterm><primary>getReflectorMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>getReflectorMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXTargetEA::getReflectorMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00334">334</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6"/><section>
    <title>placeCoolant()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>placeCoolant</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeCoolant</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeCoolant (bool overlap, G4ThreeVector * centerTarget, G4RotationMatrix * RotationFromXaxis, G4LogicalVolume * masterVolume)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
<para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00222">222</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6"/><section>
    <title>placeCoolant()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>placeCoolant</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeCoolant</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeCoolant (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6"/><section>
    <title>placeCoolant()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>placeCoolant</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeCoolant</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeCoolant (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6"/><section>
    <title>placeCoolant()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>placeCoolant</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeCoolant</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeCoolant (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ad27cd9dac843944e11297408a0501ac6"/><section>
    <title>placeCoolant()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>placeCoolant</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeCoolant</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeCoolant (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373"/><section>
    <title>placeGeometry()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>placeGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeGeometry</secondary></indexterm>
<para><computeroutput>G4ThreeVector TMXTargetEA::placeGeometry (bool overlap, G4ThreeVector * centerTarget, G4ThreeVector * beamDirection, G4LogicalVolume * masterVolume)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
<para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00190">190</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373"/><section>
    <title>placeGeometry()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>placeGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeGeometry</secondary></indexterm>
<para><computeroutput>G4ThreeVector TMXTargetEA::placeGeometry (bool , G4ThreeVector * , G4ThreeVector * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373"/><section>
    <title>placeGeometry()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>placeGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeGeometry</secondary></indexterm>
<para><computeroutput>G4ThreeVector TMXTargetEA::placeGeometry (bool , G4ThreeVector * , G4ThreeVector * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373"/><section>
    <title>placeGeometry()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>placeGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeGeometry</secondary></indexterm>
<para><computeroutput>G4ThreeVector TMXTargetEA::placeGeometry (bool , G4ThreeVector * , G4ThreeVector * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a0ef1c86c24ef521b67f2299f55e5f373"/><section>
    <title>placeGeometry()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>placeGeometry</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeGeometry</secondary></indexterm>
<para><computeroutput>G4ThreeVector TMXTargetEA::placeGeometry (bool , G4ThreeVector * , G4ThreeVector * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f"/><section>
    <title>placeSlabs()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>placeSlabs</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeSlabs</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeSlabs (bool overlap, G4ThreeVector * centerTarget, G4RotationMatrix * RotationFromXaxis, G4LogicalVolume * masterVolume)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
<para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00205">205</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f"/><section>
    <title>placeSlabs()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>placeSlabs</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeSlabs</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeSlabs (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f"/><section>
    <title>placeSlabs()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>placeSlabs</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeSlabs</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeSlabs (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f"/><section>
    <title>placeSlabs()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>placeSlabs</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeSlabs</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeSlabs (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1aa4e6f86716455d170ffd2be4c007246f"/><section>
    <title>placeSlabs()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>placeSlabs</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeSlabs</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeSlabs (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f"/><section>
    <title>placeTube()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>placeTube</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeTube</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeTube (bool overlap, G4ThreeVector * centerTarget, G4RotationMatrix * RotationFromXaxis, G4LogicalVolume * masterVolume)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
<para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00237">237</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f"/><section>
    <title>placeTube()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>placeTube</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeTube</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeTube (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f"/><section>
    <title>placeTube()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>placeTube</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeTube</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeTube (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f"/><section>
    <title>placeTube()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>placeTube</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeTube</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeTube (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ab5001a1219ca8e9465fc1c6479044d9f"/><section>
    <title>placeTube()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>placeTube</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>placeTube</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::placeTube (bool , G4ThreeVector * , G4RotationMatrix * , G4LogicalVolume * )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Implements <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b"/><section>
    <title>VisualisationConfig()<computeroutput>[1/5]</computeroutput></title>
<indexterm><primary>VisualisationConfig</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>VisualisationConfig</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::VisualisationConfig ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
<para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source_1l00270">270</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8cc_source">TMXTargetEA.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b"/><section>
    <title>VisualisationConfig()<computeroutput>[2/5]</computeroutput></title>
<indexterm><primary>VisualisationConfig</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>VisualisationConfig</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::VisualisationConfig ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b"/><section>
    <title>VisualisationConfig()<computeroutput>[3/5]</computeroutput></title>
<indexterm><primary>VisualisationConfig</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>VisualisationConfig</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::VisualisationConfig ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b"/><section>
    <title>VisualisationConfig()<computeroutput>[4/5]</computeroutput></title>
<indexterm><primary>VisualisationConfig</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>VisualisationConfig</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::VisualisationConfig ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ac2499ca188740690e39a087c1253d91b"/><section>
    <title>VisualisationConfig()<computeroutput>[5/5]</computeroutput></title>
<indexterm><primary>VisualisationConfig</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>VisualisationConfig</secondary></indexterm>
<para><computeroutput>void TMXTargetEA::VisualisationConfig ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Reimplemented from <link linkend="_class_t_m_x_abstract_target_assembly">TMXAbstractTargetAssembly</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_t_m_x_target_e_a_1a6c91bab7ca75b7bb6f68a4568929f0c3"/><section>
    <title>m_coatingLogicalVolumes</title>
<indexterm><primary>m_coatingLogicalVolumes</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>m_coatingLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXTargetEA::m_coatingLogicalVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source_1l00086">86</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source">TMXTargetEA.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a3438d31db074b80de8ed322a967c9e7f"/><section>
    <title>m_CoatingMaterial</title>
<indexterm><primary>m_CoatingMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>m_CoatingMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXTargetEA::m_CoatingMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source_1l00093">93</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source">TMXTargetEA.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a28536215867f2ddc6837d33b4c9f0c0b"/><section>
    <title>m_coatingSolidVolumes</title>
<indexterm><primary>m_coatingSolidVolumes</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>m_coatingSolidVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4VSolid * &gt; TMXTargetEA::m_coatingSolidVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source_1l00080">80</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source">TMXTargetEA.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ab6ecf5d190577e1587c98d1ea4dc2166"/><section>
    <title>m_coatingThickness</title>
<indexterm><primary>m_coatingThickness</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>m_coatingThickness</secondary></indexterm>
<para><computeroutput>G4double TMXTargetEA::m_coatingThickness<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source_1l00076">76</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source">TMXTargetEA.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1ae2f75e0127f88e69048c6089cc341d93"/><section>
    <title>m_ReflectorMaterial</title>
<indexterm><primary>m_ReflectorMaterial</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>m_ReflectorMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXTargetEA::m_ReflectorMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source_1l00094">94</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source">TMXTargetEA.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_target_e_a_1a78e4eb6d9688f0a889f48a280a89e536"/><section>
    <title>m_targetPipeLength</title>
<indexterm><primary>m_targetPipeLength</primary><secondary>TMXTargetEA</secondary></indexterm>
<indexterm><primary>TMXTargetEA</primary><secondary>m_targetPipeLength</secondary></indexterm>
<para><computeroutput>G4double TMXTargetEA::m_targetPipeLength<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source_1l00077">77</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_neutron_emmiter_2_t_m_x_target_e_a_8hh_source">TMXTargetEA.hh</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/include/NSource/NeutronEmmiter/TMXTargetEA.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/include/NSource/NeutronEmmiter/TMXTargetEA.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/include/NSource/NeutronEmmiter/TMXTargetEA.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/include/NSource/NeutronEmmiter/TMXTargetEA.hh/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/include/NSource/NeutronEmmiter/TMXTargetEA.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/src/NSource/NeutronEmmiter/TMXTargetEA.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/NSource/NeutronEmmiter/TMXTargetEA.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/NSource/NeutronEmmiter/TMXTargetEA.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/src/NSource/NeutronEmmiter/TMXTargetEA.cc/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/NSource/NeutronEmmiter/TMXTargetEA.cc</section>
</section>
