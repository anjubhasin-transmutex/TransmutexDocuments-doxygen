<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__read2_d_map_8_c_source" xml:lang="en-US">
<title>Read2DMap.C</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/tools/Read2DMap.C</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__read2_d_map_8_c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__read2_d_map_8_c_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;sstream&gt;</emphasis>
<anchor xml:id="__read2_d_map_8_c_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__read2_d_map_8_c_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&lt;stdio.h&gt;</emphasis>
<anchor xml:id="__read2_d_map_8_c_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__read2_d_map_8_c_source_1l00006"/>00006 
<anchor xml:id="__read2_d_map_8_c_source_1l00007"/>00007 <emphasis role="keywordtype">int</emphasis>&#32;Read2DMap(std::string&#32;filename)&#32;{
<anchor xml:id="__read2_d_map_8_c_source_1l00008"/>00008 &#32;&#32;&#32;&#32;std::string&#32;line;
<anchor xml:id="__read2_d_map_8_c_source_1l00009"/>00009 &#32;&#32;&#32;&#32;std::ifstream&#32;infile(filename);
<anchor xml:id="__read2_d_map_8_c_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bin1,&#32;min1,&#32;max1,&#32;bin2,&#32;min2,&#32;max2;
<anchor xml:id="__read2_d_map_8_c_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;x,&#32;y,&#32;value;
<anchor xml:id="__read2_d_map_8_c_source_1l00012"/>00012 
<anchor xml:id="__read2_d_map_8_c_source_1l00013"/>00013 &#32;&#32;&#32;&#32;TCanvas*&#32;canvas&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;TCanvas(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__read2_d_map_8_c_source_1l00014"/>00014 &#32;&#32;&#32;&#32;TH2D*&#32;Map&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;TH2D(<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>,&#32;84,&#32;0,&#32;105,&#32;500,&#32;-630,&#32;370);
<anchor xml:id="__read2_d_map_8_c_source_1l00015"/>00015 
<anchor xml:id="__read2_d_map_8_c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(std::getline(infile,&#32;line))&#32;{
<anchor xml:id="__read2_d_map_8_c_source_1l00017"/>00017 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;istringstream&#32;buffer(line);
<anchor xml:id="__read2_d_map_8_c_source_1l00018"/>00018 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;buffer&#32;&gt;&gt;&#32;x&#32;&gt;&gt;&#32;y&#32;&gt;&gt;&#32;value;
<anchor xml:id="__read2_d_map_8_c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Map-&gt;Fill(x,&#32;y,&#32;value);
<anchor xml:id="__read2_d_map_8_c_source_1l00020"/>00020 &#32;&#32;&#32;&#32;}
<anchor xml:id="__read2_d_map_8_c_source_1l00021"/>00021 
<anchor xml:id="__read2_d_map_8_c_source_1l00022"/>00022 &#32;&#32;&#32;&#32;Map-&gt;Draw(<emphasis role="stringliteral">&quot;colz&quot;</emphasis>);
<anchor xml:id="__read2_d_map_8_c_source_1l00023"/>00023 
<anchor xml:id="__read2_d_map_8_c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__read2_d_map_8_c_source_1l00025"/>00025 }
</programlisting></section>
