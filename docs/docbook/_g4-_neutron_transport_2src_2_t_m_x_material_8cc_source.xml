<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source" xml:lang="en-US">
<title>TMXMaterial.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/TMXMaterial.cc</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00001"/>00001 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00005"/>00005 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00006"/>00006 <emphasis role="comment">//&#32;TMXMaterial</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00007"/>00007 <emphasis role="comment">//</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00008"/>00008 <emphasis role="comment">//&#32;Donovan&#32;Maire,&#32;Transmutex,&#32;18/09/2020</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;Copyright&#32;2020&#32;Transmutex&#32;SA&#32;--&#32;all&#32;rights&#32;reserved</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00011"/>00011 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00012"/>00012 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00013"/>00013 <emphasis role="comment">//&#32;Transmutex&#32;class</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00014"/>00014 <emphasis role="preprocessor">#include&#32;&quot;TMXMaterial.hh&quot;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;TMXElements.hh&quot;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00016"/>00016 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00017"/>00017 <emphasis role="comment">//&#32;GEANT4&#32;class</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;G4SystemOfUnits.hh&quot;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;G4LogicalVolumeStore.hh&quot;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00020"/>00020 <emphasis role="preprocessor">#include&#32;&quot;G4VSolid.hh&quot;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00021"/>00021 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00022"/>00022 <link linkend="_class_t_m_x_material_1ae54e25fa3e266249eadbc47316d69528">TMXMaterial::TMXMaterial</link>(<emphasis role="keyword">const</emphasis>&#32;G4String&#32;&amp;name,&#32;G4double&#32;density,&#32;G4int&#32;nComponents,&#32;G4State&#32;state,&#32;G4double&#32;temp,&#32;G4double&#32;pressure)&#32;:
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00023"/>00023 &#32;&#32;G4Material(name,&#32;density,&#32;nComponents,&#32;state,&#32;temp,&#32;pressure)
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00024"/>00024 {}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00025"/>00025 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00026"/>00026 <link linkend="_class_t_m_x_material_1ae54e25fa3e266249eadbc47316d69528">TMXMaterial::TMXMaterial</link>(<emphasis role="keyword">const</emphasis>&#32;G4String&#32;&amp;name,&#32;G4double&#32;density,&#32;<emphasis role="keyword">const</emphasis>&#32;G4Material&#32;*baseMaterial,&#32;G4State&#32;state,&#32;G4double&#32;temp,&#32;G4double&#32;pressure)&#32;:
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00027"/>00027 &#32;&#32;G4Material(name,&#32;density,&#32;baseMaterial,&#32;state,&#32;temp,&#32;pressure)
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00028"/>00028 {}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00029"/>00029 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00030"/>00030 TMXMaterial::~TMXMaterial()
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00031"/>00031 {}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00032"/>00032 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00034"/>00034 <emphasis role="comment">//&#32;Checking&#32;existence&#32;of&#32;the&#32;material&#32;via&#32;its&#32;name</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00035"/>00035 <emphasis role="keywordtype">bool</emphasis>&#32;TMXMaterial::Exist(G4String&#32;name)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00036"/>00036 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;found&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00037"/>00037 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Store&#32;in&#32;the&#32;static&#32;Table&#32;of&#32;Materials</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00039"/>00039 &#32;&#32;&#32;&#32;G4MaterialTable*&#32;MaterialTable&#32;=&#32;G4Material::GetMaterialTable();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;tableSize&#32;=&#32;MaterialTable-&gt;size();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i=0;&#32;i&lt;tableSize;&#32;++i)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((*MaterialTable)[i]-&gt;GetName()&#32;==&#32;name)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;found&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00044"/>00044 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">break</emphasis>;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00046"/>00046 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;found;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00048"/>00048 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00049"/>00049 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00051"/>00051 <emphasis role="comment">//&#32;Looking&#32;for&#32;the&#32;material&#32;via&#32;its&#32;name</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00052"/>00052 <link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;TMXMaterial::Find(G4String&#32;name)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Store&#32;in&#32;the&#32;static&#32;Table&#32;of&#32;Materials</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00054"/>00054 &#32;&#32;&#32;&#32;G4MaterialTable*&#32;MaterialTable&#32;=&#32;G4Material::GetMaterialTable();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;tableSize&#32;=&#32;MaterialTable-&gt;size();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i=0;&#32;i&lt;tableSize;&#32;++i)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((*MaterialTable)[i]-&gt;GetName()&#32;==&#32;name)
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(<link linkend="_class_t_m_x_material">TMXMaterial</link>*)(*MaterialTable)[i];
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00059"/>00059 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00061"/>00061 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00062"/>00062 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00064"/>00064 <emphasis role="comment">//&#32;AddElement&#32;to&#32;material</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00065"/>00065 <emphasis role="keywordtype">void</emphasis>&#32;TMXMaterial::AddElement(<emphasis role="keywordtype">int</emphasis>&#32;IZA,&#32;G4int&#32;nAtoms,&#32;std::string&#32;name)&#32;{&#32;<emphasis role="comment">//&#32;AddElement&#32;--&#32;composition&#32;by&#32;atom&#32;count</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00066"/>00066 &#32;&#32;&#32;&#32;G4Material::AddElement(DefineElement(IZA,&#32;name),&#32;nAtoms);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00067"/>00067 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00068"/>00068 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00069"/>00069 <emphasis role="keywordtype">void</emphasis>&#32;TMXMaterial::AddElement(<emphasis role="keywordtype">int</emphasis>&#32;IZA,&#32;G4double&#32;fraction,&#32;std::string&#32;name)&#32;{&#32;<emphasis role="comment">//&#32;AddElement&#32;--&#32;composition&#32;by&#32;fraction&#32;of&#32;mass</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00070"/>00070 &#32;&#32;&#32;&#32;G4Material::AddElement(DefineElement(IZA,&#32;name),&#32;fraction);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00071"/>00071 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00072"/>00072 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00074"/>00074 <emphasis role="comment">//&#32;Defining&#32;elements&#32;as&#32;1&#32;element&#32;=&#32;1&#32;isotope</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00075"/>00075 G4Element*&#32;TMXMaterial::DefineElement(<emphasis role="keywordtype">int</emphasis>&#32;IZA,&#32;std::string&#32;name)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00076"/>00076 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;!&#32;TMXElementStore::Store().size()&#32;)&#32;{TMXElementStore::BuildElementDB();}&#32;<emphasis role="comment">//&#32;Build&#32;the&#32;database</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00078"/>00078 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<link linkend="_class_t_m_x_element">TMXElement</link>*&#32;TMXElem&#32;=&#32;TMXElementStore::GetElement(IZA);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00080"/>00080 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(TMXElem)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;g4IsotSymb&#32;=&#32;TMXElem-&gt;Sym()&#32;+&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;+&#32;std::to_string(TMXElem-&gt;A())+&#32;<emphasis role="stringliteral">&quot;-&quot;</emphasis>&#32;+&#32;std::to_string(TMXElem-&gt;ISO());
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;g4ElemSymb&#32;=&#32;g4IsotSymb;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;g4ElemName&#32;=&#32;TMXElem-&gt;Name();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;name&#32;!=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>&#32;)&#32;{&#32;g4ElemName&#32;=&#32;name;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00086"/>00086 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Element*&#32;g4Elem&#32;=&#32;G4Element::GetElement(g4ElemName,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Isotope*&#32;g4Isot&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;!&#32;g4Elem&#32;&amp;&amp;&#32;TMXElem-&gt;Z()&#32;&lt;&#32;101&#32;)&#32;{&#32;&#32;<emphasis role="comment">//&#32;if&#32;nullptr</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4Elem&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4Element(g4ElemName,&#32;g4ElemSymb,&#32;1);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4Isot&#32;=&#32;G4Isotope::GetIsotope&#32;(g4IsotSymb,&#32;<emphasis role="keyword">false</emphasis>);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;!&#32;g4Isot)&#32;&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00093"/>00093 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;nous&#32;&quot;&#32;&lt;&lt;&#32;(TMXElem-&gt;Mweight()*g/mole)&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00094"/>00094 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;&quot;eux&#32;&quot;&#32;&lt;&lt;&#32;((G4NistManager::Instance()-&gt;GetAtomicMass(TMXElem-&gt;Z(),TMXElem-&gt;A()))*g/(mole*amu_c2))&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00095"/>00095 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4Isot&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4Isotope(g4IsotSymb,&#32;TMXElem-&gt;Z(),&#32;TMXElem-&gt;A(),&#32;TMXElem-&gt;Mweight()*(g/mole),&#32;TMXElem-&gt;ISO());}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;g4Elem-&gt;AddIsotope(g4Isot,&#32;1.);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00099"/>00099 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;g4Elem;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00102"/>00102 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00103"/>00103 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00104"/>00104 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00105"/>00105 <emphasis role="keywordtype">void</emphasis>&#32;TMXMaterial::PrintMaterialVolumesMasses()&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4MaterialTable*&#32;matTable&#32;=&#32;G4Material::GetMaterialTable();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00107"/>00107 &#32;&#32;&#32;&#32;G4LogicalVolumeStore*&#32;LVStore&#32;=&#32;G4LogicalVolumeStore::GetInstance();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00108"/>00108 &#32;&#32;&#32;&#32;<emphasis role="comment">//G4PhysicalVolumeStore*&#32;PVStore&#32;=&#32;G4PhysicalVolumeStore::GetInstance();</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00109"/>00109 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i_mat&#32;=&#32;0;&#32;i_mat&#32;&lt;&#32;matTable-&gt;size();&#32;++i_mat)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;CubicVolume&#32;=&#32;0;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;Mass&#32;=&#32;0;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((*matTable)[i_mat])&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;LVStore-&gt;size();&#32;++i)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((*LVStore)[i]&#32;&amp;&amp;&#32;(*LVStore)[i]-&gt;GetMaterial()&#32;&amp;&amp;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetName()&#32;==&#32;(*matTable)[i_mat]-&gt;GetName())&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CubicVolume&#32;+=&#32;(*LVStore)[i]-&gt;GetSolid()-&gt;GetCubicVolume()/cm3;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;(int)(*LVStore)[i]-&gt;GetNoDaughters();&#32;++j)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CubicVolume&#32;-=&#32;(*LVStore)[i]-&gt;GetDaughter(j)-&gt;GetLogicalVolume()-&gt;GetSolid()-&gt;GetCubicVolume()/cm3;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00119"/>00119 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mass&#32;+=&#32;(*LVStore)[i]-&gt;GetMass(<emphasis role="keyword">true</emphasis>,<emphasis role="keyword">false</emphasis>)/g;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;Mass&#32;!=&#32;0&#32;)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;material&#32;name:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;(*matTable)[i_mat]-&gt;GetName()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;volume:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;CubicVolume*1E-6&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;m3;&#32;mass:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;Mass/1000.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;kg&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00126"/>00126 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00127"/>00127 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00128"/>00128 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00129"/>00129 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00130"/>00130 <emphasis role="keywordtype">void</emphasis>&#32;TMXMaterial::PrintTotalMaterialVolumesMasses()&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00131"/>00131 &#32;&#32;&#32;&#32;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00132"/>00132 &#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;std::pair&lt;double,double&gt;&gt;&#32;fmap_VolumeMass;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00133"/>00133 &#32;&#32;&#32;&#32;RecursiveVolumeMassCalculation(fmap_VolumeMass,&#32;(*G4PhysicalVolumeStore::GetInstance())[0]);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00134"/>00134 &#32;&#32;&#32;&#32;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;material&#32;:&#32;fmap_VolumeMass&#32;)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;material&#32;name:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;material.first&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;volume:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;material.second.first*1E-6&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;m3;&#32;mass:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;material.second.second/1000.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;kg&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00137"/>00137 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00138"/>00138 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00139"/>00139 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00140"/>00140 <emphasis role="keywordtype">void</emphasis>&#32;TMXMaterial::RecursiveVolumeMassCalculation(std::unordered_map&lt;std::string,&#32;std::pair&lt;double,double&gt;&gt;&amp;&#32;fmap_VolumeMass,&#32;G4VPhysicalVolume*&#32;PV,&#32;<emphasis role="keywordtype">int</emphasis>&#32;replicate_number)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00141"/>00141 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(PV)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;physical&#32;volume&#32;is&#32;not&#32;null</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00142"/>00142 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4LogicalVolume*&#32;LV&#32;=&#32;PV-&gt;GetLogicalVolume();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00143"/>00143 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;PV_replicate_number&#32;=&#32;replicate_number&#32;*&#32;PV-&gt;GetMultiplicity();&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;number&#32;of&#32;replicates</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00144"/>00144 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(LV)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;logical&#32;volume&#32;is&#32;not&#32;null</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;PV_volume&#32;=&#32;replicate_number&#32;*&#32;LV-&gt;GetSolid()-&gt;GetCubicVolume()/cm3;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;real&#32;volume&#32;of&#32;daugthers</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;PV_mass&#32;&#32;&#32;=&#32;replicate_number&#32;*&#32;LV-&gt;GetMass(<emphasis role="keyword">true</emphasis>,<emphasis role="keyword">false</emphasis>)/g;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;real&#32;mass&#32;&#32;&#32;of&#32;daugthers</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00148"/>00148 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00150"/>00150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sum&#32;of&#32;volume&#32;in&#32;dedicated&#32;maps</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00152"/>00152 <emphasis role="comment"></emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Map&#32;of&#32;materials</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00154"/>00154 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(LV-&gt;GetMaterial())&#32;{&#32;<emphasis role="comment">//&#32;If&#32;material&#32;is&#32;not&#32;null</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00155"/>00155 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmap_VolumeMass[LV-&gt;GetMaterial()-&gt;GetName()].first&#32;+=&#32;PV_volume;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmap_VolumeMass[LV-&gt;GetMaterial()-&gt;GetName()].second&#32;+=&#32;PV_mass;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}&#32;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00158"/>00158 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;LV-&gt;GetNoDaughters();&#32;++i)&#32;{&#32;<emphasis role="comment">//&#32;For&#32;each&#32;Physical&#32;volume&#32;daugther&#32;of&#32;the&#32;Logical&#32;volume</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00160"/>00160 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4VPhysicalVolume*&#32;Daughter_PV&#32;=&#32;LV-&gt;GetDaughter(i);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00161"/>00161 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;daughter_replicate_number&#32;=&#32;PV_replicate_number&#32;*&#32;Daughter_PV-&gt;GetMultiplicity();&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;number&#32;of&#32;replicates</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00162"/>00162 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;daugther_volume&#32;=&#32;daughter_replicate_number&#32;*&#32;Daughter_PV-&gt;GetLogicalVolume()-&gt;GetSolid()-&gt;GetCubicVolume()/cm3;&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;real&#32;volume&#32;of&#32;daugthers</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00163"/>00163 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00165"/>00165 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Substract&#32;volume&#32;of&#32;daughters&#32;in&#32;dedicated&#32;maps</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00167"/>00167 <emphasis role="comment"></emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Map&#32;of&#32;materials</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(LV-&gt;GetMaterial())&#32;{&#32;fmap_VolumeMass[LV-&gt;GetMaterial()-&gt;GetName()].first&#32;-=&#32;daugther_volume;}&#32;&#32;<emphasis role="comment">//&#32;If&#32;material&#32;is&#32;not&#32;null,&#32;the&#32;volume&#32;of&#32;daughters&#32;is&#32;removed</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00170"/>00170 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00171"/>00171 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Call&#32;recursive&#32;method&#32;for&#32;each&#32;daughter&#32;physical&#32;volume&#32;(Daughter_PV)</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00172"/>00172 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;RecursiveVolumeMassCalculation(fmap_VolumeMass,&#32;Daughter_PV,&#32;PV_replicate_number);
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00175"/>00175 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00176"/>00176 }
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00177"/>00177 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00178"/>00178 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_t_m_x_material_1a49521a2a7fb07c49e44b1d6240405617">TMXMaterial::PrintMassLatticeByElement</link>(<emphasis role="keyword">const</emphasis>&#32;G4String&#32;elementName)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00179"/>00179 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Print&#32;masses&#32;fuel&#32;........................&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00180"/>00180 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4MaterialTable*&#32;matTable&#32;=&#32;G4Material::GetMaterialTable();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00181"/>00181 &#32;&#32;&#32;&#32;G4LogicalVolumeStore*&#32;LVStore&#32;=&#32;G4LogicalVolumeStore::GetInstance();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00182"/>00182 &#32;&#32;&#32;&#32;G4PhysicalVolumeStore*&#32;PVStore&#32;=&#32;G4PhysicalVolumeStore::GetInstance();
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00183"/>00183 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Claculate&#32;the&#32;total&#32;mass&#32;of&#32;fuel&#32;element</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00185"/>00185 &#32;&#32;&#32;&#32;G4double&#32;totalMass&#32;=&#32;0.;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00186"/>00186 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i_mat&#32;=&#32;0;&#32;i_mat&#32;&lt;&#32;matTable-&gt;size();&#32;++i_mat)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00187"/>00187 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;CubicVolume&#32;=&#32;0;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;Mass&#32;=&#32;0;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00189"/>00189 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((*matTable)[i_mat])&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;LVStore-&gt;size();&#32;++i)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>((*LVStore)[i]&#32;&amp;&amp;&#32;(*LVStore)[i]-&gt;GetMaterial()&#32;&amp;&amp;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetName()&#32;==&#32;(*matTable)[i_mat]-&gt;GetName())&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00192"/>00192 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;0;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;PVStore-&gt;size();&#32;j++)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00194"/>00194 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;k&#32;=&#32;0;&#32;k&#32;&lt;&#32;(*PVStore)[j]-&gt;GetLogicalVolume()-&gt;GetNoDaughters();&#32;k++)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00195"/>00195 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((*PVStore)[j]
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00196"/>00196 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(*PVStore)[j]-&gt;GetLogicalVolume()
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(*PVStore)[j]-&gt;GetLogicalVolume()-&gt;GetDaughter(k)-&gt;GetLogicalVolume()
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(*PVStore)[j]-&gt;GetLogicalVolume()-&gt;GetDaughter(k)-&gt;GetLogicalVolume()-&gt;GetMaterial()
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(*PVStore)[j]-&gt;GetLogicalVolume()-&gt;GetDaughter(k)-&gt;GetLogicalVolume()-&gt;GetMaterial()-&gt;GetName()&#32;==&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetName()
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetName().find(<emphasis role="stringliteral">&quot;fuel&quot;</emphasis>)&#32;!=&#32;std::string::npos)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;(*PVStore)[j]-&gt;GetLogicalVolume()-&gt;GetName()&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;(*PVStore)[j]-&gt;GetMultiplicity()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;count&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CubicVolume&#32;+=&#32;(*LVStore)[i]-&gt;GetSolid()-&gt;GetCubicVolume()/cm3&#32;*&#32;count;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;(int)(*LVStore)[i]-&gt;GetNoDaughters();&#32;++j)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;CubicVolume&#32;-=&#32;(*LVStore)[i]-&gt;GetDaughter(j)-&gt;GetLogicalVolume()-&gt;GetSolid()-&gt;GetCubicVolume()/cm3&#32;*&#32;count;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;Mass&#32;+=&#32;(*LVStore)[i]-&gt;GetMass(<emphasis role="keyword">true</emphasis>,<emphasis role="keyword">false</emphasis>)/g&#32;*&#32;count;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;Mass&#32;!=&#32;0&#32;)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;material&#32;name:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;(*matTable)[i_mat]-&gt;GetName()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;volume:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;CubicVolume*1E-6&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;m3;&#32;mass:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;Mass/1000.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;kg&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00216"/>00216 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalMass&#32;+=&#32;Mass;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00217"/>00217 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00218"/>00218 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00219"/>00219 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00220"/>00220 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Total&#32;fuel&#32;mass:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;totalMass/1000.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;kg&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00221"/>00221 
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Calculate&#32;by&#32;element</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;LVStore-&gt;size();&#32;++i)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((*LVStore)[i]&#32;&amp;&amp;&#32;(*LVStore)[i]-&gt;GetMaterial()&#32;&amp;&amp;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetName().find(<emphasis role="stringliteral">&quot;fuel&quot;</emphasis>)&#32;!=&#32;std::string::npos)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00225"/>00225 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetName()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetNumberOfElements();&#32;j++)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetElement(j)-&gt;GetName()&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;((*LVStore)[i]-&gt;GetMaterial()-&gt;GetElement(j)-&gt;GetName().find(elementName)&#32;!=&#32;std::string::npos)&#32;{
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;fracElement&#32;=&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetFractionVector()[j];
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//std::cout&#32;&lt;&lt;&#32;(*LVStore)[i]-&gt;GetMaterial()-&gt;GetElement(j)-&gt;GetName()&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;fracElement&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;(*LVStore)[i]-&gt;GetMass(true,&#32;false)/(g*1000.)&#32;&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;nbPins&#32;&lt;&lt;&#32;std::endl;</emphasis>
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Total&#32;Mass&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;elementName&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;totalMass/1000.<emphasis role="comment">/*(*LVStore)[i]-&gt;GetMass(true,&#32;false)/(g*1000.)*/</emphasis>*fracElement&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;kg&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00236"/>00236 &#32;&#32;&#32;&#32;}
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00237"/>00237 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__g4-_neutron_transport_2src_2_t_m_x_material_8cc_source_1l00238"/>00238 }
</programlisting></section>
