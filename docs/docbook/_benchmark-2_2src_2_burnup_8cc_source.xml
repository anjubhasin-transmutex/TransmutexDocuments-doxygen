<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__benchmark-2_2src_2_burnup_8cc_source" xml:lang="en-US">
<title>Burnup.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/Burnup.cc</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00001"/>00001 <emphasis role="comment">//&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄▄▄▄▄▄▄▄▄▄&#32;&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄▄&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▄&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄▄&#32;&#32;&#32;&#32;&#32;&#32;&#32;▄▄&#32;&#32;▄&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▄&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄▄▄▄▄▄▄▄▄▄▄&#32;&#32;▄&#32;&#32;&#32;&#32;&#32;&#32;&#32;▄</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00002"/>00002 <emphasis role="comment">//&#32;▐░░░░░░░░░░░▌▐░░░░░░░░░░▌&#32;▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░░▌&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░░░░░░░░░░░▌▐░░▌&#32;&#32;&#32;&#32;&#32;▐░░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00003"/>00003 <emphasis role="comment">//&#32;▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀▀▀&#32;&#32;▀▀▀▀█░█▀▀▀▀&#32;▐░█▀▀▀▀▀▀▀█░▌▐░█▀▀▀▀▀▀▀█░▌▐░▌░▌&#32;&#32;&#32;&#32;&#32;▐░▌▐░█▀▀▀▀▀▀▀▀▀&#32;▐░▌░▌&#32;&#32;&#32;▐░▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;▀▀▀▀█░█▀▀▀▀&#32;▐░█▀▀▀▀▀▀▀▀▀&#32;&#32;▐░▌&#32;&#32;&#32;▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00004"/>00004 <emphasis role="comment">//&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌▐░▌&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;▐░▌▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00005"/>00005 <emphasis role="comment">//&#32;▐░█▄▄▄▄▄▄▄█░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░█▄▄▄▄▄▄▄▄▄&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░█▄▄▄▄▄▄▄█░▌▐░█▄▄▄▄▄▄▄█░▌▐░▌&#32;▐░▌&#32;&#32;&#32;▐░▌▐░█▄▄▄▄▄▄▄▄▄&#32;▐░▌&#32;▐░▐░▌&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░█▄▄▄▄▄▄▄▄▄&#32;&#32;&#32;&#32;▐░▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00006"/>00006 <emphasis role="comment">//&#32;▐░░░░░░░░░░░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░░░░░░░░░░░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░░░░░░░░░░░▌▐░░░░░░░░░░░▌▐░▌&#32;&#32;▐░▌&#32;&#32;▐░▌▐░░░░░░░░░░░▌▐░▌&#32;&#32;▐░▌&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░░░░░░░░░░░▌&#32;&#32;&#32;&#32;▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00007"/>00007 <emphasis role="comment">//&#32;▐░█▀▀▀▀▀▀▀█░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;▀▀▀▀▀▀▀▀▀█░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░█▀▀▀▀█░█▀▀&#32;▐░█▀▀▀▀▀▀▀█░▌▐░▌&#32;&#32;&#32;▐░▌&#32;▐░▌&#32;▀▀▀▀▀▀▀▀▀█░▌▐░▌&#32;&#32;&#32;▀&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░█▀▀▀▀▀▀▀▀▀&#32;&#32;&#32;&#32;▐░▌░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00008"/>00008 <emphasis role="comment">//&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░█▄▄▄▄▄▄▄█░▌&#32;▄▄▄▄▄▄▄▄▄█░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;▐░▌&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;▐░▐░▌&#32;▄▄▄▄▄▄▄▄▄█░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░█▄▄▄▄▄▄▄█░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░█▄▄▄▄▄▄▄▄▄&#32;&#32;▐░▌&#32;&#32;&#32;▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00010"/>00010 <emphasis role="comment">//&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░░░░░░░░░░▌&#32;▐░░░░░░░░░░░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;▐░░▌▐░░░░░░░░░░░▌▐░▌&#32;&#32;&#32;&#32;&#32;&#32;&#32;▐░▌▐░░░░░░░░░░░▌&#32;&#32;&#32;&#32;&#32;▐░▌&#32;&#32;&#32;&#32;&#32;▐░░░░░░░░░░░▌▐░▌&#32;&#32;&#32;&#32;&#32;▐░▌</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00011"/>00011 <emphasis role="comment">//&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀&#32;&#32;▀▀▀▀▀▀▀▀▀▀&#32;&#32;&#32;▀▀▀▀▀▀▀▀▀▀▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀▀&#32;&#32;▀▀▀▀▀▀▀▀▀▀▀&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀&#32;&#32;▀▀▀▀▀▀▀▀▀▀▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀▀▀▀▀▀▀▀▀▀▀&#32;&#32;▀&#32;&#32;&#32;&#32;&#32;&#32;&#32;▀</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00012"/>00012 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00014"/>00014 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;\brief&#32;Implementation&#32;of&#32;the&#32;Burnup&#32;class</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00015"/>00015 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00016"/>00016 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00018"/>00018 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00019"/>00019 <emphasis role="comment">//&#32;Burnup</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00020"/>00020 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00021"/>00021 <emphasis role="comment">//&#32;Thomas&#32;Frosio,&#32;Transmutex,&#32;10/04/2021</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00022"/>00022 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00024"/>00024 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;Class&#32;to&#32;update&#32;the&#32;nuclide&#32;vectors&#32;in&#32;the&#32;whole&#32;geometry&#32;and&#32;change</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00025"/>00025 <emphasis role="comment">//&#32;the&#32;material&#32;in&#32;order&#32;to&#32;evolve&#32;with&#32;irradiation</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00027"/>00027 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00028"/>00028 <emphasis role="comment">/********************************INCLUDES******************************/</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00029"/>00029 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&quot;Burnup.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00031"/>00031 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00032"/>00032 <emphasis role="comment">/**********************************************************************/</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00033"/>00033 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00034"/>00034 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00040"/>00040 <link linkend="_class_burnup_1a055dcd10f50e0f72ed027574e4321c79">Burnup::Burnup</link>(std::map&lt;<link linkend="_class_t_m_x_material">TMXMaterial</link>*,&#32;std::map&lt;G4int,&#32;G4int&gt;&gt;&#32;sourceTerm,&#32;<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>*&#32;p,&#32;<emphasis role="keywordtype">int</emphasis>&#32;stepNumber,&#32;<emphasis role="keywordtype">double</emphasis>&#32;timePassed,&#32;<emphasis role="keywordtype">double</emphasis>&#32;injE):
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00041"/>00041 &#32;&#32;&#32;&#32;m_sourceTerm(sourceTerm)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00042"/>00042 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00043"/>00043 &#32;&#32;&#32;&#32;m_epsilon&#32;&#32;&#32;&#32;&#32;=&#32;50;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00044"/>00044 &#32;&#32;&#32;&#32;m_epsilonabs&#32;&#32;=&#32;1E+21;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00045"/>00045 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00046"/>00046 &#32;&#32;&#32;&#32;m_p&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;p;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00047"/>00047 &#32;&#32;&#32;&#32;m_currentStep&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;stepNumber;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00048"/>00048 &#32;&#32;&#32;&#32;m_beamPower&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_p-&gt;P_beam;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00049"/>00049 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_p-&gt;int_Option&#32;==&#32;20)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00051"/>00051 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_nParticles&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_p-&gt;Nparticles&#32;*&#32;(m_p-&gt;Ncycle&#32;-&#32;m_p-&gt;NbDiscardCycle);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Les&#32;deux&#32;suivants&#32;doivent&#32;etre&#32;modifies&#32;car&#32;m_beamEnergy&#32;=&#32;EperFission&#32;/&#32;nu</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_beamEnergy&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;injE;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_beamIntensity&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_beamPower&#32;/&#32;(m_beamEnergy&#32;/&#32;MeV);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00058"/>00058 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_nParticles&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_p-&gt;Nparticles&#32;;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_beamEnergy&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_p-&gt;BeamEnergy;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_beamIntensity&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_beamPower&#32;/&#32;(m_beamEnergy&#32;/&#32;MeV);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00062"/>00062 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00063"/>00063 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00064"/>00064 &#32;&#32;&#32;&#32;m_totalIrradiationPeriod&#32;&#32;&#32;&#32;=&#32;m_p-&gt;TimeOfRun&#32;;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00065"/>00065 &#32;&#32;&#32;&#32;m_coolingPeriod&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_p-&gt;CoolingTime;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00066"/>00066 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00067"/>00067 &#32;&#32;&#32;&#32;m_nSteps&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_p-&gt;Nrun;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00068"/>00068 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00069"/>00069 &#32;&#32;&#32;&#32;m_verbose&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_p-&gt;Verbose;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00070"/>00070 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00071"/>00071 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00072"/>00072 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*********************************************************&quot;</emphasis>&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00073"/>00073 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TIMESTEP&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_currentStep&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00074"/>00074 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*********************************************************&quot;</emphasis>&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00075"/>00075 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00076"/>00076 &#32;&#32;&#32;&#32;m_currentIrradiationPeriod&#32;=&#32;m_p-&gt;TimeOfRun&#32;/&#32;m_p-&gt;Nrun;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00077"/>00077 &#32;&#32;&#32;&#32;m_scalingFactor&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_currentIrradiationPeriod&#32;*&#32;m_beamIntensity&#32;/&#32;(m_nParticles&#32;*&#32;e_SI);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00078"/>00078 &#32;&#32;&#32;&#32;m_irradiationTimePassed&#32;&#32;&#32;&#32;=&#32;timePassed&#32;+&#32;m_currentIrradiationPeriod;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00079"/>00079 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00080"/>00080 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00081"/>00081 &#32;&#32;&#32;&#32;G4GeometryManager::GetInstance()-&gt;OpenGeometry();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00082"/>00082 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00083"/>00083 &#32;&#32;&#32;&#32;recursiveInitialization((*G4PhysicalVolumeStore::GetInstance())[0]);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00084"/>00084 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00085"/>00085 &#32;&#32;&#32;&#32;ModifyMaterial();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00086"/>00086 &#32;&#32;&#32;&#32;writeMaterials();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00087"/>00087 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00088"/>00088 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00093"/>00093 <emphasis role="keywordtype">double</emphasis>&#32;<link linkend="_class_burnup_1a53b19e00ea00612dcb9151d5def41fcc">Burnup::getTimePassed</link>()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00094"/>00094 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00095"/>00095 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;m_irradiationTimePassed;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00096"/>00096 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00097"/>00097 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00101"/>00101 <link linkend="_class_burnup_1ae5bceb64e397e4cbfb44aa89acc2e919">Burnup::~Burnup</link>()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00102"/>00102 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00103"/>00103 &#32;&#32;&#32;&#32;m_sourceTerm.clear();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00104"/>00104 &#32;&#32;&#32;&#32;m_matToLV.clear();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00105"/>00105 &#32;&#32;&#32;&#32;m_matToMass.clear();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00106"/>00106 &#32;&#32;&#32;&#32;m_nuclideVector.clear();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00107"/>00107 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00108"/>00108 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00114"/>00114 <emphasis role="keywordtype">void</emphasis>&#32;Burnup::recursiveInitialization(G4VPhysicalVolume*&#32;PV,&#32;<emphasis role="keywordtype">int</emphasis>&#32;replicate_number)&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(PV)&#32;<emphasis role="comment">//&#32;if&#32;physical&#32;volume&#32;exists</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00116"/>00116 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4LogicalVolume*&#32;LV&#32;&#32;&#32;&#32;&#32;=&#32;PV-&gt;GetLogicalVolume();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00118"/>00118 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;PV_replicate_number&#32;=&#32;replicate_number&#32;*&#32;PV-&gt;GetMultiplicity();&#32;<emphasis role="comment">//&#32;Get&#32;the&#32;number&#32;of&#32;replicates</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00119"/>00119 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00120"/>00120 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(LV)&#32;<emphasis role="comment">//&#32;if&#32;logical&#32;volume&#32;exists</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00121"/>00121 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00122"/>00122 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;For&#32;each&#32;Physical&#32;volume&#32;get&#32;daugther&#32;of&#32;the&#32;Logical&#32;volume</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00123"/>00123 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;LV-&gt;GetNoDaughters();&#32;++i)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4VPhysicalVolume*&#32;Daughter_PV&#32;=&#32;LV-&gt;GetDaughter(i);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::map&lt;TMXMaterial*,&#32;std::vector&lt;G4LogicalVolume*&gt;&gt;::iterator&#32;mat_it&#32;=&#32;m_matToLV.find((<link linkend="_class_t_m_x_material">TMXMaterial</link>*)(LV)-&gt;GetMaterial());
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(mat_it&#32;&#32;==&#32;m_matToLV.end())
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00128"/>00128 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00129"/>00129 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_matToLV[(<link linkend="_class_t_m_x_material">TMXMaterial</link>*)(Daughter_PV-&gt;GetLogicalVolume())-&gt;GetMaterial()]&#32;=&#32;{Daughter_PV-&gt;GetLogicalVolume()};
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00130"/>00130 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_matToMass[(<link linkend="_class_t_m_x_material">TMXMaterial</link>*)(Daughter_PV-&gt;GetLogicalVolume())-&gt;GetMaterial()]&#32;=&#32;(Daughter_PV-&gt;GetLogicalVolume())-&gt;GetMass(<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)&#32;/&#32;g;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00131"/>00131 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00132"/>00132 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00133"/>00133 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00134"/>00134 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_matToLV[(<link linkend="_class_t_m_x_material">TMXMaterial</link>*)(Daughter_PV-&gt;GetLogicalVolume())-&gt;GetMaterial()].push_back(Daughter_PV-&gt;GetLogicalVolume());
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_matToMass[(<link linkend="_class_t_m_x_material">TMXMaterial</link>*)(Daughter_PV-&gt;GetLogicalVolume())-&gt;GetMaterial()]&#32;+=&#32;(Daughter_PV-&gt;GetLogicalVolume())-&gt;GetMass(<emphasis role="keyword">true</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)&#32;/&#32;g;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;recursiveInitialization(Daughter_PV,&#32;PV_replicate_number);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00139"/>00139 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00140"/>00140 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00141"/>00141 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00142"/>00142 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00146"/>00146 <emphasis role="keywordtype">void</emphasis>&#32;Burnup::ModifyMaterial()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00147"/>00147 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00148"/>00148 &#32;&#32;&#32;&#32;G4bool&#32;hasScalingBeenModified&#32;=&#32;<emphasis role="keyword">false</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00149"/>00149 &#32;&#32;&#32;&#32;<emphasis role="comment">//Loop&#32;on&#32;the&#32;materials&#32;matToLV&#32;=&#32;(material*,&#32;vector&lt;lvolume*&gt;)</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00150"/>00150 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;mat&#32;:&#32;m_matToLV)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00151"/>00151 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00152"/>00152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Compute&#32;number&#32;of&#32;atoms&#32;of&#32;each&#32;nuclide&#32;in&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00153"/>00153 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;computetNumOfAtoms(mat.first);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00154"/>00154 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00155"/>00155 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00156"/>00156 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Addition&#32;of&#32;the&#32;decayed&#32;source&#32;term&#32;inside&#32;the&#32;final&#32;concentration&#32;+&#32;addition&#32;of&#32;initial&#32;compound&#32;decay</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00157"/>00157 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Test&#32;to&#32;constitute&#32;time&#32;step</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;testTimeStep(mat.first,&#32;hasScalingBeenModified);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00161"/>00161 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00162"/>00162 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00164"/>00164 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Cette&#32;partie&#32;du&#32;code&#32;est&#32;dégueulasse.&#32;TF</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00166"/>00166 <emphasis role="comment"></emphasis>&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_verbose&#32;&gt;&#32;0&#32;&amp;&amp;&#32;hasScalingBeenModified)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00167"/>00167 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00168"/>00168 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::ostringstream&#32;streamObj;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00169"/>00169 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;streamObj&#32;&lt;&lt;&#32;m_epsilonabs;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00170"/>00170 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;The&#32;above&#32;nuclides&#32;are&#32;produced&#32;or&#32;consommed&#32;with&#32;a&#32;ratio&#32;above&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_epsilon&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%&#32;and&#32;a&#32;production&#32;above&#32;&quot;</emphasis>&#32;+&#32;streamObj.str()&#32;+&#32;<emphasis role="stringliteral">&quot;&#32;atoms\n&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00171"/>00171 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(hasScalingBeenModified)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00173"/>00173 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00174"/>00174 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Scaling&#32;factor&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_scalingFactor&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;-&gt;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_scalingFactor&#32;*&#32;m_epsilon&#32;/&#32;m_scalingCorrection&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;particles&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;TimeStep&#32;correction:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_currentIrradiationPeriod&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;-&gt;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_currentIrradiationPeriod&#32;*&#32;m_epsilon&#32;/&#32;m_scalingCorrection&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Irradiation&#32;time&#32;reduction&#32;of&#32;a&#32;factor&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_scalingCorrection&#32;/&#32;m_epsilon&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_scalingFactor&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*=&#32;m_epsilon&#32;/&#32;m_scalingCorrection;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00178"/>00178 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_irradiationTimePassed&#32;&#32;&#32;&#32;-=&#32;m_currentIrradiationPeriod;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_currentIrradiationPeriod&#32;*=&#32;m_epsilon&#32;/&#32;m_scalingCorrection;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_irradiationTimePassed&#32;&#32;&#32;&#32;+=&#32;m_currentIrradiationPeriod;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00182"/>00182 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n****************************************************&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;************&#32;TIME&#32;STEP&#32;HAS&#32;BEEN&#32;CHANGED&#32;************&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;****************************************************&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00186"/>00186 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00187"/>00187 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_irradiationTimePassed&#32;&gt;&#32;m_totalIrradiationPeriod)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00189"/>00189 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00190"/>00190 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_irradiationTimePassed&#32;&#32;&#32;&#32;+=&#32;-(m_irradiationTimePassed&#32;-&#32;m_totalIrradiationPeriod);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00191"/>00191 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_currentIrradiationPeriod&#32;+=&#32;-(m_irradiationTimePassed&#32;-&#32;m_totalIrradiationPeriod);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00192"/>00192 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00193"/>00193 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_scalingFactor&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_currentIrradiationPeriod&#32;*&#32;m_beamIntensity&#32;/&#32;(m_nParticles&#32;*&#32;e_SI);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00194"/>00194 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00195"/>00195 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00196"/>00196 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00197"/>00197 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_verbose&#32;&gt;&#32;0)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00198"/>00198 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00199"/>00199 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;****************************************************&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00200"/>00200 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;**********&#32;BEAM&#32;PARAMETERS&#32;FOR&#32;ACTIVATION&#32;**********&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00201"/>00201 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;****************************************************\n&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00202"/>00202 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*&#32;Beam&#32;power:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_beamPower&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;MW&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*&#32;Beam&#32;energy:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_beamEnergy&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;MeV&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*&#32;Beam&#32;intensity:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_beamIntensity&#32;*&#32;1000&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;mA&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*&#32;Step&#32;irradiation&#32;period:&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_currentIrradiationPeriod&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;(&quot;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;m_currentIrradiationPeriod&#32;/&#32;m_totalIrradiationPeriod&#32;*&#32;100&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%)&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*&#32;Step&#32;scaling&#32;factor:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_scalingFactor
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;number&#32;of&#32;primaries&#32;during&#32;step&#32;irradiation&#32;period&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;*&#32;Current&#32;irradiation&#32;time:&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_irradiationTimePassed&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;(&quot;</emphasis>&#32;&lt;&lt;&#32;m_irradiationTimePassed&#32;/&#32;m_totalIrradiationPeriod&#32;*&#32;100
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%)&quot;</emphasis>&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n****************************************************&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;****************&#32;MATERIAL&#32;ACTIVATION&#32;***************&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;****************************************************\n&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00216"/>00216 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00218"/>00218 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00219"/>00219 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00220"/>00220 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="comment">//Loop&#32;on&#32;the&#32;materials&#32;matToLV&#32;=&#32;(material*,&#32;vector&lt;lvolume*&gt;)</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;mat&#32;:&#32;m_matToLV)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00223"/>00223 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_verbose&#32;&gt;&#32;1)&#32;<link linkend="_class_burnup_1aa81e30147193d3e3c8cf5e770b53a0f5">printMaterial</link>(mat.first);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00225"/>00225 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Computing&#32;the&#32;new&#32;nuclide&#32;vector&#32;and&#32;building&#32;new&#32;material</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;computeNewNuclideVector(mat.first);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00228"/>00228 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_material">TMXMaterial</link>&#32;*&#32;newMat&#32;=&#32;buildMaterial(mat.first);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00230"/>00230 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Replacing&#32;materials&#32;in&#32;all&#32;the&#32;LogicalVolumes</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::vector&lt;G4LogicalVolume*&gt;::size_type&#32;i=0;&#32;i&lt;mat.second.size();&#32;i++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat.second[i]-&gt;SetMaterial(newMat);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00234"/>00234 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_verbose&#32;&gt;&#32;1)&#32;<link linkend="_class_burnup_1aa81e30147193d3e3c8cf5e770b53a0f5">printMaterial</link>((<link linkend="_class_t_m_x_material">TMXMaterial</link>*)newMat);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00236"/>00236 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00237"/>00237 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00238"/>00238 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00243"/>00243 <emphasis role="keywordtype">void</emphasis>&#32;Burnup::computeNewNuclideVector(<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;mat)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00244"/>00244 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00245"/>00245 &#32;&#32;&#32;&#32;<emphasis role="comment">//Compute&#32;number&#32;of&#32;atoms&#32;of&#32;each&#32;nuclide&#32;in&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00246"/>00246 &#32;&#32;&#32;&#32;computetNumOfAtoms(mat);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00247"/>00247 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00249"/>00249 &#32;&#32;&#32;&#32;<emphasis role="comment">//Here&#32;the&#32;bateman&#32;decay&#32;has&#32;to&#32;be&#32;done//</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00251"/>00251 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00252"/>00252 &#32;&#32;&#32;&#32;<emphasis role="comment">//Addition&#32;of&#32;the&#32;decayed&#32;source&#32;term&#32;inside&#32;the&#32;final&#32;concentration&#32;+&#32;addition&#32;of&#32;initial&#32;compound&#32;decay</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00253"/>00253 &#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_bateman_decay">TMXBatemanDecay</link>&#32;bateman;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00254"/>00254 &#32;&#32;&#32;&#32;bateman.decayNuclideVector(m_nuclideVector,&#32;m_sourceTerm[mat],
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_currentIrradiationPeriod,
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00256"/>00256 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_scalingFactor);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00257"/>00257 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00258"/>00258 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00259"/>00259 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00264"/>00264 <emphasis role="keywordtype">void</emphasis>&#32;Burnup::testTimeStep(<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;mat,&#32;G4bool&#32;&amp;modifScaling)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00265"/>00265 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00266"/>00266 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;source&#32;:&#32;m_sourceTerm[mat])
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00267"/>00267 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00268"/>00268 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_nuclideVector[source.first]&#32;!=&#32;0.&#32;&amp;&amp;&#32;source.second&#32;!=&#32;0.)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00269"/>00269 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00270"/>00270 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;(std::abs(source.second&#32;*&#32;m_scalingFactor&#32;/&#32;m_nuclideVector[source.first]&#32;*&#32;100)&#32;&gt;&#32;m_epsilon
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00271"/>00271 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;m_nuclideVector[source.first]&#32;&gt;&#32;m_epsilonabs))
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00272"/>00272 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_verbose&#32;&gt;&#32;0)&#32;std::cout&#32;&lt;&lt;&#32;mat-&gt;GetName()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;source.first
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;source.second&#32;*&#32;m_scalingFactor&#32;/&#32;m_nuclideVector[source.first]&#32;*&#32;100&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%&#32;and&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00275"/>00275 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;m_nuclideVector[source.first]&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;number&#32;of&#32;atoms&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00276"/>00276 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_scalingCorrection&#32;=&#32;std::max(m_scalingCorrection,&#32;std::abs(source.second&#32;*&#32;m_scalingFactor&#32;/&#32;m_nuclideVector[source.first]&#32;*&#32;100));
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;modifScaling&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(m_nuclideVector[source.first]&#32;+&#32;source.second&#32;*&#32;m_scalingFactor&#32;&lt;&#32;0.&#32;)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;newScalingFactor&#32;=&#32;-m_nuclideVector[source.first]&#32;/&#32;source.second;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(newScalingFactor&#32;&lt;=&#32;m_scalingFactor&#32;*&#32;m_epsilon&#32;/&#32;m_scalingCorrection)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;timeToSubstract&#32;&#32;&#32;&#32;&#32;&#32;=&#32;m_currentIrradiationPeriod&#32;*&#32;(&#32;1&#32;-&#32;newScalingFactor&#32;/&#32;m_scalingFactor&#32;);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_currentIrradiationPeriod&#32;+=&#32;-&#32;timeToSubstract;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_irradiationTimePassed&#32;&#32;&#32;&#32;+=&#32;-&#32;timeToSubstract;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_scalingFactor&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;newScalingFactor;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Consumption&#32;of&#32;the&#32;totality&#32;of&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;source.first&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;.&#32;Initial&#32;number&#32;of&#32;atoms:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_nuclideVector[source.first]
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;.&#32;Final&#32;number&#32;of&#32;atoms:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_nuclideVector[source.first]&#32;+&#32;source.second&#32;*&#32;m_scalingFactor&lt;&lt;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00293"/>00293 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00294"/>00294 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00295"/>00295 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00300"/>00300 <emphasis role="keywordtype">void</emphasis>&#32;Burnup::computetNumOfAtoms(<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;mat)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00301"/>00301 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00302"/>00302 &#32;&#32;&#32;&#32;m_nuclideVector.clear();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00303"/>00303 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double*&#32;massFraction&#32;&#32;&#32;&#32;=&#32;mat-&gt;GetFractionVector();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00304"/>00304 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00305"/>00305 &#32;&#32;&#32;&#32;<emphasis role="comment">//Loop&#32;on&#32;the&#32;number&#32;of&#32;elements&#32;of&#32;the&#32;material</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00306"/>00306 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=0;&#32;j&#32;&lt;&#32;mat-&gt;GetNumberOfElements();&#32;++j)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00307"/>00307 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double*&#32;relativeAbundance&#32;=&#32;mat-&gt;GetElement(j)-&gt;GetRelativeAbundanceVector();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00309"/>00309 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00310"/>00310 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Loop&#32;on&#32;the&#32;number&#32;of&#32;isotopes&#32;of&#32;the&#32;element</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;&#32;mat-&gt;GetElement(j)-&gt;GetNumberOfIsotopes();&#32;i++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;nAtoms&#32;=&#32;m_matToMass[mat]&#32;*&#32;CLHEP::Avogadro&#32;/&#32;(&#32;mat-&gt;GetElement(j)-&gt;GetA()&#32;/&#32;(g/mole)&#32;)&#32;*&#32;relativeAbundance[i]&#32;*&#32;massFraction[j];<emphasis role="comment">//&#32;tenir&#32;compte&#32;des&#32;différents&#32;volumes</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;IZA&#32;=&#32;mat-&gt;GetElement(j)-&gt;GetZ()&#32;*&#32;10000&#32;+&#32;mat-&gt;GetElement(j)-&gt;GetIsotope(0)-&gt;GetN()&#32;*&#32;10&#32;+&#32;mat-&gt;GetElement(j)-&gt;GetIsotope(0)-&gt;Getm();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::map&lt;G4int,G4double&gt;::iterator&#32;it&#32;=&#32;m_nuclideVector.find(IZA);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;it&#32;==&#32;m_nuclideVector.end())
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_nuclideVector[IZA]&#32;=&#32;nAtoms;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_nuclideVector[IZA]&#32;+=&#32;nAtoms;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00321"/>00321 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00322"/>00322 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00323"/>00323 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00329"/>00329 <link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;Burnup::buildMaterial(<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;mat)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00330"/>00330 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00331"/>00331 &#32;&#32;&#32;&#32;std::vector&lt;int&gt;&#32;remove;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00332"/>00332 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">auto</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;elem&#32;:&#32;m_nuclideVector)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00333"/>00333 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem.second&#32;&lt;=&#32;1.&#32;)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00334"/>00334 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;remove.push_back(elem.first);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00335"/>00335 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">auto</emphasis>&#32;&amp;e:&#32;remove)&#32;m_nuclideVector.erase(e);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00336"/>00336 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00337"/>00337 &#32;&#32;&#32;&#32;<emphasis role="comment">//Compute&#32;mass&#32;of&#32;the&#32;new&#32;material&#32;and&#32;turn&#32;nuclide&#32;vector&#32;from&#32;atom&#32;percentage&#32;to&#32;mass&#32;percentage</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00338"/>00338 &#32;&#32;&#32;&#32;G4double&#32;newMass&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;getMaterialMass();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00339"/>00339 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00340"/>00340 &#32;&#32;&#32;&#32;<emphasis role="comment">//Initialize&#32;a&#32;new&#32;material&#32;with&#32;the&#32;new&#32;composition</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00341"/>00341 &#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_material">TMXMaterial</link>&#32;*updatedMat&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;<link linkend="_class_t_m_x_material">TMXMaterial</link>(getMatNameCurrentStep(mat),
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00342"/>00342 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat-&gt;GetDensity()&#32;*&#32;newMass&#32;/&#32;m_matToMass[mat],
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00343"/>00343 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_nuclideVector.size(),
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00344"/>00344 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat-&gt;GetState(),
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00345"/>00345 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat-&gt;GetTemperature(),
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00346"/>00346 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;mat-&gt;GetPressure());
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<emphasis role="comment">//Construct&#32;the&#32;new&#32;material</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00348"/>00348 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">auto</emphasis>&#32;<emphasis role="keyword">const</emphasis>&amp;&#32;elem&#32;:&#32;m_nuclideVector)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00349"/>00349 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00350"/>00350 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;TMXElementStore::GetElement(elem.first)-&gt;Name().substr(0,3)&#32;==&#32;<emphasis role="stringliteral">&quot;TS_&quot;</emphasis>)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00351"/>00351 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updatedMat-&gt;AddElement(TMXElementStore::GetElement(elem.first)-&gt;IZA(),&#32;elem.second&#32;/&#32;newMass,&#32;TMXElementStore::GetElement(elem.first)-&gt;Name());
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00356"/>00356 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;elem.first&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;elem.second&#32;&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00357"/>00357 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;TMXElementStore::GetElement(elem.first)-&gt;IZA()&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;elem.second&#32;/&#32;newMass&#32;&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(elem.second&#32;/&#32;newMass&#32;&lt;=&#32;0.)&#32;<emphasis role="comment">//&#32;ATTENTION:&#32;on&#32;triche</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updatedMat-&gt;AddElement(TMXElementStore::GetElement(elem.first)-&gt;IZA(),&#32;0.);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00360"/>00360 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;updatedMat-&gt;AddElement(TMXElementStore::GetElement(elem.first)-&gt;IZA(),&#32;elem.second&#32;/&#32;newMass);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00362"/>00362 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00364"/>00364 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00365"/>00365 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;updatedMat;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00366"/>00366 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00367"/>00367 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00373"/>00373 G4double&#32;Burnup::getMaterialMass()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00374"/>00374 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00375"/>00375 &#32;&#32;&#32;&#32;G4double&#32;newMass&#32;=&#32;0.;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00376"/>00376 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Loop&#32;over&#32;nuclides&#32;in&#32;nuclideVector</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00377"/>00377 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;isot.second&#32;returns&#32;the&#32;number&#32;of&#32;atoms&#32;of&#32;nuclide&#32;with&#32;name&#32;isot.first</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00378"/>00378 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;isot&#32;:&#32;m_nuclideVector)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00379"/>00379 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00380"/>00380 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(TMXElementStore::GetElement(isot.first)&#32;==&#32;NULL)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00381"/>00381 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00382"/>00382 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Element&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;isot.first&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;unknown&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00383"/>00383 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00384"/>00384 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;isotMass&#32;=&#32;isot.second&#32;/&#32;CLHEP::Avogadro&#32;*&#32;TMXElementStore::GetElement(isot.first)-&gt;Mweight();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;newMass&#32;+=&#32;isotMass;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00386"/>00386 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;&#32;isot.first&lt;&lt;&#32;&quot;&#32;MassIsot:&#32;&quot;&lt;&lt;isotMass&#32;&lt;&lt;&quot;&#32;MassMat:&#32;&quot;&lt;&lt;&#32;newMass&lt;&lt;&quot;&#32;nAtomsIsot:&#32;&quot;&lt;&lt;&#32;isot.second&#32;&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00387"/>00387 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_nuclideVector[isot.first]&#32;=&#32;isotMass;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00388"/>00388 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00389"/>00389 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;newMass;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00390"/>00390 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00391"/>00391 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00397"/>00397 std::string&#32;Burnup::getMatNameCurrentStep(<link linkend="_class_t_m_x_material">TMXMaterial</link>&#32;*mat)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00398"/>00398 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00399"/>00399 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(mat-&gt;GetName().find(<emphasis role="stringliteral">&quot;*&quot;</emphasis>)&#32;==&#32;std::string::npos)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;?&#32;mat-&gt;GetName()&#32;+&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>&#32;+&#32;std::to_string(m_currentStep)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;mat-&gt;GetName().substr(0,&#32;mat-&gt;GetName().find(<emphasis role="stringliteral">&quot;*&quot;</emphasis>))&#32;+&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>&#32;+&#32;std::to_string(m_currentStep);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00402"/>00402 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00403"/>00403 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00410"/>00410 std::string&#32;Burnup::getMatName(<link linkend="_class_t_m_x_material">TMXMaterial</link>&#32;*mat,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nStep)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00411"/>00411 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00412"/>00412 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(nStep&#32;==&#32;0)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00413"/>00413 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat-&gt;GetName().substr(0,&#32;mat-&gt;GetName().find(<emphasis role="stringliteral">&quot;*&quot;</emphasis>));
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;mat-&gt;GetName().substr(0,&#32;mat-&gt;GetName().find(<emphasis role="stringliteral">&quot;*&quot;</emphasis>))&#32;+&#32;<emphasis role="stringliteral">&quot;*&quot;</emphasis>&#32;+&#32;std::to_string(nStep);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00416"/>00416 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00417"/>00417 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00421"/>00421 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_burnup_1add988a7f493366949d7317da572d8f67">Burnup::writeMaterials</link>()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00422"/>00422 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00423"/>00423 &#32;&#32;&#32;&#32;std::string&#32;fileName&#32;=&#32;<emphasis role="stringliteral">&quot;Evolved_Materials_Step&quot;</emphasis>&#32;+&#32;std::to_string(m_currentStep);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00424"/>00424 &#32;&#32;&#32;&#32;std::ofstream&#32;file;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00425"/>00425 &#32;&#32;&#32;&#32;file.open(fileName,&#32;std::ios::out);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00426"/>00426 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00427"/>00427 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;****************************************************&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00428"/>00428 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;**********&#32;BEAM&#32;PARAMETERS&#32;FOR&#32;ACTIVATION&#32;**********&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00429"/>00429 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;****************************************************\n&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00430"/>00430 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00431"/>00431 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;*&#32;Beam&#32;power:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_beamPower&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;MW&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00432"/>00432 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;*&#32;Beam&#32;energy:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_beamEnergy&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;MeV&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00433"/>00433 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;*&#32;Beam&#32;intensity:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_beamIntensity&#32;*&#32;1000&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;mA&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00434"/>00434 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;*&#32;Step&#32;irradiation&#32;period:&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_currentIrradiationPeriod&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;(&quot;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;m_currentIrradiationPeriod&#32;/&#32;m_totalIrradiationPeriod&#32;*&#32;100&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%)&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00436"/>00436 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;*&#32;Step&#32;scaling&#32;factor:&#32;&#32;&#32;&#32;&#32;&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_scalingFactor
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;number&#32;of&#32;primaries&#32;during&#32;step&#32;irradiation&#32;period&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00438"/>00438 &#32;&#32;&#32;&#32;file&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;*&#32;Current&#32;irradiation&#32;time:&#32;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;m_irradiationTimePassed&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;(&quot;</emphasis>&#32;&lt;&lt;&#32;m_irradiationTimePassed&#32;/&#32;m_totalIrradiationPeriod&#32;*&#32;100
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%)&quot;</emphasis>&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00441"/>00441 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00442"/>00442 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keyword">auto</emphasis>&amp;&#32;mat&#32;:&#32;m_matToLV)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00443"/>00443 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00444"/>00444 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;newMat&#32;=&#32;(<link linkend="_class_t_m_x_material">TMXMaterial</link>*)TMXMaterial::GetMaterial(getMatNameCurrentStep(mat.first),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00445"/>00445 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(!newMat)&#32;newMat&#32;=&#32;mat.first;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00446"/>00446 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n//&#32;Material:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;newMat-&gt;GetName()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;appearing&#32;in&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;m_matToLV[mat.first].size()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;logical&#32;volume(s):&quot;</emphasis>&#32;&#32;&#32;&lt;&lt;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00450"/>00450 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00451"/>00451 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;totalVolume&#32;=&#32;0.;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;totalMass&#32;&#32;&#32;=&#32;0.;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::vector&lt;G4LogicalVolume*&gt;::size_type&#32;i=0;&#32;i&lt;mat.second.size();&#32;i++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;daugtherVolume&#32;=&#32;0.;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;mat.second[i]-&gt;GetNoDaughters();&#32;j++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;daugtherVolume&#32;+=&#32;mat.second[i]-&gt;GetDaughter(j)-&gt;GetLogicalVolume()-&gt;GetSolid()-&gt;GetCubicVolume()&#32;/&#32;cm3;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalVolume&#32;+=&#32;mat.second[i]-&gt;GetSolid()-&gt;GetCubicVolume()&#32;/&#32;cm3&#32;-&#32;daugtherVolume;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;addMass&#32;=&#32;mat.second[i]-&gt;GetMass(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)&#32;/&#32;g;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalMass&#32;&#32;&#32;+=&#32;addMass;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;//&#32;LogicalVolume:&#32;&quot;</emphasis>&#32;&#32;&#32;&lt;&lt;&#32;mat.second[i]-&gt;GetName()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;with&#32;mass:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;addMass
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00465"/>00465 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;g&#32;and&#32;volume:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;mat.second[i]-&gt;GetSolid()-&gt;GetCubicVolume()&#32;/&#32;cm3&#32;-&#32;daugtherVolume
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00466"/>00466 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm3&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00469"/>00469 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;int&#32;count&#32;=&#32;0;</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double*&#32;massFraction&#32;&#32;&#32;&#32;=&#32;newMat-&gt;GetFractionVector();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;matName&#32;=&#32;newMat-&gt;GetName();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::replace(matName.begin(),&#32;matName.end(),&#32;<emphasis role="charliteral">&apos;*&apos;</emphasis>,&#32;<emphasis role="charliteral">&apos;_&apos;</emphasis>);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;TMXMaterial*&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;matName
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;=&#32;new&#32;TMXMaterial(\&quot;&quot;</emphasis>&#32;&lt;&lt;&#32;newMat-&gt;GetName()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\&quot;,&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;totalMass&#32;/&#32;totalVolume
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;*&#32;(g&#32;/&#32;cm3),&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;newMat-&gt;GetElementVector()-&gt;size()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;m_State[newMat-&gt;GetState()]
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;newMat-&gt;GetTemperature()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;newMat-&gt;GetPressure()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;);&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00482"/>00482 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00483"/>00483 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=0;&#32;j&#32;&lt;&#32;newMat-&gt;GetNumberOfElements();&#32;++j)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00484"/>00484 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Loop&#32;on&#32;the&#32;number&#32;of&#32;isotopes&#32;of&#32;the&#32;element</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;&#32;newMat-&gt;GetElement(j)-&gt;GetNumberOfIsotopes();&#32;i++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;IZA&#32;=&#32;newMat-&gt;GetElement(j)-&gt;GetZ()&#32;*&#32;10000&#32;+&#32;newMat-&gt;GetElement(j)-&gt;GetIsotope(0)-&gt;GetN()&#32;*&#32;10&#32;+&#32;newMat-&gt;GetElement(j)-&gt;GetIsotope(0)-&gt;Getm();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00489"/>00489 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00490"/>00490 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;matName
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00491"/>00491 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;-&gt;AddElement(&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;IZA
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00492"/>00492 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;,&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;massFraction[j]
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00493"/>00493 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;);&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00494"/>00494 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00495"/>00495 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;file&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00497"/>00497 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00498"/>00498 &#32;&#32;&#32;&#32;file.close();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00499"/>00499 }
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00500"/>00500 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00505"/>00505 <emphasis role="keywordtype">void</emphasis>&#32;<link linkend="_class_burnup_1aa81e30147193d3e3c8cf5e770b53a0f5">Burnup::printMaterial</link>(<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;mat)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00506"/>00506 {
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00507"/>00507 &#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_material">TMXMaterial</link>*&#32;matSubstitute&#32;=&#32;mat;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00508"/>00508 &#32;&#32;&#32;&#32;std::string&#32;initialString&#32;=&#32;<emphasis role="stringliteral">&quot;Material:&#32;&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00509"/>00509 &#32;&#32;&#32;&#32;std::string&#32;finalString&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00510"/>00510 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00511"/>00511 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(mat-&gt;GetName().find(<emphasis role="stringliteral">&quot;*&quot;</emphasis>)&#32;==&#32;std::string::npos)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialString&#32;=&#32;<emphasis role="stringliteral">&quot;Modifying:&#32;&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00513"/>00513 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00514"/>00514 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;pos&#32;=&#32;mat-&gt;GetName().find(<emphasis role="stringliteral">&quot;*&quot;</emphasis>);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;substring&#32;=&#32;mat-&gt;GetName().substr(pos&#32;+&#32;1,&#32;mat-&gt;GetName().length());
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00517"/>00517 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(std::stoi(substring)&#32;==&#32;m_currentStep)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialString&#32;=&#32;<emphasis role="stringliteral">&quot;By:&#32;&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;finalString&#32;&#32;&#32;=&#32;<emphasis role="stringliteral">&quot;\n-----------------------------------------------------------------------------------\n&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matSubstitute&#32;=&#32;(<link linkend="_class_t_m_x_material">TMXMaterial</link>*)TMXMaterial::GetMaterial(getMatName(mat,&#32;m_currentStep&#32;-&#32;1),&#32;<emphasis role="keyword">true</emphasis>);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>(std::stoi(substring)&#32;==&#32;m_currentStep&#32;-&#32;1&#32;||&#32;substring.length()&#32;==&#32;0)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;initialString&#32;=&#32;<emphasis role="stringliteral">&quot;Modifying:&#32;&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00526"/>00526 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00527"/>00527 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00528"/>00528 &#32;&#32;&#32;&#32;std::cout&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;initialString&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;mat-&gt;GetName()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00529"/>00529 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;appearing&#32;in&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;m_matToLV[matSubstitute].size()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;logical&#32;volume(s):&quot;</emphasis>&#32;&lt;&lt;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00531"/>00531 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00532"/>00532 &#32;&#32;&#32;&#32;G4double&#32;totalVolume&#32;=&#32;0.;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00533"/>00533 &#32;&#32;&#32;&#32;G4double&#32;totalMass&#32;&#32;&#32;=&#32;0.;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00534"/>00534 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(std::vector&lt;G4LogicalVolume*&gt;::size_type&#32;i=0;&#32;i&lt;m_matToLV[matSubstitute].size();&#32;i++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00535"/>00535 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00536"/>00536 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;daugtherVolume&#32;=&#32;0.;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00537"/>00537 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;j&#32;=&#32;0;&#32;j&#32;&lt;&#32;m_matToLV[matSubstitute][i]-&gt;GetNoDaughters();&#32;j++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00538"/>00538 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00539"/>00539 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;daugtherVolume&#32;+=&#32;m_matToLV[matSubstitute][i]-&gt;GetDaughter(j)-&gt;GetLogicalVolume()-&gt;GetSolid()-&gt;GetCubicVolume()&#32;/&#32;cm3;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00540"/>00540 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00541"/>00541 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalVolume&#32;+=&#32;m_matToLV[matSubstitute][i]-&gt;GetSolid()-&gt;GetCubicVolume()&#32;/&#32;cm3&#32;-&#32;daugtherVolume;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00542"/>00542 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;addMass&#32;=&#32;m_matToLV[matSubstitute][i]-&gt;GetMass(<emphasis role="keyword">false</emphasis>,&#32;<emphasis role="keyword">false</emphasis>)&#32;/&#32;g;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00543"/>00543 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalMass&#32;&#32;&#32;+=&#32;addMass;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00544"/>00544 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\tLogicalVolume:&#32;&quot;</emphasis>&#32;&#32;&lt;&lt;&#32;m_matToLV[matSubstitute][i]-&gt;GetName()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00545"/>00545 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;with&#32;mass:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;addMass
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00546"/>00546 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;g&#32;and&#32;volume:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&lt;&lt;&#32;m_matToLV[matSubstitute][i]-&gt;GetSolid()-&gt;GetCubicVolume()&#32;/&#32;cm3&#32;-&#32;daugtherVolume
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00547"/>00547 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm3&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00548"/>00548 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00549"/>00549 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00550"/>00550 &#32;&#32;&#32;&#32;std::cout&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\tTotal&#32;mass:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;totalMass
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00551"/>00551 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;,Total&#32;volume:&#32;&quot;</emphasis>&#32;&#32;&#32;&lt;&lt;&#32;totalVolume
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00552"/>00552 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm3,&#32;Density:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&lt;&lt;&#32;totalMass&#32;/&#32;totalVolume
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00553"/>00553 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;g&#32;/&#32;cm3&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00554"/>00554 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00555"/>00555 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double*&#32;massFraction&#32;&#32;&#32;&#32;=&#32;mat-&gt;GetFractionVector();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00556"/>00556 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;j=0;&#32;j&#32;&lt;&#32;mat-&gt;GetNumberOfElements();&#32;++j)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00557"/>00557 &#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00558"/>00558 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double*&#32;relativeAbundance&#32;=&#32;mat-&gt;GetElement(j)-&gt;GetRelativeAbundanceVector();
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00559"/>00559 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\t\tElement:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;mat-&gt;GetElement(j)-&gt;GetName()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00560"/>00560 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;massFraction[j]
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00561"/>00561 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;mat-&gt;GetElement(j)-&gt;GetA()&#32;/&#32;(g/mole)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00562"/>00562 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00563"/>00563 
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00564"/>00564 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//Loop&#32;on&#32;the&#32;number&#32;of&#32;isotopes&#32;of&#32;the&#32;element</emphasis>
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00565"/>00565 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">unsigned</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;&#32;mat-&gt;GetElement(j)-&gt;GetNumberOfIsotopes();&#32;i++)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00566"/>00566 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00567"/>00567 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4Isotope*&#32;Isotope&#32;=&#32;mat-&gt;GetElement(j)-&gt;GetIsotope(i);
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00568"/>00568 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;nAtoms&#32;=totalMass&#32;*&#32;CLHEP::Avogadro&#32;/&#32;(&#32;mat-&gt;GetElement(j)-&gt;GetA()&#32;/&#32;(g/mole)&#32;)&#32;*&#32;relativeAbundance[i]&#32;*&#32;massFraction[j];
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00569"/>00569 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\t\t\tIsotope:&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&lt;&lt;&#32;Isotope-&gt;GetName()
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00570"/>00570 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;nAtoms
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00571"/>00571 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;relativeAbundance[i]
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00572"/>00572 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;&quot;</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;Isotope-&gt;GetA()/(g/mole)
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00573"/>00573 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00574"/>00574 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00575"/>00575 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00576"/>00576 &#32;&#32;&#32;&#32;std::cout&lt;&lt;endl;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;finalString&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-2_2src_2_burnup_8cc_source_1l00577"/>00577 }
</programlisting></section>
