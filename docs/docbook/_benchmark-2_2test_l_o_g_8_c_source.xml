<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__benchmark-2_2test_l_o_g_8_c_source" xml:lang="en-US">
<title>testLOG.C</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/testLOG.C</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;TCanvas.h&gt;</emphasis>
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00002"/>00002 <emphasis role="preprocessor">#include&#32;&lt;TH1F.h&gt;</emphasis>
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00003"/>00003 
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00004"/>00004 <emphasis role="keywordtype">int</emphasis>&#32;testLOG()&#32;{
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00005"/>00005 &#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00006"/>00006 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dbl_min&#32;=&#32;1e-9;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00007"/>00007 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;dbl_max&#32;=&#32;1e+8;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00008"/>00008 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;int_nbinsLog&#32;=&#32;1000;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00009"/>00009 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;min_log&#32;=&#32;TMath::Log10(dbl_min);
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00010"/>00010 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;max_log&#32;=&#32;TMath::Log10(dbl_max);
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00011"/>00011 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;bin_width&#32;=&#32;(&#32;max_log&#32;-&#32;min_log)&#32;/(<emphasis role="keywordtype">double</emphasis>)&#32;int_nbinsLog;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00012"/>00012 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;logbins[int_nbinsLog&#32;+&#32;1];
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00013"/>00013 &#32;&#32;&#32;&#32;logbins[0]&#32;=&#32;dbl_min;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;k&#32;=&#32;1;&#32;k&#32;&lt;=&#32;int_nbinsLog;&#32;++k)
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00015"/>00015 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;logbins[k]&#32;=&#32;dbl_min&#32;+&#32;TMath::Power(10,&#32;min_log&#32;+&#32;k&#32;*&#32;bin_width);
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00016"/>00016 &#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00017"/>00017 &#32;&#32;&#32;&#32;std::string&#32;str_CanvaName&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00018"/>00018 &#32;&#32;&#32;&#32;std::string&#32;str_histoName&#32;=&#32;<emphasis role="stringliteral">&quot;test&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00019"/>00019 &#32;&#32;&#32;&#32;std::string&#32;str_drawOption&#32;=&#32;<emphasis role="stringliteral">&quot;hist&#32;e&quot;</emphasis>;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00020"/>00020 &#32;&#32;&#32;&#32;TCanvas*&#32;canvas&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;TCanvas(str_CanvaName.c_str(),str_CanvaName.c_str());
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00021"/>00021 &#32;&#32;&#32;&#32;canvas-&gt;SetLogx();
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00022"/>00022 &#32;&#32;&#32;&#32;canvas-&gt;SetLogy();
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00023"/>00023 &#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00024"/>00024 &#32;&#32;&#32;&#32;TH1D*&#32;histo&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;TH1D();
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00025"/>00025 &#32;&#32;&#32;&#32;histo-&gt;SetBins(int_nbinsLog,&#32;logbins);&#32;<emphasis role="comment">//&#32;Logarithmic&#32;binning</emphasis>
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00026"/>00026 &#32;&#32;&#32;&#32;histo-&gt;SetNameTitle(str_CanvaName.c_str(),&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00027"/>00027 &#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00028"/>00028 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">int</emphasis>&#32;j=1;&#32;j&#32;&lt;&#32;histo-&gt;GetNbinsX();&#32;++j)
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;histo-&gt;Fill(TMath::Power(10,&#32;j*17./1000.),&#32;j);
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00030"/>00030 &#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00031"/>00031 &#32;&#32;&#32;&#32;histo-&gt;Draw(str_drawOption.c_str());
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00032"/>00032 &#32;&#32;&#32;&#32;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00033"/>00033 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__benchmark-2_2test_l_o_g_8_c_source_1l00034"/>00034 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
</programlisting></section>
