<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__b1_stepping_action_8cc_source" xml:lang="en-US">
<title>B1SteppingAction.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/testKeff_v0.1/src/B1SteppingAction.cc</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="__b1_stepping_action_8cc_source_1l00001"/>00001 <emphasis role="comment">//</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00002"/>00002 <emphasis role="comment">//&#32;********************************************************************</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00003"/>00003 <emphasis role="comment">//&#32;*&#32;License&#32;and&#32;Disclaimer&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00004"/>00004 <emphasis role="comment">//&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00005"/>00005 <emphasis role="comment">//&#32;*&#32;The&#32;&#32;Geant4&#32;software&#32;&#32;is&#32;&#32;copyright&#32;of&#32;the&#32;Copyright&#32;Holders&#32;&#32;of&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00006"/>00006 <emphasis role="comment">//&#32;*&#32;the&#32;Geant4&#32;Collaboration.&#32;&#32;It&#32;is&#32;provided&#32;&#32;under&#32;&#32;the&#32;terms&#32;&#32;and&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00007"/>00007 <emphasis role="comment">//&#32;*&#32;conditions&#32;of&#32;the&#32;Geant4&#32;Software&#32;License,&#32;&#32;included&#32;in&#32;the&#32;file&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00008"/>00008 <emphasis role="comment">//&#32;*&#32;LICENSE&#32;and&#32;available&#32;at&#32;&#32;http://cern.ch/geant4/license&#32;.&#32;&#32;These&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;*&#32;include&#32;a&#32;list&#32;of&#32;copyright&#32;holders.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00010"/>00010 <emphasis role="comment">//&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00011"/>00011 <emphasis role="comment">//&#32;*&#32;Neither&#32;the&#32;authors&#32;of&#32;this&#32;software&#32;system,&#32;nor&#32;their&#32;employing&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00012"/>00012 <emphasis role="comment">//&#32;*&#32;institutes,nor&#32;the&#32;agencies&#32;providing&#32;financial&#32;support&#32;for&#32;this&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00013"/>00013 <emphasis role="comment">//&#32;*&#32;work&#32;&#32;make&#32;&#32;any&#32;representation&#32;or&#32;&#32;warranty,&#32;express&#32;or&#32;implied,&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00014"/>00014 <emphasis role="comment">//&#32;*&#32;regarding&#32;&#32;this&#32;&#32;software&#32;system&#32;or&#32;assume&#32;any&#32;liability&#32;for&#32;its&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00015"/>00015 <emphasis role="comment">//&#32;*&#32;use.&#32;&#32;Please&#32;see&#32;the&#32;license&#32;in&#32;the&#32;file&#32;&#32;LICENSE&#32;&#32;and&#32;URL&#32;above&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00016"/>00016 <emphasis role="comment">//&#32;*&#32;for&#32;the&#32;full&#32;disclaimer&#32;and&#32;the&#32;limitation&#32;of&#32;liability.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00017"/>00017 <emphasis role="comment">//&#32;*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00018"/>00018 <emphasis role="comment">//&#32;*&#32;This&#32;&#32;code&#32;&#32;implementation&#32;is&#32;the&#32;result&#32;of&#32;&#32;the&#32;&#32;scientific&#32;and&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00019"/>00019 <emphasis role="comment">//&#32;*&#32;technical&#32;work&#32;of&#32;the&#32;GEANT4&#32;collaboration.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00020"/>00020 <emphasis role="comment">//&#32;*&#32;By&#32;using,&#32;&#32;copying,&#32;&#32;modifying&#32;or&#32;&#32;distributing&#32;the&#32;software&#32;(or&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00021"/>00021 <emphasis role="comment">//&#32;*&#32;any&#32;work&#32;based&#32;&#32;on&#32;the&#32;software)&#32;&#32;you&#32;&#32;agree&#32;&#32;to&#32;acknowledge&#32;its&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00022"/>00022 <emphasis role="comment">//&#32;*&#32;use&#32;&#32;in&#32;&#32;resulting&#32;&#32;scientific&#32;&#32;publications,&#32;&#32;and&#32;indicate&#32;your&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00023"/>00023 <emphasis role="comment">//&#32;*&#32;acceptance&#32;of&#32;all&#32;terms&#32;of&#32;the&#32;Geant4&#32;Software&#32;license.&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00024"/>00024 <emphasis role="comment">//&#32;********************************************************************</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00025"/>00025 <emphasis role="comment">//</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00026"/>00026 <emphasis role="comment">//</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00029"/>00029 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__b1_stepping_action_8hh">B1SteppingAction.hh</link>&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__b1_event_action_8hh">B1EventAction.hh</link>&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__b1_detector_construction_8hh">B1DetectorConstruction.hh</link>&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00033"/>00033 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00034"/>00034 <emphasis role="preprocessor">#include&#32;&quot;G4Step.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00035"/>00035 <emphasis role="preprocessor">#include&#32;&quot;G4Event.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00036"/>00036 <emphasis role="preprocessor">#include&#32;&quot;G4RunManager.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00037"/>00037 <emphasis role="preprocessor">#include&#32;&quot;G4LogicalVolume.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00038"/>00038 <emphasis role="preprocessor">#include&#32;&quot;globals.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00039"/>00039 <emphasis role="preprocessor">#include&#32;&quot;G4PhysicalConstants.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00040"/>00040 <emphasis role="preprocessor">#include&#32;&quot;G4SystemOfUnits.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00041"/>00041 <emphasis role="preprocessor">#include&#32;&quot;TMXkeff.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00042"/>00042 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00043"/>00043 <emphasis role="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00044"/>00044 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00045"/>00045 B1SteppingAction::B1SteppingAction(<link linkend="_class_b1_event_action">B1EventAction</link>*&#32;eventAction)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00046"/>00046 :&#32;G4UserSteppingAction()
<anchor xml:id="__b1_stepping_action_8cc_source_1l00047"/>00047 {
<anchor xml:id="__b1_stepping_action_8cc_source_1l00048"/>00048 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00049"/>00049 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00050"/>00050 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00051"/>00051 <emphasis role="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00052"/>00052 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00053"/>00053 B1SteppingAction::~B1SteppingAction()
<anchor xml:id="__b1_stepping_action_8cc_source_1l00054"/>00054 {
<anchor xml:id="__b1_stepping_action_8cc_source_1l00055"/>00055 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00056"/>00056 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00057"/>00057 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00058"/>00058 <emphasis role="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00059"/>00059 <emphasis role="preprocessor">#include&#32;&quot;G4UnitsTable.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00060"/>00060 <emphasis role="keywordtype">void</emphasis>&#32;B1SteppingAction::UserSteppingAction(<emphasis role="keyword">const</emphasis>&#32;G4Step*&#32;theStep)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00061"/>00061 {
<anchor xml:id="__b1_stepping_action_8cc_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<link linkend="_class_t_m_xkeff_1ae1e9f4676a54a9533cfe95f2d3b38805">TMXkeff::getInstance</link>()-&gt;<link linkend="_class_t_m_xkeff_1a33a603dcd2f64217c3e97ace0e62a110">inUserSteppingAction</link>(theStep);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00063"/>00063 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="comment">/*</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00065"/>00065 <emphasis role="comment">&#32;&#32;&#32;&#32;if(theStep-&gt;GetPostStepPoint()-&gt;GetPhysicalVolume())</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00066"/>00066 <emphasis role="comment">&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00067"/>00067 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4StepPoint*&#32;thePostPoint&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;theStep-&gt;GetPostStepPoint();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00068"/>00068 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4String&#32;processName&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;thePostPoint-&gt;GetProcessDefinedStep()-&gt;GetProcessName();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00069"/>00069 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Track*&#32;theTrack&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;theStep-&gt;GetTrack();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00070"/>00070 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4ParticleDefinition*&#32;particleType&#32;=&#32;theTrack-&gt;GetDefinition();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00071"/>00071 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4String&#32;particleName&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;particleType-&gt;GetParticleName();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00072"/>00072 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00073"/>00073 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;MaterialSigmaF&#32;&#32;&#32;=&#32;GetMaterialXS(theStep,&#32;&quot;nFission&quot;);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00074"/>00074 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;MaterialSimaCap&#32;&#32;=&#32;GetMaterialXS(theStep,&#32;&quot;nCapture&quot;);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00075"/>00075 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;MaterialSigmaAbs&#32;=&#32;MaterialSigmaF</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00076"/>00076 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;MaterialSimaCap;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00077"/>00077 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00078"/>00078 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;MaterialSigmaTot&#32;=&#32;GetMaterialXS(theStep,&#32;&quot;hadElastic&quot;)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00079"/>00079 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;GetMaterialXS(theStep,&#32;&quot;neutronInelastic&quot;)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00080"/>00080 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;MaterialSigmaF</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00081"/>00081 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+&#32;MaterialSimaCap;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00082"/>00082 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00083"/>00083 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(processName&#32;==&#32;&quot;nFission&quot;&#32;||&#32;processName&#32;==&#32;&quot;nCapture&quot;)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00084"/>00084 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00085"/>00085 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMXkeff::getInstance()-&gt;addAbsorption(MaterialSigmaF/MaterialSigmaAbs);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00086"/>00086 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00087"/>00087 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00088"/>00088 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(&#32;theStep-&gt;GetPostStepPoint()-&gt;GetStepStatus()&#32;!=&#32;fGeomBoundary&#32;)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00089"/>00089 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMXkeff::getInstance()-&gt;addCollision(&#32;MaterialSigmaF&#32;/&#32;MaterialSigmaTot);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00090"/>00090 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00091"/>00091 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(MaterialSigmaF&#32;*&#32;theStep-&gt;GetStepLength()&#32;/&#32;cm&#32;!=&#32;0)&#32;std::cout&lt;&lt;MaterialSigmaF&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;theStep-&gt;GetStepLength()&#32;/&#32;cm&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;MaterialSigmaF&#32;*&#32;(theStep-&gt;GetStepLength()&#32;/&#32;cm)&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00092"/>00092 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMXkeff::getInstance()-&gt;addTrackLength(MaterialSigmaF&#32;*&#32;(theStep-&gt;GetStepLength()&#32;/&#32;cm));</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00093"/>00093 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00094"/>00094 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00095"/>00095 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00096"/>00096 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if(processName&#32;==&#32;&quot;nFission&quot;)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00097"/>00097 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00098"/>00098 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;const&#32;std::vector&lt;const&#32;G4Track*&gt;&#32;*secondaries&#32;=&#32;theStep-&gt;GetSecondaryInCurrentStep();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00099"/>00099 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int&#32;countSecNeutrons&#32;=&#32;0;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00100"/>00100 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;for(G4int&#32;i=0;&#32;i&lt;(G4int)secondaries-&gt;size();&#32;++i)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00101"/>00101 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00102"/>00102 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4String&#32;secondary_particleName&#32;=&#32;(*secondaries)[i]-&gt;GetDefinition()-&gt;GetParticleName();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00103"/>00103 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;if&#32;(secondary_particleName&#32;==&#32;&quot;neutron&quot;)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00104"/>00104 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00105"/>00105 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;countSecNeutrons++;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00106"/>00106 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMXkeff::getInstance()-&gt;addFissionSite(thePostPoint-&gt;GetPosition(),&#32;(*secondaries)[i]-&gt;GetMomentumDirection(),&#32;(*secondaries)[i]-&gt;GetKineticEnergy());</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00107"/>00107 <emphasis role="comment"></emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00108"/>00108 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00109"/>00109 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00110"/>00110 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;TMXkeff::getInstance()-&gt;addFission(countSecNeutrons);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00111"/>00111 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;theTrack-&gt;SetTrackStatus(fKillTrackAndSecondaries);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00112"/>00112 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00113"/>00113 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;else&#32;if(processName&#32;==&#32;&quot;RadioactiveDecayBase&quot;)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00114"/>00114 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00115"/>00115 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;theTrack-&gt;SetTrackStatus(fKillTrackAndSecondaries);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00116"/>00116 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00117"/>00117 <emphasis role="comment">&#32;&#32;&#32;&#32;}*/</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00118"/>00118 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00119"/>00119 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00120"/>00120 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00121"/>00121 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00122"/>00122 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00123"/>00123 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00124"/>00124 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00125"/>00125 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00126"/>00126 G4double&#32;B1SteppingAction::GetNu(G4double&#32;en)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00127"/>00127 &#32;&#32;<emphasis role="keyword">using</emphasis>&#32;CLHEP::eV;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00128"/>00128 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00129"/>00129 &#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">int</emphasis>&#32;nump&#32;=&#32;85;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00130"/>00130 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00131"/>00131 &#32;&#32;G4double&#32;nu235[170]&#32;=&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00132"/>00132 &#32;1.000000e-5,2.429850e+0,2.000000e-1,2.429850e+0,3.000000e-1,2.433850e+0,1.500000e+0,2.433850e+0,2.040000e+0,2.405850e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00133"/>00133 &#32;2.500000e+0,2.446650e+0,3.610000e+0,2.449650e+0,4.850000e+0,2.398500e+0,6.390000e+0,2.420920e+0,7.080000e+0,2.423830e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00134"/>00134 &#32;8.790000e+0,2.417800e+0,9.300000e+0,2.417800e+0,1.016000e+1,2.398710e+0,1.239000e+1,2.410770e+0,1.545000e+1,2.410970e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00135"/>00135 &#32;1.610000e+1,2.407750e+0,1.667000e+1,2.417800e+0,1.805000e+1,2.410770e+0,1.930000e+1,2.408760e+0,2.110000e+1,2.417800e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00136"/>00136 &#32;2.295000e+1,2.423830e+0,2.365000e+1,2.420820e+0,2.555000e+1,2.425840e+0,2.648000e+1,2.424830e+0,3.086000e+1,2.383850e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00137"/>00137 &#32;3.207000e+1,2.400750e+0,3.352000e+1,2.409650e+0,3.439000e+1,2.433450e+0,3.520000e+1,2.420550e+0,3.830000e+1,2.415550e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00138"/>00138 &#32;3.941000e+1,2.392750e+0,4.460000e+1,2.358150e+0,5.126000e+1,2.418550e+0,5.222000e+1,2.443350e+0,5.345000e+1,2.456150e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00139"/>00139 &#32;5.506000e+1,2.418550e+0,5.868000e+1,2.359050e+0,7.240000e+1,2.432450e+0,7.457000e+1,2.360050e+0,1.000000e+2,2.433800e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00140"/>00140 &#32;1.000000e+3,2.431810e+0,2.250000e+3,2.427590e+0,7.000000e+3,2.417970e+0,2.000000e+4,2.417390e+0,5.000000e+4,2.418100e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00141"/>00141 &#32;6.000000e+4,2.419220e+0,7.000000e+4,2.422000e+0,8.000000e+4,2.430880e+0,1.700000e+5,2.461380e+0,2.000000e+5,2.468670e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00142"/>00142 &#32;3.000000e+5,2.474470e+0,4.000000e+5,2.478470e+0,6.000000e+5,2.488800e+0,7.000000e+5,2.498080e+0,8.500000e+5,2.514080e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00143"/>00143 &#32;9.000000e+5,2.518670e+0,1.000000e+6,2.529690e+0,1.200000e+6,2.549830e+0,1.600000e+6,2.599670e+0,1.800000e+6,2.623370e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00144"/>00144 &#32;2.400000e+6,2.690480e+0,2.600000e+6,2.720510e+0,3.500000e+6,2.827820e+0,4.000000e+6,2.892750e+0,4.500000e+6,2.967100e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00145"/>00145 &#32;5.000000e+6,3.045350e+0,5.500000e+6,3.132000e+0,6.000000e+6,3.222550e+0,6.500000e+6,3.317200e+0,7.000000e+6,3.405400e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00146"/>00146 &#32;7.500000e+6,3.476410e+0,8.000000e+6,3.544630e+0,9.000000e+6,3.689830e+0,9.500000e+6,3.761160e+0,1.050000e+7,3.899280e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00147"/>00147 &#32;1.200000e+7,4.101020e+0,1.250000e+7,4.169660e+0,1.300000e+7,4.241150e+0,1.450000e+7,4.462290e+0,1.600000e+7,4.690100e+0,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00148"/>00148 &#32;1.650000e+7,4.763750e+0,1.700000e+7,4.833440e+0,1.800000e+7,4.964850e+0,1.900000e+7,5.090170e+0,3.000000e+7,6.249000e+0};
<anchor xml:id="__b1_stepping_action_8cc_source_1l00149"/>00149 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00150"/>00150 &#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;e&#32;=&#32;[&amp;]&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;nu235[2*i];};
<anchor xml:id="__b1_stepping_action_8cc_source_1l00151"/>00151 &#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;nu&#32;=&#32;[&amp;]&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i)&#32;{&#32;<emphasis role="keywordflow">return</emphasis>&#32;nu235[2*i+1];};
<anchor xml:id="__b1_stepping_action_8cc_source_1l00152"/>00152 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00153"/>00153 &#32;&#32;G4double&#32;enev&#32;=&#32;en/eV;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00154"/>00154 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(enev&#32;&lt;=&#32;e(0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;nu(0);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00155"/>00155 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(enev&#32;&gt;=&#32;e(nump-1))&#32;<emphasis role="keywordflow">return</emphasis>&#32;nu(nump-1);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00156"/>00156 &#32;&#32;G4int&#32;ilow&#32;=&#32;0;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00157"/>00157 &#32;&#32;G4int&#32;ihig&#32;=&#32;nump-1;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00158"/>00158 &#32;&#32;G4int&#32;ihal=0;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00159"/>00159 &#32;&#32;<emphasis role="keywordflow">while</emphasis>(ihig-ilow&#32;&gt;&#32;1)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(enev&#32;&gt;&#32;e(ihal=(ilow+ihig)/2))&#32;ilow&#32;=&#32;ihal;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00161"/>00161 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;ihig&#32;=&#32;ihal;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00162"/>00162 &#32;&#32;<emphasis role="keywordflow">if</emphasis>(enev&#32;&lt;&#32;e(ilow)&#32;||&#32;enev&#32;&gt;&#32;e(ihig))&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;AAAAAAAAAAAAAAGH&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00163"/>00163 <emphasis role="comment">//&#32;&#32;std::cout&lt;&lt;enev&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;nu(ilow)&#32;+&#32;(nu(ihig)-nu(ilow))&#32;*&#32;(enev&#32;-&#32;e(ilow))&#32;/&#32;(e(ihig)-e(ilow))&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00164"/>00164 &#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;nu(ilow)&#32;+&#32;(nu(ihig)-nu(ilow))&#32;*&#32;(enev&#32;-&#32;e(ilow))&#32;/&#32;(e(ihig)-e(ilow));
<anchor xml:id="__b1_stepping_action_8cc_source_1l00165"/>00165 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00166"/>00166 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00167"/>00167 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00168"/>00168 <emphasis role="preprocessor">#include&#32;&quot;G4HadronicProcess.hh&quot;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00169"/>00169 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00170"/>00170 <emphasis role="keyword">enum</emphasis>&#32;reactions
<anchor xml:id="__b1_stepping_action_8cc_source_1l00171"/>00171 {
<anchor xml:id="__b1_stepping_action_8cc_source_1l00172"/>00172 &#32;&#32;&#32;&#32;nFission,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00173"/>00173 &#32;&#32;&#32;&#32;nCapture,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00174"/>00174 &#32;&#32;&#32;&#32;hadElastic,
<anchor xml:id="__b1_stepping_action_8cc_source_1l00175"/>00175 &#32;&#32;&#32;&#32;neutronInelastic
<anchor xml:id="__b1_stepping_action_8cc_source_1l00176"/>00176 };
<anchor xml:id="__b1_stepping_action_8cc_source_1l00177"/>00177 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00178"/>00178 G4double&#32;B1SteppingAction::GetMaterialXS(<emphasis role="keyword">const</emphasis>&#32;G4Step&#32;*&#32;theStep,&#32;std::string&#32;XSreaction)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00179"/>00179 {
<anchor xml:id="__b1_stepping_action_8cc_source_1l00180"/>00180 &#32;&#32;&#32;&#32;reactions&#32;nFission;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00181"/>00181 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4DynamicParticle*&#32;particleDyn&#32;=&#32;theStep-&gt;GetTrack()-&gt;GetDynamicParticle();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00182"/>00182 &#32;&#32;&#32;&#32;particleDyn&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),
<anchor xml:id="__b1_stepping_action_8cc_source_1l00183"/>00183 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;particleDyn-&gt;GetMomentumDirection(),
<anchor xml:id="__b1_stepping_action_8cc_source_1l00184"/>00184 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;theStep-&gt;GetPreStepPoint()-&gt;GetKineticEnergy());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00185"/>00185 &#32;&#32;&#32;&#32;G4Material&#32;*mat&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00186"/>00186 &#32;&#32;&#32;&#32;G4ParticleDefinition&#32;*particle&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;G4ParticleTable::GetParticleTable()-&gt;FindParticle(<emphasis role="stringliteral">&quot;neutron&quot;</emphasis>);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00187"/>00187 &#32;&#32;&#32;&#32;G4HadronicProcess&#32;*&#32;process&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;=&#32;(G4HadronicProcess&#32;*)particle-&gt;GetProcessManager()-&gt;GetProcess(XSreaction);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00188"/>00188 &#32;&#32;&#32;&#32;<emphasis role="keyword">delete</emphasis>&#32;particleDyn;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00189"/>00189 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;process-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;mat)*cm;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00190"/>00190 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00191"/>00191 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00192"/>00192 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00193"/>00193 G4double&#32;B1SteppingAction::GetMaterialFissionCrossSection(<emphasis role="keyword">const</emphasis>&#32;G4Step&#32;*&#32;theStep)&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;une&#32;DynamicParticle</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00195"/>00195 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00196"/>00196 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4DynamicParticle*&#32;&#32;&#32;&#32;particleDyn&#32;=&#32;theStep-&gt;GetTrack()-&gt;GetDynamicParticle();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00197"/>00197 &#32;&#32;&#32;&#32;G4StepPoint&#32;PreStep&#32;=&#32;*theStep-&gt;GetPreStepPoint();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00198"/>00198 &#32;&#32;&#32;&#32;particleDyn&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),&#32;particleDyn-&gt;GetMomentumDirection(),&#32;PreStep.GetKineticEnergy());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00199"/>00199 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00200"/>00200 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;vérifie&#32;l&apos;énergie&#32;cinltique&#32;non&#32;nulle&#32;sinon&#32;on&#32;en&#32;défini&#32;une&#32;autre</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00201"/>00201 &#32;&#32;&#32;&#32;G4Track&#32;theTrack&#32;=&#32;*theStep-&gt;GetTrack();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00202"/>00202 <emphasis role="comment">//&#32;&#32;&#32;&#32;if(particleDyn-&gt;GetKineticEnergy()&#32;==&#32;0)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00203"/>00203 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00204"/>00204 &#32;&#32;&#32;&#32;G4double&#32;matCrossSection&#32;=&#32;0;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00205"/>00205 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00206"/>00206 &#32;&#32;&#32;&#32;G4Material&#32;*mat&#32;=&#32;theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00207"/>00207 &#32;&#32;&#32;&#32;G4int&#32;nElements&#32;=&#32;mat-&gt;GetNumberOfElements();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00208"/>00208 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00209"/>00209 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00210"/>00210 &#32;&#32;&#32;&#32;G4HadronicProcess*&#32;fProcessFis&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00211"/>00211 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00212"/>00212 &#32;&#32;&#32;&#32;G4ParticleDefinition&#32;*particle&#32;=&#32;G4ParticleTable::GetParticleTable()-&gt;FindParticle(<emphasis role="stringliteral">&quot;neutron&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;G4Neutron::Definition();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00213"/>00213 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00214"/>00214 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;le&#32;process&#32;manager&#32;pour&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00215"/>00215 &#32;&#32;&#32;&#32;G4ProcessManager&#32;*pManager&#32;=&#32;particle-&gt;GetProcessManager();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00216"/>00216 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;liste&#32;des&#32;processus</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00217"/>00217 &#32;&#32;&#32;&#32;G4ProcessVector&#32;*pList&#32;=&#32;pManager-&gt;GetProcessList();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00218"/>00218 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;boucle&#32;pour&#32;trouver&#32;le&#32;bon&#32;process&#32;(je&#32;pense&#32;qu&apos;il&#32;faut&#32;les&#32;imprimer&#32;une&#32;fois&#32;pour&#32;voir)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00219"/>00219 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4VProcess&#32;*pp&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00220"/>00220 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00221"/>00221 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;idx&#32;=&#32;0;&#32;idx&#32;&lt;&#32;pList-&gt;size();&#32;idx++)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00222"/>00222 &#32;&#32;&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00223"/>00223 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pp&#32;=&#32;(*pList)[idx];
<anchor xml:id="__b1_stepping_action_8cc_source_1l00224"/>00224 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4int&#32;ptype&#32;=&#32;pp-&gt;GetProcessType();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00225"/>00225 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&lt;&lt;pp-&gt;GetProcessName()&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;pp-&gt;GetProcessType()&lt;&lt;&#32;&quot;&#32;&quot;&#32;&lt;&lt;&#32;pp-&gt;GetProcessSubType()&#32;&lt;&lt;&#32;&quot;&#32;&quot;&lt;&lt;&#32;pp-&gt;GetProcessSubType()&lt;&lt;std::endl;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ptype&#32;==&#32;4&#32;)&#32;{&#32;<emphasis role="comment">//&#32;Reaction&#32;of&#32;a&#32;neutron&#32;with&#32;something&#32;else&#32;(no&#32;surface,&#32;parallel&#32;world,&#32;etc.)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;&#32;&#32;&#32;&#32;((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;hadElastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00228"/>00228 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessElas&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00230"/>00230 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;neutronInelastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00231"/>00231 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessInel&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nCapture&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00234"/>00234 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessCap&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00235"/>00235 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nFission&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessFis&#32;=&#32;(G4HadronicProcess&#32;*)pp;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n&#32;!!&#32;WARNING&#32;!!&#32;\n&#32;!!&#32;At&#32;least&#32;one&#32;hadronic&#32;process&#32;has&#32;not&#32;been&#32;taken&#32;into&#32;account&#32;in&#32;SteppingAction::GetNeutronHadronicProcesses&#32;!!&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;[%s,%d,%d]&quot;</emphasis>,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)pp-&gt;GetProcessName(),&#32;ptype,&#32;pp-&gt;GetProcessSubType());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00244"/>00244 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00245"/>00245 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00246"/>00246 &#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(G4int&#32;i=0;&#32;i&lt;nElements;&#32;++i)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matCrossSection&#32;+=&#32;&#32;*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()&#32;/&#32;(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()&#32;*&#32;(fProcessFis-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;(*mat-&gt;GetElementVector())[i],&#32;mat)/cm2);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00248"/>00248 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00249"/>00249 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;section&#32;efficace</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00250"/>00250 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;matCrossSection&#32;*&#32;mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00251"/>00251 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;return&#32;fProcessFis-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;mat)/cm2;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00252"/>00252 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00253"/>00253 <emphasis role="comment">//....oooOO0OOooo........oooOO0OOooo........oooOO0OOooo........oooOO0OOooo......</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00254"/>00254 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00255"/>00255 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00256"/>00256 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00257"/>00257 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00258"/>00258 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00259"/>00259 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00260"/>00260 G4double&#32;B1SteppingAction::GetMaterialElasticCrossSection(<emphasis role="keyword">const</emphasis>&#32;G4Step&#32;*&#32;theStep)&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00261"/>00261 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;une&#32;DynamicParticle</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00262"/>00262 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4DynamicParticle*&#32;&#32;&#32;&#32;particleDyn&#32;=&#32;theStep-&gt;GetTrack()-&gt;GetDynamicParticle();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00263"/>00263 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;vérifie&#32;l&apos;énergie&#32;cinltique&#32;non&#32;nulle&#32;sinon&#32;on&#32;en&#32;défini&#32;une&#32;autre</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00264"/>00264 &#32;&#32;&#32;&#32;G4Track&#32;theTrack&#32;=&#32;*theStep-&gt;GetTrack();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00265"/>00265 &#32;&#32;&#32;&#32;G4StepPoint&#32;PerStep&#32;=&#32;*theStep-&gt;GetPreStepPoint();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(particleDyn-&gt;GetKineticEnergy()&#32;==&#32;0)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;particleDyn&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),&#32;particleDyn-&gt;GetMomentumDirection(),&#32;PerStep.GetKineticEnergy());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00268"/>00268 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00269"/>00269 &#32;&#32;&#32;&#32;G4double&#32;matCrossSection&#32;=&#32;0;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00270"/>00270 &#32;&#32;&#32;&#32;G4Material&#32;*mat&#32;=&#32;theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00271"/>00271 &#32;&#32;&#32;&#32;G4int&#32;nElements&#32;=&#32;mat-&gt;GetNumberOfElements();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00272"/>00272 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00273"/>00273 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00274"/>00274 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00275"/>00275 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00276"/>00276 &#32;&#32;&#32;&#32;G4HadronicProcess*&#32;fProcessElas&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00277"/>00277 &#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00278"/>00278 &#32;&#32;&#32;&#32;G4ParticleDefinition&#32;*particle&#32;=&#32;G4ParticleTable::GetParticleTable()-&gt;FindParticle(<emphasis role="stringliteral">&quot;neutron&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;G4Neutron::Definition();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00279"/>00279 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00280"/>00280 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;le&#32;process&#32;manager&#32;pour&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00281"/>00281 &#32;&#32;&#32;&#32;G4ProcessManager&#32;*pManager&#32;=&#32;particle-&gt;GetProcessManager();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00282"/>00282 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;liste&#32;des&#32;processus</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00283"/>00283 &#32;&#32;&#32;&#32;G4ProcessVector&#32;*pList&#32;=&#32;pManager-&gt;GetProcessList();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00284"/>00284 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;boucle&#32;pour&#32;trouver&#32;le&#32;bon&#32;process&#32;(je&#32;pense&#32;qu&apos;il&#32;faut&#32;les&#32;imprimer&#32;une&#32;fois&#32;pour&#32;voir)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00285"/>00285 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4VProcess&#32;*pp&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00286"/>00286 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00287"/>00287 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;idx&#32;=&#32;0;&#32;idx&#32;&lt;&#32;pList-&gt;size();&#32;idx++)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00288"/>00288 &#32;&#32;&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pp&#32;=&#32;(*pList)[idx];
<anchor xml:id="__b1_stepping_action_8cc_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4int&#32;ptype&#32;=&#32;pp-&gt;GetProcessType();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ptype&#32;==&#32;4&#32;)&#32;{&#32;<emphasis role="comment">//&#32;Reaction&#32;of&#32;a&#32;neutron&#32;with&#32;something&#32;else&#32;(no&#32;surface,&#32;parallel&#32;world,&#32;etc.)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00292"/>00292 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;&#32;&#32;&#32;&#32;((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;hadElastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00293"/>00293 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessElas&#32;=&#32;(G4HadronicProcess&#32;*)pp;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00294"/>00294 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00295"/>00295 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;neutronInelastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00296"/>00296 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessInel&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00297"/>00297 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00298"/>00298 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nCapture&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00299"/>00299 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessCap&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00300"/>00300 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00301"/>00301 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nFission&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00302"/>00302 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessFis&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n&#32;!!&#32;WARNING&#32;!!&#32;\n&#32;!!&#32;At&#32;least&#32;one&#32;hadronic&#32;process&#32;has&#32;not&#32;been&#32;taken&#32;into&#32;account&#32;in&#32;SteppingAction::GetNeutronHadronicProcesses&#32;!!&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00306"/>00306 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;[%s,%d,%d]&quot;</emphasis>,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)pp-&gt;GetProcessName(),&#32;ptype,&#32;pp-&gt;GetProcessSubType());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00310"/>00310 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00311"/>00311 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00312"/>00312 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00313"/>00313 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00314"/>00314 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00315"/>00315 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00316"/>00316 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(G4int&#32;i=0;&#32;i&lt;nElements;&#32;++i)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00317"/>00317 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matCrossSection&#32;+=&#32;nAtomsPerVolume[i]/(G4double)TotNbAtomsPerVolume&#32;*&#32;(fProcessElas-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;(*mat-&gt;GetElementVector())[i],&#32;mat)/cm2);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matCrossSection&#32;+=&#32;*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()&#32;/&#32;(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()&#32;*&#32;(fProcessElas-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;(*mat-&gt;GetElementVector())[i],&#32;mat)/cm2);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00319"/>00319 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00320"/>00320 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;section&#32;efficace</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00321"/>00321 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;matCrossSection*&#32;mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00322"/>00322 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;return&#32;fProcessElas-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;mat/*thePrePV-&gt;GetLogicalVolume()-&gt;GetMaterial()*/);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00323"/>00323 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00324"/>00324 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00325"/>00325 G4double&#32;B1SteppingAction::GetMaterialInelastCrossSection(<emphasis role="keyword">const</emphasis>&#32;G4Step&#32;*&#32;theStep)&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00326"/>00326 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;une&#32;DynamicParticle</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00327"/>00327 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4DynamicParticle*&#32;&#32;&#32;&#32;particleDyn&#32;=&#32;theStep-&gt;GetTrack()-&gt;GetDynamicParticle();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00328"/>00328 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;vérifie&#32;l&apos;énergie&#32;cinltique&#32;non&#32;nulle&#32;sinon&#32;on&#32;en&#32;défini&#32;une&#32;autre</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00329"/>00329 &#32;&#32;&#32;&#32;G4Track&#32;theTrack&#32;=&#32;*theStep-&gt;GetTrack();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00330"/>00330 &#32;&#32;&#32;&#32;G4StepPoint&#32;PerStep&#32;=&#32;*theStep-&gt;GetPreStepPoint();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00331"/>00331 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(particleDyn-&gt;GetKineticEnergy()&#32;==&#32;0)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00332"/>00332 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;particleDyn&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),&#32;particleDyn-&gt;GetMomentumDirection(),&#32;PerStep.GetKineticEnergy());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00333"/>00333 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00334"/>00334 &#32;&#32;&#32;&#32;G4double&#32;matCrossSection&#32;=&#32;0;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00335"/>00335 &#32;&#32;&#32;&#32;G4Material&#32;*mat&#32;=&#32;theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00336"/>00336 &#32;&#32;&#32;&#32;G4int&#32;nElements&#32;=&#32;mat-&gt;GetNumberOfElements();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00337"/>00337 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00338"/>00338 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00339"/>00339 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00340"/>00340 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00341"/>00341 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00342"/>00342 &#32;&#32;&#32;&#32;G4HadronicProcess*&#32;fProcessInel&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00343"/>00343 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00344"/>00344 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00345"/>00345 &#32;&#32;&#32;&#32;G4ParticleDefinition&#32;*particle&#32;=&#32;G4ParticleTable::GetParticleTable()-&gt;FindParticle(<emphasis role="stringliteral">&quot;neutron&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;G4Neutron::Definition();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00346"/>00346 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00347"/>00347 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;le&#32;process&#32;manager&#32;pour&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00348"/>00348 &#32;&#32;&#32;&#32;G4ProcessManager&#32;*pManager&#32;=&#32;particle-&gt;GetProcessManager();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00349"/>00349 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;liste&#32;des&#32;processus</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00350"/>00350 &#32;&#32;&#32;&#32;G4ProcessVector&#32;*pList&#32;=&#32;pManager-&gt;GetProcessList();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00351"/>00351 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;boucle&#32;pour&#32;trouver&#32;le&#32;bon&#32;process&#32;(je&#32;pense&#32;qu&apos;il&#32;faut&#32;les&#32;imprimer&#32;une&#32;fois&#32;pour&#32;voir)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00352"/>00352 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4VProcess&#32;*pp&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00353"/>00353 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00354"/>00354 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;idx&#32;=&#32;0;&#32;idx&#32;&lt;&#32;pList-&gt;size();&#32;idx++)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00355"/>00355 &#32;&#32;&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pp&#32;=&#32;(*pList)[idx];
<anchor xml:id="__b1_stepping_action_8cc_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4int&#32;ptype&#32;=&#32;pp-&gt;GetProcessType();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ptype&#32;==&#32;4&#32;)&#32;{&#32;<emphasis role="comment">//&#32;Reaction&#32;of&#32;a&#32;neutron&#32;with&#32;something&#32;else&#32;(no&#32;surface,&#32;parallel&#32;world,&#32;etc.)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;&#32;&#32;&#32;&#32;((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;hadElastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00360"/>00360 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessElas&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00361"/>00361 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00362"/>00362 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;neutronInelastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00363"/>00363 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessInel&#32;=&#32;(G4HadronicProcess&#32;*)pp;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00364"/>00364 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00365"/>00365 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nCapture&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00366"/>00366 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessCap&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00367"/>00367 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00368"/>00368 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nFission&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00369"/>00369 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessFis&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n&#32;!!&#32;WARNING&#32;!!&#32;\n&#32;!!&#32;At&#32;least&#32;one&#32;hadronic&#32;process&#32;has&#32;not&#32;been&#32;taken&#32;into&#32;account&#32;in&#32;SteppingAction::GetNeutronHadronicProcesses&#32;!!&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;[%s,%d,%d]&quot;</emphasis>,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)pp-&gt;GetProcessName(),&#32;ptype,&#32;pp-&gt;GetProcessSubType());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00377"/>00377 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00378"/>00378 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00379"/>00379 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00380"/>00380 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00381"/>00381 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00382"/>00382 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00383"/>00383 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(G4int&#32;i=0;&#32;i&lt;nElements;&#32;++i)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00384"/>00384 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matCrossSection&#32;+=&#32;nAtomsPerVolume[i]/(G4double)TotNbAtomsPerVolume&#32;*&#32;(fProcessInel-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;(*mat-&gt;GetElementVector())[i],&#32;mat)/cm2);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00385"/>00385 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matCrossSection&#32;+=&#32;*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()&#32;/&#32;(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()&#32;*&#32;(fProcessInel-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;(*mat-&gt;GetElementVector())[i],&#32;mat)/cm2);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00386"/>00386 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00387"/>00387 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00388"/>00388 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;section&#32;efficace</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00389"/>00389 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;matCrossSection*&#32;mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00390"/>00390 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;return&#32;fProcessInel-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;mat)/cm2;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00391"/>00391 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00392"/>00392 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00393"/>00393 G4double&#32;B1SteppingAction::GetMaterialCaptureCrossSection(<emphasis role="keyword">const</emphasis>&#32;G4Step&#32;*&#32;theStep)&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00394"/>00394 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;une&#32;DynamicParticle</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00395"/>00395 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4DynamicParticle*&#32;&#32;&#32;&#32;particleDyn&#32;=&#32;theStep-&gt;GetTrack()-&gt;GetDynamicParticle();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00396"/>00396 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;On&#32;vérifie&#32;l&apos;énergie&#32;cinltique&#32;non&#32;nulle&#32;sinon&#32;on&#32;en&#32;défini&#32;une&#32;autre</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00397"/>00397 &#32;&#32;&#32;&#32;G4Track&#32;theTrack&#32;=&#32;*theStep-&gt;GetTrack();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00398"/>00398 &#32;&#32;&#32;&#32;G4StepPoint&#32;PerStep&#32;=&#32;*theStep-&gt;GetPreStepPoint();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00399"/>00399 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(particleDyn-&gt;GetKineticEnergy()&#32;==&#32;0)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;particleDyn&#32;=&#32;<emphasis role="keyword">new</emphasis>&#32;G4DynamicParticle(particleDyn-&gt;GetParticleDefinition(),&#32;particleDyn-&gt;GetMomentumDirection(),&#32;PerStep.GetKineticEnergy());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00401"/>00401 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00402"/>00402 &#32;&#32;&#32;&#32;G4double&#32;matCrossSection&#32;=&#32;0;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00403"/>00403 &#32;&#32;&#32;&#32;G4Material&#32;*mat&#32;=&#32;theStep-&gt;GetPostStepPoint()-&gt;GetMaterial();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00404"/>00404 &#32;&#32;&#32;&#32;G4int&#32;nElements&#32;=&#32;mat-&gt;GetNumberOfElements();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00405"/>00405 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00406"/>00406 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00407"/>00407 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00408"/>00408 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00409"/>00409 &#32;&#32;&#32;&#32;G4HadronicProcess*&#32;fProcessCap&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00410"/>00410 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00411"/>00411 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00412"/>00412 &#32;&#32;&#32;&#32;G4ParticleDefinition&#32;*particle&#32;=&#32;G4ParticleTable::GetParticleTable()-&gt;FindParticle(<emphasis role="stringliteral">&quot;neutron&quot;</emphasis>);&#32;<emphasis role="comment">//&#32;G4Neutron::Definition();</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00413"/>00413 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00414"/>00414 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;le&#32;process&#32;manager&#32;pour&#32;la&#32;particule</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00415"/>00415 &#32;&#32;&#32;&#32;G4ProcessManager&#32;*pManager&#32;=&#32;particle-&gt;GetProcessManager();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00416"/>00416 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;liste&#32;des&#32;processus</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00417"/>00417 &#32;&#32;&#32;&#32;G4ProcessVector&#32;*pList&#32;=&#32;pManager-&gt;GetProcessList();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00418"/>00418 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;boucle&#32;pour&#32;trouver&#32;le&#32;bon&#32;process&#32;(je&#32;pense&#32;qu&apos;il&#32;faut&#32;les&#32;imprimer&#32;une&#32;fois&#32;pour&#32;voir)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00419"/>00419 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4VProcess&#32;*pp&#32;=&#32;<emphasis role="keyword">nullptr</emphasis>;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00420"/>00420 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00421"/>00421 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;idx&#32;=&#32;0;&#32;idx&#32;&lt;&#32;pList-&gt;size();&#32;idx++)
<anchor xml:id="__b1_stepping_action_8cc_source_1l00422"/>00422 &#32;&#32;&#32;&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;pp&#32;=&#32;(*pList)[idx];
<anchor xml:id="__b1_stepping_action_8cc_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4int&#32;ptype&#32;=&#32;pp-&gt;GetProcessType();
<anchor xml:id="__b1_stepping_action_8cc_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;ptype&#32;==&#32;4&#32;)&#32;{&#32;<emphasis role="comment">//&#32;Reaction&#32;of&#32;a&#32;neutron&#32;with&#32;something&#32;else&#32;(no&#32;surface,&#32;parallel&#32;world,&#32;etc.)</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;&#32;&#32;&#32;&#32;((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;hadElastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00427"/>00427 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessElas&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00429"/>00429 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;neutronInelastic&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00430"/>00430 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessInel&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00431"/>00431 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00432"/>00432 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nCapture&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessCap&#32;=&#32;(G4HadronicProcess&#32;*)pp;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">if</emphasis>((G4String)pp-&gt;GetProcessName()&#32;==&#32;<emphasis role="stringliteral">&quot;nFission&quot;</emphasis>)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00436"/>00436 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fProcessFis&#32;=&#32;(G4HadronicProcess&#32;*)pp;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00437"/>00437 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00438"/>00438 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00439"/>00439 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n\n&#32;!!&#32;WARNING&#32;!!&#32;\n&#32;!!&#32;At&#32;least&#32;one&#32;hadronic&#32;process&#32;has&#32;not&#32;been&#32;taken&#32;into&#32;account&#32;in&#32;SteppingAction::GetNeutronHadronicProcesses&#32;!!&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00440"/>00440 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printf(<emphasis role="stringliteral">&quot;&#32;[%s,%d,%d]&quot;</emphasis>,&#32;(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*)pp-&gt;GetProcessName(),&#32;ptype,&#32;pp-&gt;GetProcessSubType());
<anchor xml:id="__b1_stepping_action_8cc_source_1l00441"/>00441 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00442"/>00442 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00443"/>00443 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00444"/>00444 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00445"/>00445 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00446"/>00446 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00447"/>00447 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00448"/>00448 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00449"/>00449 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00450"/>00450 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(G4int&#32;i=0;&#32;i&lt;nElements;&#32;++i)&#32;{
<anchor xml:id="__b1_stepping_action_8cc_source_1l00451"/>00451 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matCrossSection&#32;+=&#32;nAtomsPerVolume[i]/(G4double)TotNbAtomsPerVolume&#32;*&#32;(fProcessCap-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;(*mat-&gt;GetElementVector())[i],&#32;mat)/cm2);</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00452"/>00452 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;matCrossSection&#32;+=&#32;*(*mat-&gt;GetElementVector())[i]-&gt;GetRelativeAbundanceVector()&#32;/&#32;(*mat-&gt;GetElementVector())[i]-&gt;GetAtomicMassAmu()&#32;*&#32;(fProcessCap-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;(*mat-&gt;GetElementVector())[i],&#32;mat)/cm2);
<anchor xml:id="__b1_stepping_action_8cc_source_1l00453"/>00453 &#32;&#32;&#32;&#32;}
<anchor xml:id="__b1_stepping_action_8cc_source_1l00454"/>00454 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00455"/>00455 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;on&#32;recupere&#32;la&#32;section&#32;efficace</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00456"/>00456 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;matCrossSection*&#32;mat-&gt;GetDensity()/(g/cm3)*6.02214076e+23;
<anchor xml:id="__b1_stepping_action_8cc_source_1l00457"/>00457 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;return&#32;fProcessCap-&gt;GetCrossSectionDataStore()-&gt;GetCrossSection(particleDyn,&#32;mat)/cm2;</emphasis>
<anchor xml:id="__b1_stepping_action_8cc_source_1l00458"/>00458 }
<anchor xml:id="__b1_stepping_action_8cc_source_1l00459"/>00459 
<anchor xml:id="__b1_stepping_action_8cc_source_1l00460"/>00460 
</programlisting></section>
