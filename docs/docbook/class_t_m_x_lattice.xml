<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_t_m_x_lattice" xml:lang="en-US">
<title>TMXLattice Class Reference</title>
<indexterm><primary>TMXLattice</primary></indexterm>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1a43221c32febaab0a7cdf62f854a12b75">setLatticeMap</link> (std::string latticeMapFile)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1ad79fd24d255bdca45c880e7f9afd0a62">setHexagonalLattice</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1adf7c4b7c7600ce5349f4c60f9f4c6e9f">setSquareLattice</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1aed4c0bbf5a3514470d820c84f5c1d0a9">setPitch</link> (G4double pitch)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1aa861f60f7deb8ab3250707a7167c02d3">setMotherVolume</link> (G4LogicalVolume *motherVolume)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1a98aa98178817a07a7567bfdf1aebce6d">addDaughterVolume</link> (std::string elementId, G4LogicalVolume *daughterVolume)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1a53b8fd8649c195a0695056800aafe62a">addDaughterAction</link> (std::string elementId, std::function&lt; void(double)&gt; action)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1a8bed4cedd1ae45375aa66548d3aa41a4">setElementRotation</link> (G4RotationMatrix *elementRotation)</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1ad0e330788843df3b1d41145cad899a28">setElementTranslation</link> (G4ThreeVector elementTranslation)</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_t_m_x_lattice_1a874292bc6205ea20988c08a894867ced">getLatticeType</link> ()</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_lattice_1ab94cb481c23ae14db96f8e7ef5523ef2">placeLattice</link> (bool overlap)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a43221c32febaab0a7cdf62f854a12b75"/>void <emphasis role="strong">setLatticeMap</emphasis> (std::string latticeMapFile)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad79fd24d255bdca45c880e7f9afd0a62"/>void <emphasis role="strong">setHexagonalLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1adf7c4b7c7600ce5349f4c60f9f4c6e9f"/>void <emphasis role="strong">setSquareLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aed4c0bbf5a3514470d820c84f5c1d0a9"/>void <emphasis role="strong">setPitch</emphasis> (G4double pitch)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aa861f60f7deb8ab3250707a7167c02d3"/>void <emphasis role="strong">setMotherVolume</emphasis> (G4LogicalVolume *motherVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a98aa98178817a07a7567bfdf1aebce6d"/>void <emphasis role="strong">addDaughterVolume</emphasis> (std::string elementId, G4LogicalVolume *daughterVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a53b8fd8649c195a0695056800aafe62a"/>void <emphasis role="strong">addDaughterAction</emphasis> (std::string elementId, std::function&lt; void(double)&gt; action)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a8bed4cedd1ae45375aa66548d3aa41a4"/>void <emphasis role="strong">setElementRotation</emphasis> (G4RotationMatrix *elementRotation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad0e330788843df3b1d41145cad899a28"/>void <emphasis role="strong">setElementTranslation</emphasis> (G4ThreeVector elementTranslation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a874292bc6205ea20988c08a894867ced"/>std::string <emphasis role="strong">getLatticeType</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ab94cb481c23ae14db96f8e7ef5523ef2"/>void <emphasis role="strong">placeLattice</emphasis> (bool overlap)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a43221c32febaab0a7cdf62f854a12b75"/>void <emphasis role="strong">setLatticeMap</emphasis> (std::string latticeMapFile)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad79fd24d255bdca45c880e7f9afd0a62"/>void <emphasis role="strong">setHexagonalLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1adf7c4b7c7600ce5349f4c60f9f4c6e9f"/>void <emphasis role="strong">setSquareLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aed4c0bbf5a3514470d820c84f5c1d0a9"/>void <emphasis role="strong">setPitch</emphasis> (G4double pitch)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aa861f60f7deb8ab3250707a7167c02d3"/>void <emphasis role="strong">setMotherVolume</emphasis> (G4LogicalVolume *motherVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a98aa98178817a07a7567bfdf1aebce6d"/>void <emphasis role="strong">addDaughterVolume</emphasis> (std::string elementId, G4LogicalVolume *daughterVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a53b8fd8649c195a0695056800aafe62a"/>void <emphasis role="strong">addDaughterAction</emphasis> (std::string elementId, std::function&lt; void(double)&gt; action)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a8bed4cedd1ae45375aa66548d3aa41a4"/>void <emphasis role="strong">setElementRotation</emphasis> (G4RotationMatrix *elementRotation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad0e330788843df3b1d41145cad899a28"/>void <emphasis role="strong">setElementTranslation</emphasis> (G4ThreeVector elementTranslation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a874292bc6205ea20988c08a894867ced"/>std::string <emphasis role="strong">getLatticeType</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ab94cb481c23ae14db96f8e7ef5523ef2"/>void <emphasis role="strong">placeLattice</emphasis> (bool overlap)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a43221c32febaab0a7cdf62f854a12b75"/>void <emphasis role="strong">setLatticeMap</emphasis> (std::string latticeMapFile)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad79fd24d255bdca45c880e7f9afd0a62"/>void <emphasis role="strong">setHexagonalLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1adf7c4b7c7600ce5349f4c60f9f4c6e9f"/>void <emphasis role="strong">setSquareLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aed4c0bbf5a3514470d820c84f5c1d0a9"/>void <emphasis role="strong">setPitch</emphasis> (G4double pitch)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aa861f60f7deb8ab3250707a7167c02d3"/>void <emphasis role="strong">setMotherVolume</emphasis> (G4LogicalVolume *motherVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a98aa98178817a07a7567bfdf1aebce6d"/>void <emphasis role="strong">addDaughterVolume</emphasis> (std::string elementId, G4LogicalVolume *daughterVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a53b8fd8649c195a0695056800aafe62a"/>void <emphasis role="strong">addDaughterAction</emphasis> (std::string elementId, std::function&lt; void(double)&gt; action)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a8bed4cedd1ae45375aa66548d3aa41a4"/>void <emphasis role="strong">setElementRotation</emphasis> (G4RotationMatrix *elementRotation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad0e330788843df3b1d41145cad899a28"/>void <emphasis role="strong">setElementTranslation</emphasis> (G4ThreeVector elementTranslation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a874292bc6205ea20988c08a894867ced"/>std::string <emphasis role="strong">getLatticeType</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ab94cb481c23ae14db96f8e7ef5523ef2"/>void <emphasis role="strong">placeLattice</emphasis> (bool overlap)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a43221c32febaab0a7cdf62f854a12b75"/>void <emphasis role="strong">setLatticeMap</emphasis> (std::string latticeMapFile)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad79fd24d255bdca45c880e7f9afd0a62"/>void <emphasis role="strong">setHexagonalLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1adf7c4b7c7600ce5349f4c60f9f4c6e9f"/>void <emphasis role="strong">setSquareLattice</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aed4c0bbf5a3514470d820c84f5c1d0a9"/>void <emphasis role="strong">setPitch</emphasis> (G4double pitch)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1aa861f60f7deb8ab3250707a7167c02d3"/>void <emphasis role="strong">setMotherVolume</emphasis> (G4LogicalVolume *motherVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a98aa98178817a07a7567bfdf1aebce6d"/>void <emphasis role="strong">addDaughterVolume</emphasis> (std::string elementId, G4LogicalVolume *daughterVolume)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a53b8fd8649c195a0695056800aafe62a"/>void <emphasis role="strong">addDaughterAction</emphasis> (std::string elementId, std::function&lt; void(double)&gt; action)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a8bed4cedd1ae45375aa66548d3aa41a4"/>void <emphasis role="strong">setElementRotation</emphasis> (G4RotationMatrix *elementRotation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ad0e330788843df3b1d41145cad899a28"/>void <emphasis role="strong">setElementTranslation</emphasis> (G4ThreeVector elementTranslation)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1a874292bc6205ea20988c08a894867ced"/>std::string <emphasis role="strong">getLatticeType</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_lattice_1ab94cb481c23ae14db96f8e7ef5523ef2"/>void <emphasis role="strong">placeLattice</emphasis> (bool overlap)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__benchmark-1_2include_2_t_m_x_lattice_8hh_source_1l00029">29</link> of file <link linkend="__benchmark-1_2include_2_t_m_x_lattice_8hh_source">TMXLattice.hh</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_t_m_x_lattice_1a2f68f3bde0da4c07d6f18b7f54dbcd65"/><section>
    <title>TMXLattice()</title>
<indexterm><primary>TMXLattice</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>TMXLattice</secondary></indexterm>
<para><computeroutput>TMXLattice::TMXLattice ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00028">28</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_t_m_x_lattice_1a53b8fd8649c195a0695056800aafe62a"/><section>
    <title>addDaughterAction()</title>
<indexterm><primary>addDaughterAction</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>addDaughterAction</secondary></indexterm>
<para><computeroutput>void TMXLattice::addDaughterAction (std::string elementId, std::function&lt; void(double)&gt; action)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00070">70</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1a98aa98178817a07a7567bfdf1aebce6d"/><section>
    <title>addDaughterVolume()</title>
<indexterm><primary>addDaughterVolume</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>addDaughterVolume</secondary></indexterm>
<para><computeroutput>void TMXLattice::addDaughterVolume (std::string elementId, G4LogicalVolume * daughterVolume)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00066">66</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1a874292bc6205ea20988c08a894867ced"/><section>
    <title>getLatticeType()</title>
<indexterm><primary>getLatticeType</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>getLatticeType</secondary></indexterm>
<para><computeroutput>std::string TMXLattice::getLatticeType ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00085">85</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1ab94cb481c23ae14db96f8e7ef5523ef2"/><section>
    <title>placeLattice()</title>
<indexterm><primary>placeLattice</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>placeLattice</secondary></indexterm>
<para><computeroutput>void TMXLattice::placeLattice (bool overlap)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00110">110</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1a8bed4cedd1ae45375aa66548d3aa41a4"/><section>
    <title>setElementRotation()</title>
<indexterm><primary>setElementRotation</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>setElementRotation</secondary></indexterm>
<para><computeroutput>void TMXLattice::setElementRotation (G4RotationMatrix * elementRotation)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00074">74</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1ad0e330788843df3b1d41145cad899a28"/><section>
    <title>setElementTranslation()</title>
<indexterm><primary>setElementTranslation</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>setElementTranslation</secondary></indexterm>
<para><computeroutput>void TMXLattice::setElementTranslation (G4ThreeVector elementTranslation)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00078">78</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1ad79fd24d255bdca45c880e7f9afd0a62"/><section>
    <title>setHexagonalLattice()</title>
<indexterm><primary>setHexagonalLattice</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>setHexagonalLattice</secondary></indexterm>
<para><computeroutput>void TMXLattice::setHexagonalLattice ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00048">48</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1a43221c32febaab0a7cdf62f854a12b75"/><section>
    <title>setLatticeMap()</title>
<indexterm><primary>setLatticeMap</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>setLatticeMap</secondary></indexterm>
<para><computeroutput>void TMXLattice::setLatticeMap (std::string latticeMapFile)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00044">44</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1aa861f60f7deb8ab3250707a7167c02d3"/><section>
    <title>setMotherVolume()</title>
<indexterm><primary>setMotherVolume</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>setMotherVolume</secondary></indexterm>
<para><computeroutput>void TMXLattice::setMotherVolume (G4LogicalVolume * motherVolume)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00062">62</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1aed4c0bbf5a3514470d820c84f5c1d0a9"/><section>
    <title>setPitch()</title>
<indexterm><primary>setPitch</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>setPitch</secondary></indexterm>
<para><computeroutput>void TMXLattice::setPitch (G4double pitch)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00058">58</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_lattice_1adf7c4b7c7600ce5349f4c60f9f4c6e9f"/><section>
    <title>setSquareLattice()</title>
<indexterm><primary>setSquareLattice</primary><secondary>TMXLattice</secondary></indexterm>
<indexterm><primary>TMXLattice</primary><secondary>setSquareLattice</secondary></indexterm>
<para><computeroutput>void TMXLattice::setSquareLattice ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source_1l00053">53</link> of file <link linkend="__benchmark-1_2src_2_t_m_x_lattice_8cc_source">TMXLattice.cc</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/include/TMXLattice.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/include/TMXLattice.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/include/TMXLattice.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/include/TMXLattice.hh/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/include/TMXLattice.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/src/TMXLattice.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/TMXLattice.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/TMXLattice.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/src/TMXLattice.cc/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/TMXLattice.cc</section>
</section>
