<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__t_m_x_bateman_decay_8hh_source" xml:lang="en-US">
<title>TMXBatemanDecay.hh</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/TMXElements/include/TMXBatemanDecay.hh</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00001"/>00001 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00005"/>00005 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00006"/>00006 <emphasis role="comment">//&#32;TMXBatemanDecay</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00007"/>00007 <emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00008"/>00008 <emphasis role="comment">//&#32;Donovan&#32;Maire,&#32;Transmutex,&#32;18/10/2019</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00009"/>00009 <emphasis role="comment">//&#32;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00011"/>00011 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00012"/>00012 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00013"/>00013 <emphasis role="preprocessor">#ifndef&#32;TMXBatemanDecay_h</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00014"/>00014 <emphasis role="preprocessor">#define&#32;TMXBatemanDecay_h&#32;1</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00015"/>00015 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00016"/>00016 <emphasis role="comment">//&#32;TMX&#32;class</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00017"/>00017 <emphasis role="preprocessor">#include&#32;&quot;TMXElements.hh&quot;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00018"/>00018 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00019"/>00019 <emphasis role="comment">//&#32;C++</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00020"/>00020 <emphasis role="preprocessor">#include&#32;&lt;unordered_map&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&lt;map&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00022"/>00022 <emphasis role="preprocessor">#include&#32;&lt;string&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00025"/>00025 <emphasis role="preprocessor">#include&#32;&lt;numeric&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00026"/>00026 <emphasis role="preprocessor">#include&#32;&lt;utility&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00028"/>00028 <emphasis role="comment">//#include&#32;&quot;TMXMaterial.hh&quot;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00029"/>00029 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00030"/>00030 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00031"/><link linkend="_class_t_m_x_bateman_decay">00031</link> <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_t_m_x_bateman_decay">TMXBatemanDecay</link>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00032"/>00032 {
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00033"/>00033 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_bateman_decay_1af27499141bdb57c425ab32519240d129">TMXBatemanDecay</link>();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00035"/>00035 &#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_bateman_decay">~TMXBatemanDecay</link>();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00036"/>00036 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00037"/><link linkend="_struct_t_m_x_bateman_decay_1_1_transmuted_element">00037</link> &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_struct_t_m_x_bateman_decay_1_1_transmuted_element">TransmutedElement</link>{&#32;<emphasis role="comment">//&#32;Information&#32;about&#32;transmutation</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZAmother;
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZAdaughter;
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::string&#32;LogicVolumeName;
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00041"/>00041 &#32;&#32;&#32;&#32;};
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00042"/>00042 &#32;&#32;&#32;&#32;
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00043"/>00043 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;Initialize();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00045"/>00045 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddTransmutedElement(std::vector&#32;&lt;TMXBatemanDecay::TransmutedElement&gt;&amp;&#32;vectorTransmutedElement);&#32;<emphasis role="comment">//&#32;Addition&#32;of&#32;a&#32;nuclide&#32;to&#32;the&#32;list&#32;of&#32;transmuted&#32;elements</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddTransmutedSrcElem(std::vector&#32;&lt;TMXBatemanDecay::TransmutedElement&gt;&amp;&#32;vectorSourceElement);&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Addition&#32;of&#32;a&#32;nuclide&#32;to&#32;the&#32;list&#32;of&#32;transmuted&#32;elements&#32;considered&#32;as&#32;a&#32;source&#32;term</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearMapTransmutedElement();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00048"/>00048 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearMapTransmutedSrcElem();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00049"/>00049 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DumpTransmutedElements();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConstructMapN_0(<emphasis role="keywordtype">int</emphasis>&#32;IZA,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;N_0);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00051"/>00051 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConsiderTransmutedElements(std::string&#32;LogicVolumeName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;SumTransmutedElements(std::string&#32;LogicVolumeName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00053"/>00053 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearMapN_0();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00054"/>00054 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearMapS_0();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00055"/>00055 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConstructMapNt(<emphasis role="keywordtype">int</emphasis>&#32;IZA,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;Nt);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00056"/>00056 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearMapNt();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00057"/>00057 &#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;long&#32;double&gt;&#32;GetMapNt();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00058"/>00058 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConstructChain(<emphasis role="keywordtype">int</emphasis>&#32;IZA,&#32;std::string&#32;LogicVolumeName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00059"/>00059 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ConstructChainNoTransmutation(<emphasis role="keywordtype">int</emphasis>&#32;IZA);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;DumpStoredChains();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CalculateDecayNt(<emphasis role="keywordtype">double</emphasis>&#32;t);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00062"/>00062 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CalculateDecayNtNoTransmutation(<emphasis role="keywordtype">double</emphasis>&#32;t,&#32;std::string&#32;LogicVolumeName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00063"/>00063 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CalculateSourceNt(<emphasis role="keywordtype">double</emphasis>&#32;t,&#32;std::string&#32;LogicVolumeName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CalculateSourceNtNoTransmutation(<emphasis role="keywordtype">double</emphasis>&#32;t);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00065"/>00065 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;MultiplyTransmutedElem(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;MultiplyTransmutedElem(<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;factor,&#32;std::string&#32;LVName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00067"/>00067 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;NormalizeTransmutedElem(<emphasis role="keywordtype">int</emphasis>&#32;IZA,&#32;std::string&#32;LogicVolumeName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00068"/>00068 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;GetN_0(<emphasis role="keywordtype">int</emphasis>&#32;IZA);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00069"/>00069 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;ClearMapChains();
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00070"/>00070 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00071"/>00071 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00072"/>00072 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00073"/>00073 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;decayNuclideVector(std::map&lt;int,&#32;double&gt;&amp;,&#32;std::map&lt;int,&#32;int&gt;&#32;,&#32;<emphasis role="keywordtype">double</emphasis>,&#32;<emphasis role="keywordtype">double</emphasis>);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00074"/>00074 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CalculateSourceNtNoTransmutation2(std::map&lt;int,&#32;int&gt;&#32;,&#32;<emphasis role="keywordtype">double</emphasis>,&#32;<emphasis role="keywordtype">double</emphasis>,&#32;std::map&lt;int,&#32;double&gt;&amp;,&#32;<emphasis role="keywordtype">bool</emphasis>);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00075"/>00075 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00076"/>00076 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddElement(<emphasis role="keywordtype">int</emphasis>&#32;index,&#32;std::vector&#32;&lt;TMXBatemanDecay::TransmutedElement&gt;&amp;&#32;vectorElement);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RecursiveChain(<link linkend="_class_t_m_x_element">TMXElement</link>*&#32;MotherElem,&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&#32;&gt;&amp;&#32;vectorChain,&#32;std::string&#32;LogicVolumeName,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;lambda_star);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00079"/>00079 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddMotherAndProgeny(std::vector&#32;&lt;&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&#32;&gt;&amp;&#32;vectorChain,&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&amp;&#32;vectorElement,&#32;<link linkend="_class_t_m_x_element">TMXElement</link>*&#32;MotherElem,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;lambda_star,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;BranchingRatio,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;ReactionRate_perN0,&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZA_daughter,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;std::string&#32;LogicVolumeName,&#32;std::string&#32;strDecay,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;FissionRatePerN0);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00080"/>00080 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;RecursiveChainNoTransmutation(<link linkend="_class_t_m_x_element">TMXElement</link>*&#32;MotherElem,&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&#32;&gt;&amp;&#32;vectorChain,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;lambda_mother);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;AddMotherAndProgenyNoTransmutation(std::vector&#32;&lt;&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&#32;&gt;&amp;&#32;vectorChain,&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&amp;&#32;vectorElement,&#32;<link linkend="_class_t_m_x_element">TMXElement</link>*&#32;MotherElem,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;lambda_mother,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;BranchingRatio,&#32;<emphasis role="keywordtype">int</emphasis>&#32;IZA_daughter,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;std::string&#32;strDecay);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;ln_dijm_decay(std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&amp;&#32;vectorElem,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<emphasis role="keywordtype">int</emphasis>&#32;m,&#32;<emphasis role="keywordtype">double</emphasis>&#32;t,&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;sign);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00083"/>00083 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;ln_dijm_source(std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&amp;&#32;vectorElem,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<emphasis role="keywordtype">int</emphasis>&#32;m,&#32;<emphasis role="keywordtype">double</emphasis>&#32;t,&#32;<emphasis role="keywordtype">int</emphasis>&amp;&#32;sign);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00084"/>00084 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;dijm_source(std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&amp;&#32;vectorElem,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;j,&#32;<emphasis role="keywordtype">int</emphasis>&#32;m,&#32;<emphasis role="keywordtype">double</emphasis>&#32;t&#32;);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00085"/>00085 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;lambda(<link linkend="_class_t_m_x_element">TMXElement</link>*&#32;elem);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;lambdaStar(<link linkend="_class_t_m_x_element">TMXElement</link>*&#32;elem,&#32;std::string&#32;LogicVolumeName);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00087"/>00087 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;ln_branchingProduct(std::vector&#32;&lt;&#32;std::vector&#32;&lt;long&#32;double&gt;&#32;&gt;&amp;&#32;vectorElem,&#32;<emphasis role="keywordtype">int</emphasis>&#32;i,&#32;<emphasis role="keywordtype">int</emphasis>&#32;m);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00088"/>00088 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;CheckMotherIsConstant(<emphasis role="keywordtype">int</emphasis>&#32;IZA_mother,&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;N_TransmutedElem);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00089"/>00089 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00090"/>00090 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;neumaier_sum(std::vector&lt;long&#32;double&gt;);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;kahanSum(vector&lt;long&#32;double&gt;&#32;fa);
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00092"/>00092 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00093"/>00093 <emphasis role="comment">//&#32;Data&#32;members</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00094"/>00094 &#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00095"/>00095 &#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;std::unordered_map&lt;int,&#32;std::unordered_map&lt;int,long&#32;double&gt;&gt;&gt;&#32;fMapLVMotherDaughter_transm[2];&#32;<emphasis role="comment">//&#32;Array&#32;of&#32;maps</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00096"/>00096 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;0&#32;is&#32;Counter&#32;of&#32;transmuted&#32;elements&#32;(Logical&#32;volume&#32;name,&#32;Mother&#32;element,&#32;Daugther&#32;element,&#32;number&#32;of&#32;atoms&#32;or&#32;ReactionRate_perN0&#32;after&#32;normalization)&#32;considered&#32;as&#32;source&#32;term</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00097"/>00097 &#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;1&#32;is&#32;Counter&#32;of&#32;transmuted&#32;elements&#32;(Logical&#32;volume&#32;name,&#32;Mother&#32;element,&#32;Daugther&#32;element,&#32;number&#32;of&#32;atoms&#32;or&#32;ReactionRate_perN0&#32;after&#32;normalization)</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00098"/>00098 &#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;std::unordered_map&lt;int,long&#32;double&gt;&gt;&#32;fMapLVElem_transm;&#32;<emphasis role="comment">//&#32;maps&#32;of&#32;transmuted&#32;elements&#32;(Logical&#32;volume&#32;name,&#32;element)</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00100"/>00100 &#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;long&#32;double&gt;&#32;fMapN_0;&#32;<emphasis role="comment">//&#32;Map&#32;of&#32;IZA&#32;element&#32;amount&#32;N_0&#32;contained&#32;in&#32;1&#32;volume</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00101"/>00101 &#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;long&#32;double&gt;&#32;fMapS_0;&#32;<emphasis role="comment">//&#32;Map&#32;of&#32;IZA&#32;element&#32;production&#32;rate&#32;considered&#32;as&#32;a&#32;source&#32;term&#32;(mother&#32;=&#32;constant)&#32;in&#32;1&#32;volume</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00102"/>00102 &#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;long&#32;double&gt;&#32;fMapNt;&#32;&#32;<emphasis role="comment">//&#32;Map&#32;of&#32;IZA&#32;element&#32;amount&#32;N_t&#32;contained&#32;in&#32;1&#32;volume&#32;after&#32;an&#32;elapsed&#32;time&#32;t</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00103"/>00103 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;long&#32;double&gt;&#32;fMapNt_small;&#32;&#32;//&#32;Map&#32;of&#32;IZA&#32;element&#32;amount&#32;N_t&#32;contained&#32;in&#32;1&#32;volume&#32;after&#32;an&#32;elapsed&#32;time&#32;t&#32;for&#32;little&#32;amount</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00104"/>00104 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;long&#32;double&gt;&#32;fMapNt_verysmall;&#32;&#32;//&#32;Map&#32;of&#32;IZA&#32;element&#32;amount&#32;N_t&#32;contained&#32;in&#32;1&#32;volume&#32;after&#32;an&#32;elapsed&#32;time&#32;t&#32;for&#32;little&#32;amount</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;std::unordered_map&lt;int,&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;&#32;std::vector&#32;&lt;&#32;long&#32;double&gt;&#32;&gt;&#32;&gt;&#32;&gt;&#32;fMapChains;&#32;<emphasis role="comment">//&#32;Map&#32;of&#32;IZA&#32;element&#32;contained&#32;in&#32;1&#32;volume&#32;and&#32;its&#32;linear&#32;decay&#32;chains&#32;towards&#32;stable&#32;element&#32;=&#32;Map&#32;&lt;&#32;vectorChain&#32;&lt;&#32;vectorElement&#32;&lt;&#32;{IZA,&#32;DecayConstant*,&#32;BranchingRatio*,&#32;Number&#32;of&#32;occurence,&#32;??}&#32;&gt;&#32;&gt;&#32;&gt;</emphasis>
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00106"/>00106 &#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00107"/>00107 };
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00108"/>00108 
<anchor xml:id="__t_m_x_bateman_decay_8hh_source_1l00109"/>00109 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
