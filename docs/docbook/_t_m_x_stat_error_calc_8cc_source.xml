<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__t_m_x_stat_error_calc_8cc_source" xml:lang="en-US">
<title>TMXStatErrorCalc.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/TMXElements/src/TMXStatErrorCalc.cc</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00001"/>00001 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00002"/>00002 <emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00005"/>00005 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00006"/>00006 <emphasis role="comment">//&#32;TMXStatErrorCalc</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00007"/>00007 <emphasis role="comment">//</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00008"/>00008 <emphasis role="comment">//&#32;Donovan&#32;Maire,&#32;Transmutex,&#32;01/09/2019</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00011"/>00011 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00012"/>00012 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00013"/>00013 <emphasis role="preprocessor">#include&#32;&quot;TMXStatErrorCalc.hh&quot;</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00014"/>00014 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&lt;cmath&gt;</emphasis>
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00016"/>00016 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00017"/><link linkend="_class_t_m_x_stat_error_calc_1a3d77ca26ac6ced7de089006092bd094d">00017</link> <link linkend="_class_t_m_x_stat_error_calc_1a3d77ca26ac6ced7de089006092bd094d">TMXStatErrorCalc::TMXStatErrorCalc</link>()&#32;{
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00018"/>00018 &#32;&#32;&#32;&#32;Initialize();
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00019"/>00019 }
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00020"/>00020 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00021"/>00021 TMXStatErrorCalc::~TMXStatErrorCalc()&#32;{
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00022"/>00022 }
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00023"/>00023 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00024"/>00024 <emphasis role="keywordtype">void</emphasis>&#32;TMXStatErrorCalc::Initialize()&#32;{
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00025"/>00025 &#32;&#32;&#32;&#32;fSum&#32;=&#32;0;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00026"/>00026 &#32;&#32;&#32;&#32;fSum_square&#32;=&#32;0;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00027"/>00027 &#32;&#32;&#32;&#32;fNb_values&#32;=&#32;0;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00028"/>00028 }
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00029"/>00029 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00030"/>00030 <emphasis role="keywordtype">double</emphasis>&#32;TMXStatErrorCalc::StatErrorCalc(<emphasis role="keywordtype">double</emphasis>&#32;value)&#32;{
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00031"/>00031 &#32;&#32;&#32;&#32;fSum&#32;+=&#32;value;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00032"/>00032 &#32;&#32;&#32;&#32;fSum_square&#32;+=&#32;value*value;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00033"/>00033 &#32;&#32;&#32;&#32;++fNb_values;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00034"/>00034 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;GetStandardDeviation();
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00035"/>00035 }
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00036"/>00036 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00037"/>00037 <emphasis role="keywordtype">double</emphasis>&#32;TMXStatErrorCalc::GetMeanValue()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00038"/>00038 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(&#32;fNb_values&#32;!=&#32;0)
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;fSum/(double)fNb_values;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00040"/>00040 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00041"/>00041 }
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00042"/>00042 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00043"/>00043 <emphasis role="keywordtype">double</emphasis>&#32;TMXStatErrorCalc::GetMeanError()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fNb_values&gt;1&#32;&amp;&amp;&#32;fSum_square&#32;-&#32;fSum*fSum/fNb_values&gt;=0)
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::sqrt((fSum_square&#32;-&#32;(fSum*fSum/fNb_values))/(fNb_values*(fNb_values-1)));
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00046"/>00046 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00047"/>00047 }
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00048"/>00048 
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00049"/>00049 <emphasis role="keywordtype">double</emphasis>&#32;TMXStatErrorCalc::GetStandardDeviation()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>(fNb_values&gt;1&#32;&amp;&amp;&#32;fSum_square&#32;-&#32;fSum*fSum/fNb_values&gt;=0)
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;std::sqrt((fSum_square&#32;-&#32;fSum*fSum/fNb_values)/(fNb_values-1));
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0.;
<anchor xml:id="__t_m_x_stat_error_calc_8cc_source_1l00053"/>00053 }
</programlisting></section>
