<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source" xml:lang="en-US">
<title>TMXAbstractScoring.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/src/scoring/TMXAbstractScoring.cc</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00001"/>00001 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00002"/>00002 <emphasis role="comment">//&#32;\brief&#32;Implementation&#32;of&#32;the&#32;Scoring&#32;of&#32;Fluence&#32;Spectrum</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00004"/>00004 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00006"/>00006 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00007"/>00007 <emphasis role="comment">//&#32;TMXAbstractScoring</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00008"/>00008 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;Thomas&#32;Guilbaud,&#32;Transmutex,&#32;05/07/2021</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00010"/>00010 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00012"/>00012 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;Scoring&#32;of&#32;Fluence&#32;Spectrum</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00014"/>00014 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00015"/>00015 <emphasis role="preprocessor">#include&#32;&quot;TMXAbstractScoring.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00016"/>00016 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00017"/>00017 <emphasis role="comment">//&#32;TMX&#32;Class</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;TMXInputParameters.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00019"/>00019 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00020"/>00020 <emphasis role="comment">//&#32;GEANT4&#32;libraries</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&quot;Analysis.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00022"/>00022 <emphasis role="preprocessor">#include&#32;&quot;G4LogicalVolume.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&quot;G4PhysicalVolumeStore.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&quot;G4VPhysicalVolume.hh&quot;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00025"/>00025 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00026"/>00026 <emphasis role="comment">//&#32;Standard&#32;libraries</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00027"/>00027 <emphasis role="preprocessor">#include&#32;&lt;algorithm&gt;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00028"/>00028 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&lt;regex&gt;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00031"/>00031 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00032"/>00032 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00033"/>00033 TMXAbstractScoring::TMXAbstractScoring(<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>*&#32;parameter)
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00034"/>00034 :
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00035"/>00035 &#32;&#32;&#32;&#32;m_p{parameter},
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00036"/>00036 &#32;&#32;&#32;&#32;m_firstIdHistogramH1(0),
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00037"/>00037 &#32;&#32;&#32;&#32;m_firstIdHistogramH2(0),
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00038"/>00038 &#32;&#32;&#32;&#32;m_lastIdHistogramH1(0),
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00039"/>00039 &#32;&#32;&#32;&#32;m_lastIdHistogramH2(0)
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00040"/>00040 {
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00041"/>00041 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;m_mapPVHisto0DId.clear();</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00042"/>00042 &#32;&#32;&#32;&#32;m_mapPVHisto1DId.clear();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00043"/>00043 &#32;&#32;&#32;&#32;m_mapPVHisto2DId.clear();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00044"/>00044 &#32;&#32;&#32;&#32;m_mapPVParticle.clear();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00045"/>00045 &#32;&#32;&#32;&#32;m_mapPVHisto2DBinning.clear();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00046"/>00046 &#32;&#32;&#32;&#32;m_mapPVHisto2DBinningUnit.clear();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00047"/>00047 &#32;&#32;&#32;&#32;m_mapPVDaughters.clear();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00048"/>00048 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00049"/>00049 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00050"/>00050 TMXAbstractScoring::~TMXAbstractScoring()
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00051"/>00051 {}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00052"/>00052 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00053"/>00053 <emphasis role="comment">//------------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00054"/>00054 <emphasis role="comment">//&#32;Builder</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00055"/>00055 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00056"/>00056 <emphasis role="keywordtype">void</emphasis>&#32;TMXAbstractScoring::buildHistogramsH1(std::string&#32;quantity)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00057"/>00057 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;analysisManager&#32;=&#32;G4AnalysisManager::Instance();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00058"/>00058 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00059"/>00059 &#32;&#32;&#32;&#32;std::string&#32;name;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00060"/>00060 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00061"/>00061 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;mapIndex&#32;=&#32;m_mapPVHisto1DId.begin();&#32;mapIndex&#32;!=&#32;m_mapPVHisto1DId.end();&#32;mapIndex++)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00062"/>00062 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;quantity&#32;+&#32;<emphasis role="stringliteral">&quot;_&quot;</emphasis>&#32;+&#32;mapIndex-&gt;first;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;analysisManager-&gt;CreateH1(name,&#32;name,&#32;1000,&#32;-5,&#32;9);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_mapPVHisto1DId[mapIndex-&gt;first]&#32;=&#32;m_firstIdHistogramH1&#32;+&#32;i;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00066"/>00066 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00067"/>00067 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00068"/>00068 &#32;&#32;&#32;&#32;m_lastIdHistogramH1&#32;=&#32;m_firstIdHistogramH1+i-1;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00069"/>00069 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00070"/>00070 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00071"/>00071 <emphasis role="keywordtype">void</emphasis>&#32;TMXAbstractScoring::buildHistogramsH2(std::string&#32;quantity)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keyword">auto</emphasis>&#32;analysisManager&#32;=&#32;G4AnalysisManager::Instance();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00073"/>00073 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00074"/>00074 &#32;&#32;&#32;&#32;std::string&#32;name,&#32;unit,&#32;idx;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00075"/>00075 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;min1,&#32;max1,&#32;min2,&#32;max2;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;bin1,&#32;bin2;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00077"/>00077 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;mapIndex&#32;=&#32;m_mapPVHisto2DId.begin();&#32;mapIndex&#32;!=&#32;m_mapPVHisto2DId.end();&#32;mapIndex++)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;idx&#32;=&#32;mapIndex-&gt;first;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;name&#32;=&#32;quantity&#32;+&#32;<emphasis role="stringliteral">&quot;_&quot;</emphasis>&#32;+&#32;idx;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unit&#32;=&#32;m_mapPVHisto2DBinningUnit[idx];
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bin1&#32;=&#32;(int)m_mapPVHisto2DBinning[idx][0],&#32;min1&#32;=&#32;m_mapPVHisto2DBinning[idx][1],&#32;max1&#32;=&#32;m_mapPVHisto2DBinning[idx][2];
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bin2&#32;=&#32;(int)m_mapPVHisto2DBinning[idx][3],&#32;min2&#32;=&#32;m_mapPVHisto2DBinning[idx][4],&#32;max2&#32;=&#32;m_mapPVHisto2DBinning[idx][5];
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;analysisManager-&gt;CreateH2(name,&#32;name,
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bin1,&#32;min1,&#32;max1,
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00086"/>00086 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;bin2,&#32;min2,&#32;max2,
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;unit,&#32;unit
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00089"/>00089 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_mapPVHisto2DId[idx]&#32;=&#32;m_firstIdHistogramH2&#32;+&#32;i;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i++;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00091"/>00091 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00092"/>00092 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00093"/>00093 &#32;&#32;&#32;&#32;m_lastIdHistogramH2&#32;=&#32;m_firstIdHistogramH2+i-1;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00094"/>00094 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00095"/>00095 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00096"/>00096 <emphasis role="keywordtype">void</emphasis>&#32;TMXAbstractScoring::buildPVDaughters(std::unordered_map&lt;std::string,&#32;std::string&gt;&#32;m_mapPV)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00097"/>00097 &#32;&#32;&#32;&#32;G4PhysicalVolumeStore*&#32;PVStore&#32;=&#32;G4PhysicalVolumeStore::GetInstance();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00098"/>00098 &#32;&#32;&#32;&#32;std::string&#32;PVScorer;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00099"/>00099 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;idx&#32;=&#32;m_mapPV.begin();&#32;idx&#32;!=&#32;m_mapPV.end();&#32;idx++)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PVScorer&#32;=&#32;idx-&gt;first;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00101"/>00101 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;it_PV&#32;=&#32;PVStore-&gt;begin();&#32;it_PV&#32;!=&#32;PVStore-&gt;end();&#32;it_PV++)&#32;{&#32;<emphasis role="comment">//&#32;Test&#32;on&#32;all&#32;PV</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00102"/>00102 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(&#32;&#32;&#32;&#32;PVScorer.find((*it_PV)-&gt;GetName())&#32;!=&#32;std::string::npos&#32;<emphasis role="comment">//&#32;Find&#32;a&#32;PV&#32;in&#32;the&#32;scoring&#32;written&#32;by&#32;the&#32;user</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00103"/>00103 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&amp;&amp;&#32;&#32;isRecursivePV(PVScorer)&#32;<emphasis role="comment">//&#32;which&#32;is&#32;set&#32;to&#32;be&#32;recursive&#32;&amp;&amp;&#32;the&#32;PV&#32;must&#32;not&#32;have&#32;already&#32;been&#32;count&#32;in&#32;the&#32;loop&#32;(avoid&#32;duplication)</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00104"/>00104 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;&amp;&amp;&#32;&#32;std::find(m_mapPVDaughters[PVScorer].begin(),&#32;m_mapPVDaughters[PVScorer].end(),&#32;(*it_PV)-&gt;GetName())&#32;==&#32;m_mapPVDaughters[PVScorer].end()</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00105"/>00105 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00106"/>00106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;temp&#32;=&#32;getRecursivePV(*it_PV);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00107"/>00107 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_mapPVDaughters[PVScorer].insert(m_mapPVDaughters[PVScorer].end(),&#32;temp.begin(),&#32;temp.end());
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00108"/>00108 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00109"/>00109 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00110"/>00110 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00111"/>00111 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Erase&#32;excess&#32;PV</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00112"/>00112 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;m_mapPVDaughters[PVScorer].size();&#32;i++)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00113"/>00113 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PVScorer.find(m_mapPVDaughters[PVScorer][i])&#32;!=&#32;std::string::npos)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;m_mapPVDaughters[PVScorer].erase(m_mapPVDaughters[PVScorer].begin()&#32;+&#32;i);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00115"/>00115 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;i--;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00117"/>00117 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00118"/>00118 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00119"/>00119 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00120"/>00120 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00121"/>00121 <emphasis role="comment">//------------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00122"/>00122 <emphasis role="comment">//&#32;Setter</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00123"/>00123 <emphasis role="keywordtype">void</emphasis>&#32;TMXAbstractScoring::setFirstIdHistogramH1(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00124"/>00124 &#32;&#32;&#32;&#32;m_firstIdHistogramH1&#32;=&#32;id;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00125"/>00125 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00126"/>00126 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00127"/>00127 <emphasis role="keywordtype">void</emphasis>&#32;TMXAbstractScoring::setFirstIdHistogramH2(<emphasis role="keywordtype">int</emphasis>&#32;<emphasis role="keywordtype">id</emphasis>)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00128"/>00128 &#32;&#32;&#32;&#32;m_firstIdHistogramH2&#32;=&#32;id;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00129"/>00129 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00130"/>00130 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00131"/>00131 <emphasis role="comment">//------------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00132"/>00132 <emphasis role="comment">//&#32;Getter</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00133"/>00133 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00134"/>00134 <emphasis role="keywordtype">int</emphasis>&#32;TMXAbstractScoring::getLastIdHistogramH1()&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00135"/>00135 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(m_lastIdHistogramH1);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00136"/>00136 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00137"/>00137 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00138"/>00138 <emphasis role="keywordtype">int</emphasis>&#32;TMXAbstractScoring::getLastIdHistogramH2()&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00139"/>00139 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(m_lastIdHistogramH2);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00140"/>00140 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00141"/>00141 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00142"/>00142 G4double&#32;TMXAbstractScoring::getKineticEnergy_eV(<emphasis role="keyword">const</emphasis>&#32;G4Step*&#32;theStep)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00143"/>00143 &#32;&#32;&#32;&#32;G4double&#32;energyK&#32;=&#32;theStep-&gt;GetTrack()-&gt;GetKineticEnergy()/eV;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(energyK&#32;==&#32;0)&#32;{&#32;<emphasis role="comment">//&#32;If&#32;kinetic&#32;energy&#32;is&#32;0,&#32;get&#32;the&#32;kinetic&#32;energy&#32;of&#32;preStep</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00145"/>00145 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;energyK&#32;=&#32;theStep-&gt;GetPreStepPoint()-&gt;GetKineticEnergy()/eV;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00146"/>00146 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00147"/>00147 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;energyK;&#32;<emphasis role="comment">//&#32;Return&#32;the&#32;energy&#32;in&#32;eV</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00148"/>00148 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00149"/>00149 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00150"/>00150 std::vector&lt;std::string&gt;&#32;TMXAbstractScoring::getPVUnionNames(std::string&#32;PVUnionNames)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Decomposition&#32;of&#32;an&#32;union&#32;of&#32;physical&#32;volume&apos;s&#32;name&#32;in&#32;a&#32;scorer&#32;(ex:&#32;&quot;PV1+PV2&quot;&#32;=&gt;&#32;[&quot;PV1&quot;,&#32;&quot;PV2&quot;])</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00152"/>00152 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;vectorString;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00153"/>00153 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00154"/>00154 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;pos&#32;=&#32;0;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00155"/>00155 &#32;&#32;&#32;&#32;std::string&#32;token,&#32;delimiter&#32;=&#32;<emphasis role="stringliteral">&quot;+&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00156"/>00156 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;((pos&#32;=&#32;PVUnionNames.find(delimiter))&#32;!=&#32;std::string::npos)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00157"/>00157 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;PVUnionNames.substr(0,&#32;pos);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00158"/>00158 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vectorString.push_back(token);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00159"/>00159 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PVUnionNames.erase(0,&#32;pos&#32;+&#32;delimiter.length());
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00160"/>00160 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00161"/>00161 &#32;&#32;&#32;&#32;vectorString.push_back(PVUnionNames);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00162"/>00162 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(vectorString);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00163"/>00163 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00164"/>00164 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00165"/>00165 std::string&#32;TMXAbstractScoring::getPVScorer(std::string&#32;mapIndex)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00166"/>00166 &#32;&#32;&#32;&#32;std::string&#32;delimiter&#32;=&#32;<emphasis role="stringliteral">&quot;___&quot;</emphasis>;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(mapIndex.substr(0,&#32;mapIndex.find(delimiter)));
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00168"/>00168 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00169"/>00169 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00170"/>00170 std::vector&lt;std::string&gt;&#32;TMXAbstractScoring::getRecursivePV(G4VPhysicalVolume*&#32;PV)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00171"/>00171 &#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;daughterNames;
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00172"/>00172 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PV)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;physical&#32;volume&#32;is&#32;not&#32;null</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00173"/>00173 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4LogicalVolume*&#32;LV&#32;=&#32;PV-&gt;GetLogicalVolume();
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00174"/>00174 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00175"/>00175 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(LV)&#32;{&#32;<emphasis role="comment">//&#32;if&#32;logical&#32;volume&#32;is&#32;not&#32;null</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00176"/>00176 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;LV-&gt;GetNoDaughters();&#32;i++)&#32;{&#32;<emphasis role="comment">//&#32;For&#32;each&#32;Physical&#32;volume&#32;daugther&#32;of&#32;the&#32;Logical&#32;volume</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00177"/>00177 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4VPhysicalVolume*&#32;Daughter_PV&#32;=&#32;LV-&gt;GetDaughter(i);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00178"/>00178 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;daughterNames.push_back(Daughter_PV-&gt;GetName());
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00179"/>00179 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;temp&#32;=&#32;getRecursivePV(Daughter_PV);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00180"/>00180 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;daughterNames.insert(&#32;daughterNames.end(),&#32;temp.begin(),&#32;temp.end());
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00181"/>00181 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00182"/>00182 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00183"/>00183 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(daughterNames);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00185"/>00185 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00186"/>00186 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00187"/>00187 <emphasis role="comment">//------------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00188"/>00188 <emphasis role="comment">//&#32;Boolean</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00189"/>00189 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00190"/>00190 <emphasis role="keywordtype">bool</emphasis>&#32;TMXAbstractScoring::isRecursivePV(std::string&#32;PVScorer)&#32;{
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00191"/>00191 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(getPVUnionNames(getPVScorer(PVScorer)).back()&#32;==&#32;<emphasis role="stringliteral">&quot;&quot;</emphasis>);
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00192"/>00192 }
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00193"/>00193 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00194"/>00194 <emphasis role="comment">//------------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00195"/>00195 <emphasis role="comment">//&#32;Utilitaries</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00196"/>00196 
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00197"/>00197 <emphasis role="comment">/*std::vector&lt;std::string&gt;&#32;TMXAbstractScoring::split(std::string&#32;string,&#32;std::string&#32;delimiter)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00198"/>00198 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;Bug:&#32;produce&#32;a&#32;segmentation&#32;fault&#32;in&#32;unexpected&#32;places</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00199"/>00199 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00200"/>00200 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;Based&#32;on&#32;https://stackoverflow.com/questions/14265581/parse-split-a-string-in-c-using-string-delimiter-standard-c</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00201"/>00201 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00202"/>00202 <emphasis role="comment">&#32;&#32;&#32;&#32;std::vector&lt;std::string&gt;&#32;vectorString;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00203"/>00203 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00204"/>00204 <emphasis role="comment">&#32;&#32;&#32;&#32;size_t&#32;pos&#32;=&#32;0;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00205"/>00205 <emphasis role="comment">&#32;&#32;&#32;&#32;std::string&#32;token;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00206"/>00206 <emphasis role="comment">&#32;&#32;&#32;&#32;while&#32;((pos&#32;=string.find(delimiter))&#32;!=&#32;std::string::npos)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00207"/>00207 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;token&#32;=&#32;string.substr(0,&#32;pos);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00208"/>00208 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;vectorString.push_back(token);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00209"/>00209 <emphasis role="comment">&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;string.erase(0,&#32;pos&#32;+&#32;delimiter.length());</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00210"/>00210 <emphasis role="comment">&#32;&#32;&#32;&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00211"/>00211 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;vectorString.push_back(string);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00212"/>00212 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00213"/>00213 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;int&#32;start&#32;=&#32;0;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00214"/>00214 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;int&#32;end&#32;=&#32;string.find(delimiter);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00215"/>00215 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;while&#32;(end&#32;!=&#32;-1)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00216"/>00216 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;vectorString.push_back(string.substr(start,&#32;end&#32;-&#32;start));</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00217"/>00217 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;G4cout&#32;&lt;&lt;&#32;string.substr(start,&#32;end&#32;-&#32;start)&#32;&lt;&lt;&#32;G4endl;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00218"/>00218 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;start&#32;=&#32;end&#32;+&#32;delimiter.size();</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00219"/>00219 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;end&#32;=&#32;string.find(delimiter,&#32;start);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00220"/>00220 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00221"/>00221 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;vectorString.push_back(string.substr(start,&#32;end&#32;-&#32;start));</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00222"/>00222 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;G4cout&#32;&lt;&lt;&#32;string.substr(start,&#32;end&#32;-&#32;start);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00223"/>00223 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00224"/>00224 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;std::string&#32;token;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00225"/>00225 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;std::istringstream&#32;tokenStream(string);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00226"/>00226 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;while&#32;(std::getline(tokenStream,&#32;token,&#32;delimiter))&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00227"/>00227 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;vectorString.push_back(token);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00228"/>00228 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00229"/>00229 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00230"/>00230 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;std::stringstream&#32;ss(string);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00231"/>00231 <emphasis role="comment">&#32;&#32;&#32;&#32;//</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00232"/>00232 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;for&#32;(std::string&#32;i;&#32;ss&#32;&gt;&gt;&#32;i;)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00233"/>00233 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;vectorString.push_back(i);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00234"/>00234 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;if&#32;(ss.peek()&#32;==&#32;delimiter)</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00235"/>00235 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;ss.ignore();</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00236"/>00236 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00237"/>00237 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00238"/>00238 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00239"/>00239 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00240"/>00240 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;std::regex&#32;rgx(&quot;\\&quot;+delimiter+&quot;+&quot;);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00241"/>00241 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;std::sregex_token_iterator&#32;iter(string.begin(),</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00242"/>00242 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;string.end(),</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00243"/>00243 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;rgx,</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00244"/>00244 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;-1);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00245"/>00245 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;std::sregex_token_iterator&#32;end;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00246"/>00246 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;for&#32;(&#32;;&#32;iter&#32;!=&#32;end;&#32;++iter)&#32;{</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00247"/>00247 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;vectorString.push_back(*iter);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00248"/>00248 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;*iter&#32;&lt;&lt;&#32;&apos;\n&apos;;</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00249"/>00249 <emphasis role="comment">&#32;&#32;&#32;&#32;//&#32;}</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00250"/>00250 <emphasis role="comment">&#32;&#32;&#32;&#32;return(vectorString);</emphasis>
<anchor xml:id="__benchmark-4_2src_2scoring_2_t_m_x_abstract_scoring_8cc_source_1l00251"/>00251 <emphasis role="comment">}*/</emphasis>
</programlisting></section>
