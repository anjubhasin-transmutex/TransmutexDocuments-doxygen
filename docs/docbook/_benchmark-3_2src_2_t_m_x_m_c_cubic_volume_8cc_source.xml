<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source" xml:lang="en-US">
<title>TMXMCCubicVolume.cc</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/TMXMCCubicVolume.cc</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00001"/>00001 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00002"/>00002 <emphasis role="comment">//&#32;\brief&#32;Implementation&#32;of&#32;the&#32;TMXMCCubicVolume&#32;class</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00004"/>00004 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00006"/>00006 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00007"/>00007 <emphasis role="comment">//&#32;TMXMCCubicVolume</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00008"/>00008 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00009"/>00009 <emphasis role="comment">//&#32;Thomas&#32;Guilbaud,&#32;Transmutex,&#32;22/04/2021</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00010"/>00010 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00012"/>00012 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;Class&#32;to&#32;estimate&#32;the&#32;cubic&#32;volumes&#32;of&#32;LV,&#32;materials&#32;and&#32;sliced&#32;LV</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00013"/>00013 <emphasis role="comment">//&#32;using&#32;Monte&#32;Carlo&#32;method</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00015"/>00015 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00016"/>00016 <emphasis role="preprocessor">#include&#32;&quot;TMXMCCubicVolume.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00017"/>00017 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;G4SolidStore.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00019"/>00019 <emphasis role="preprocessor">#include&#32;&quot;G4VSolid.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00020"/>00020 <emphasis role="preprocessor">#include&#32;&quot;G4Box.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&quot;G4FPYSamplingOps.hh&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00022"/>00022 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&quot;map&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&lt;time.h&gt;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00025"/>00025 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00026"/>00026 TMXMCCubicVolume::TMXMCCubicVolume(<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>*&#32;p)&#32;:
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00027"/>00027 &#32;&#32;&#32;&#32;m_p(p),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00028"/>00028 &#32;&#32;&#32;&#32;fErrorLimit(100.),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00029"/>00029 &#32;&#32;&#32;&#32;fCubicVolume_world(0.),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00030"/>00030 &#32;&#32;&#32;&#32;fNavigator(0),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00031"/>00031 &#32;&#32;&#32;&#32;fNbPoints(1),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00032"/>00032 &#32;&#32;&#32;&#32;fNbPointsTotal(0),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00033"/>00033 &#32;&#32;&#32;&#32;fIsSliceMode(false)
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00034"/>00034 {
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00035"/>00035 &#32;&#32;&#32;&#32;buildMapLogicalVolume();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00036"/>00036 &#32;&#32;&#32;&#32;buildMapMaterial();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00037"/>00037 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00038"/>00038 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00039"/>00039 TMXMCCubicVolume::~TMXMCCubicVolume()
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00040"/>00040 {}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00041"/>00041 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00042"/>00042 <emphasis role="comment">//&#32;-----------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00043"/>00043 <emphasis role="comment">//&#32;Builder</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00044"/>00044 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00045"/>00045 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::buildMapLogicalVolume()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00046"/>00046 &#32;&#32;&#32;&#32;fmap_LV_points.clear();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00047"/>00047 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00048"/>00048 &#32;&#32;&#32;&#32;G4LogicalVolumeStore&#32;*LVStore&#32;=&#32;G4LogicalVolumeStore::GetInstance();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00049"/>00049 &#32;&#32;&#32;&#32;G4LogicalVolume&#32;*LV;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00050"/>00050 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(G4LogicalVolumeStore::iterator&#32;it_LV&#32;=&#32;LVStore-&gt;begin();&#32;it_LV&#32;!=&#32;LVStore-&gt;end();&#32;it_LV++)&#32;{&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;logical&#32;volume&#32;store</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LV&#32;=&#32;*it_LV;&#32;<emphasis role="comment">//&#32;Define&#32;the&#32;logical&#32;volume</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(LV-&gt;GetMaterial())&#32;{&#32;<emphasis role="comment">//&#32;Check&#32;to&#32;not&#32;count&#32;the&#32;scoring&#32;worlds</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmap_LV_points[LV-&gt;GetName()]&#32;=&#32;0.;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00055"/>00055 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00056"/>00056 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00057"/>00057 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00058"/>00058 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::buildMapMaterial()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00059"/>00059 &#32;&#32;&#32;&#32;fmap_Material_points.clear();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00060"/>00060 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00061"/>00061 &#32;&#32;&#32;&#32;G4LogicalVolumeStore&#32;*LVStore&#32;=&#32;G4LogicalVolumeStore::GetInstance();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00062"/>00062 &#32;&#32;&#32;&#32;G4Material&#32;*material;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00063"/>00063 &#32;&#32;&#32;&#32;G4LogicalVolume&#32;*LV;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00064"/>00064 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(G4LogicalVolumeStore::iterator&#32;it_LV&#32;=&#32;LVStore-&gt;begin();&#32;it_LV&#32;!=&#32;LVStore-&gt;end();&#32;it_LV++)&#32;{&#32;<emphasis role="comment">//&#32;Read&#32;the&#32;logical&#32;volume&#32;store</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LV&#32;=&#32;*it_LV;&#32;<emphasis role="comment">//&#32;Define&#32;the&#32;logical&#32;volume</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;material&#32;=&#32;LV-&gt;GetMaterial();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(material)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmap_Material_points[material-&gt;GetName()]&#32;=&#32;0.;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00070"/>00070 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00071"/>00071 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00072"/>00072 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00073"/>00073 <emphasis role="comment">//&#32;-----------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00074"/>00074 <emphasis role="comment">//&#32;Setter</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00075"/>00075 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00076"/>00076 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::setErrorLimit(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;errorLimit)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00077"/>00077 &#32;&#32;&#32;&#32;fErrorLimit&#32;=&#32;errorLimit;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00078"/>00078 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00079"/>00079 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00080"/>00080 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::setNavigator(G4Navigator&#32;*navigator)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00081"/>00081 &#32;&#32;&#32;&#32;fNavigator&#32;=&#32;navigator;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00082"/>00082 &#32;&#32;&#32;&#32;fNavigator-&gt;SetWorldVolume((*G4PhysicalVolumeStore::GetInstance())[0]);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00083"/>00083 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00084"/>00084 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00085"/>00085 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::setNumberOfPoints(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPoints)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00086"/>00086 &#32;&#32;&#32;&#32;fNbPoints&#32;=&#32;nbPoints;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00087"/>00087 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00088"/>00088 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00089"/>00089 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::setSlicedLogicalVolume(std::string&#32;logicalVolumeName)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00090"/>00090 &#32;&#32;&#32;&#32;fLogicalVolumeName&#32;=&#32;logicalVolumeName;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00091"/>00091 &#32;&#32;&#32;&#32;fIsSliceMode&#32;=&#32;<emphasis role="keyword">true</emphasis>;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00092"/>00092 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00093"/>00093 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00094"/>00094 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::setSliceBoundariesZ(G4double&#32;minZ,&#32;G4double&#32;maxZ,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbinsZ)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00095"/>00095 &#32;&#32;&#32;&#32;fMinZ&#32;=&#32;minZ/cm;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00096"/>00096 &#32;&#32;&#32;&#32;fMaxZ&#32;=&#32;maxZ/cm;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00097"/>00097 &#32;&#32;&#32;&#32;fNbinsZ&#32;=&#32;nbinsZ;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00098"/>00098 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;nbinsZ;&#32;i++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fSlicedVolumes.push_back(0);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00100"/>00100 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00101"/>00101 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00102"/>00102 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00103"/>00103 <emphasis role="comment">//&#32;-----------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00104"/>00104 <emphasis role="comment">//&#32;Getter</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00105"/>00105 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00107"/>00107 <emphasis role="comment">//&#32;Gives&#32;the&#32;error&#32;from&#32;a&#32;Poissonnian&#32;distribution&#32;in&#32;percent</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00108"/>00108 <emphasis role="keywordtype">double</emphasis>&#32;TMXMCCubicVolume::getError(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPointsInsideVolume)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00109"/>00109 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(100./std::sqrt((<emphasis role="keywordtype">double</emphasis>)nbPointsInsideVolume));
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00110"/>00110 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00111"/>00111 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00112"/>00112 <emphasis role="keywordtype">double</emphasis>&#32;TMXMCCubicVolume::getMaximumError()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00113"/>00113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;errorLV&#32;&#32;=&#32;getMaximumErrorLV(),
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00114"/>00114 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;errorMat&#32;=&#32;getMaximumErrorMat();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00115"/>00115 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(errorLV&#32;&gt;=&#32;errorMat)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00116"/>00116 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(errorLV);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00117"/>00117 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00118"/>00118 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(errorMat);&#32;<emphasis role="comment">//&#32;Error&#32;in&#32;percent</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00119"/>00119 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00120"/>00120 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00121"/>00121 <emphasis role="keywordtype">double</emphasis>&#32;TMXMCCubicVolume::getMaximumErrorLV()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00122"/>00122 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;error,&#32;maxError&#32;=&#32;0.;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00123"/>00123 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;it_LV&#32;=&#32;fmap_LV_points.begin();&#32;it_LV&#32;!=&#32;fmap_LV_points.end();&#32;it_LV++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00124"/>00124 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error&#32;=&#32;getError(it_LV-&gt;second);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00125"/>00125 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isinf(error)&#32;&amp;&amp;&#32;maxError&#32;&lt;=&#32;error)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00126"/>00126 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxError&#32;=&#32;error;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00127"/>00127 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00128"/>00128 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00129"/>00129 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(maxError);&#32;<emphasis role="comment">//&#32;Error&#32;in&#32;percent</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00130"/>00130 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00131"/>00131 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00132"/>00132 <emphasis role="keywordtype">double</emphasis>&#32;TMXMCCubicVolume::getMaximumErrorMat()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00133"/>00133 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;error,&#32;maxError&#32;=&#32;0.;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00134"/>00134 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;it_LV&#32;=&#32;fmap_Material_points.begin();&#32;it_LV&#32;!=&#32;fmap_Material_points.end();&#32;it_LV++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00135"/>00135 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error&#32;=&#32;getError(it_LV-&gt;second);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00136"/>00136 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isinf(error)&#32;&amp;&amp;&#32;maxError&#32;&lt;=&#32;error)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00137"/>00137 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxError&#32;=&#32;error;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00138"/>00138 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00139"/>00139 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00140"/>00140 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(maxError);&#32;<emphasis role="comment">//&#32;Error&#32;in&#32;percent</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00141"/>00141 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00142"/>00142 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00143"/>00143 <emphasis role="keywordtype">double</emphasis>&#32;TMXMCCubicVolume::getMaximumErrorSlicedLV()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00144"/>00144 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;error,&#32;maxError&#32;=&#32;0.;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00145"/>00145 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;fNbinsZ;&#32;i++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00146"/>00146 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;error&#32;=&#32;getError(fSlicedVolumes[i]);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00147"/>00147 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(!isinf(error)&#32;&amp;&amp;&#32;maxError&#32;&lt;=&#32;error)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00148"/>00148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxError&#32;=&#32;error;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00149"/>00149 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00150"/>00150 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00151"/>00151 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(maxError);&#32;<emphasis role="comment">//&#32;Error&#32;in&#32;percent</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00152"/>00152 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00153"/>00153 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00155"/>00155 <emphasis role="comment">//&#32;Return&#32;a&#32;random&#32;positon&#32;inside&#32;a&#32;box,&#32;parameters&#32;are&#32;half-length&#32;of&#32;the&#32;box</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00156"/>00156 G4ThreeVector&#32;TMXMCCubicVolume::getRandomPosition(<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfZ)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00157"/>00157 &#32;&#32;&#32;&#32;G4double&#32;randX&#32;=&#32;10.&#32;*&#32;halfX&#32;*&#32;(2.&#32;*&#32;G4UniformRand()&#32;-&#32;1.);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00158"/>00158 &#32;&#32;&#32;&#32;G4double&#32;randY&#32;=&#32;10.&#32;*&#32;halfY&#32;*&#32;(2.&#32;*&#32;G4UniformRand()&#32;-&#32;1.);&#32;<emphasis role="comment">//&#32;or&#32;(double)(rand())/((double)(RAND_MAX))</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00159"/>00159 &#32;&#32;&#32;&#32;G4double&#32;randZ&#32;=&#32;10.&#32;*&#32;halfZ&#32;*&#32;(2.&#32;*&#32;G4UniformRand()&#32;-&#32;1.);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00160"/>00160 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(G4ThreeVector(randX,&#32;randY,&#32;randZ));
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00161"/>00161 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00162"/>00162 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00163"/>00163 G4ThreeVector&#32;TMXMCCubicVolume::getRandomPosition(<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY)<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00164"/>00164 &#32;&#32;&#32;&#32;G4double&#32;randX&#32;=&#32;10.&#32;*&#32;halfX&#32;*&#32;(2.&#32;*&#32;G4UniformRand()&#32;-&#32;1.);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00165"/>00165 &#32;&#32;&#32;&#32;G4double&#32;randY&#32;=&#32;10.&#32;*&#32;halfY&#32;*&#32;(2.&#32;*&#32;G4UniformRand()&#32;-&#32;1.);&#32;<emphasis role="comment">//&#32;or&#32;(double)(rand())/((double)(RAND_MAX))</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00166"/>00166 &#32;&#32;&#32;&#32;G4double&#32;randZ&#32;=&#32;10.&#32;*&#32;((fMaxZ-fMinZ)&#32;*&#32;G4UniformRand()&#32;+&#32;fMinZ);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00167"/>00167 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(G4ThreeVector(randX,&#32;randY,&#32;randZ));
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00168"/>00168 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00169"/>00169 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00170"/>00170 <emphasis role="comment">//&#32;-----------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00171"/>00171 <emphasis role="comment">//&#32;Boolean</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00172"/>00172 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00173"/>00173 <emphasis role="keywordtype">bool</emphasis>&#32;TMXMCCubicVolume::isLVorMatAboveErrorLimit()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00174"/>00174 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(getMaximumError()&#32;&gt;=&#32;fErrorLimit);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00175"/>00175 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00176"/>00176 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00177"/>00177 <emphasis role="keywordtype">bool</emphasis>&#32;TMXMCCubicVolume::isSlicedLVAboveErrorLimit()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00178"/>00178 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>(getMaximumErrorSlicedLV()&#32;&gt;=&#32;fErrorLimit);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00179"/>00179 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00180"/>00180 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00181"/>00181 <emphasis role="comment">//&#32;-----------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00182"/>00182 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00183"/>00183 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::run()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00184"/>00184 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(fIsSliceMode)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00185"/>00185 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runSlicedLogicalVolumeMC();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00186"/>00186 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00187"/>00187 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00188"/>00188 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;runMCVolumeEstimator();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00189"/>00189 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00190"/>00190 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00191"/>00191 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00192"/>00192 <emphasis role="comment">//&#32;Main&#32;method&#32;to&#32;manage&#32;the&#32;Monte&#32;Carlo&#32;calculations&#32;and&#32;satisfy&#32;error&#32;limits</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00193"/>00193 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::runMCVolumeEstimator()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00194"/>00194 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;world&#32;dimensions</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00195"/>00195 &#32;&#32;&#32;&#32;G4VSolid&#32;*solid&#32;=&#32;(*G4LogicalVolumeStore::GetInstance())[0]-&gt;GetSolid();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00196"/>00196 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX&#32;=&#32;((G4Box*)solid)-&gt;GetXHalfLength()&#32;/&#32;cm,
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00197"/>00197 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;halfY&#32;=&#32;((G4Box*)solid)-&gt;GetYHalfLength()&#32;/&#32;cm,
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00198"/>00198 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;halfZ&#32;=&#32;((G4Box*)solid)-&gt;GetZHalfLength()&#32;/&#32;cm;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00199"/>00199 &#32;&#32;&#32;&#32;fCubicVolume_world&#32;=&#32;8.&#32;*&#32;halfX&#32;*&#32;halfY&#32;*&#32;halfZ;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00200"/>00200 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00201"/>00201 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00202"/>00202 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*****&#32;&#32;Monte&#32;Carlo&#32;Volume&#32;Estimator&#32;&#32;*****&#32;|\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00203"/>00203 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00204"/>00204 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Number&#32;of&#32;points&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPoints&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00205"/>00205 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Target&#32;error&#32;&#32;&#32;&#32;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fErrorLimit&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00206"/>00206 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00207"/>00207 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Boundary&#32;of&#32;the&#32;world:&#32;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00208"/>00208 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\tX&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;-halfX&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;halfX&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&#32;cm\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00209"/>00209 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\tY&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;-halfY&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;halfY&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&#32;cm\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00210"/>00210 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\tZ&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;-halfZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;halfZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&#32;cm\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00211"/>00211 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;World&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fCubicVolume_world&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm^3\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00212"/>00212 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Number&#32;of&#32;logical&#32;volumes&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fmap_LV_points.size()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00213"/>00213 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Number&#32;of&#32;materials&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fmap_Material_points.size()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00214"/>00214 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00215"/>00215 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00216"/>00216 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00217"/>00217 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First&#32;calculation&#32;with&#32;the&#32;number&#32;of&#32;points&#32;setup&#32;by&#32;the&#32;user</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00218"/>00218 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;clock_t&#32;initialTime&#32;=&#32;clock();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00219"/>00219 &#32;&#32;&#32;&#32;calculationMC(fNbPoints,&#32;halfX,&#32;halfY,&#32;halfZ);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00220"/>00220 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;time&#32;=&#32;((float)(clock()&#32;-&#32;initialTime))/CLOCKS_PER_SEC;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00221"/>00221 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00222"/>00222 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Redo&#32;the&#32;calculation&#32;with&#32;the&#32;appropriate&#32;number&#32;of&#32;points&#32;to&#32;be&#32;lower&#32;than&#32;the&#32;error&#32;required&#32;by&#32;the&#32;user</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00223"/>00223 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;countRun&#32;=&#32;1;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00224"/>00224 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;maxError,&#32;FOM,&#32;overEstimatedTime;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00225"/>00225 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(isLVorMatAboveErrorLimit())&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00226"/>00226 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxError&#32;=&#32;getMaximumError();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00227"/>00227 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FOM&#32;=&#32;1/(maxError*maxError&#32;*&#32;time);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00228"/>00228 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overEstimatedTime&#32;=&#32;1.1/(fErrorLimit&#32;*&#32;fErrorLimit&#32;*&#32;FOM);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00229"/>00229 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fNbPoints&#32;=&#32;(long)(overEstimatedTime/time&#32;*&#32;fNbPointsTotal)&#32;-&#32;fNbPointsTotal;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00230"/>00230 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00231"/>00231 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_p-&gt;Verbose&#32;&gt;=&#32;2)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00232"/>00232 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printLogicalVolumeMap();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00233"/>00233 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printMaterialMap();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00234"/>00234 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00235"/>00235 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00236"/>00236 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00237"/>00237 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Run&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;countRun&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;with&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPointsTotal&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;points\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00238"/>00238 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00239"/>00239 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Maximum&#32;error&#32;Logical&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;getMaximumErrorLV()&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00240"/>00240 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Maximum&#32;error&#32;Material&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;getMaximumErrorMat()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00241"/>00241 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Estimated&#32;FOM&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;FOM*10000.*60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;/min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00242"/>00242 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Time&#32;for&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPointsTotal&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;points&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00243"/>00243 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;time&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;time/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00244"/>00244 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Estimated&#32;total&#32;time&#32;to&#32;be&#32;lower&#32;than&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fErrorLimit&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00245"/>00245 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;overEstimatedTime&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;overEstimatedTime/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00246"/>00246 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Over&#32;Estimated&#32;additionnal&#32;time&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00247"/>00247 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;overEstimatedTime&#32;-&#32;time&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;(overEstimatedTime&#32;-&#32;time)/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00248"/>00248 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Additionnal&#32;number&#32;of&#32;points&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPoints&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00249"/>00249 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00250"/>00250 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00251"/>00251 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00252"/>00252 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calculationMC(fNbPoints,&#32;halfX,&#32;halfY,&#32;halfZ);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00253"/>00253 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00254"/>00254 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time&#32;=&#32;((float)(clock()&#32;-&#32;initialTime))/CLOCKS_PER_SEC;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00255"/>00255 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;countRun++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00256"/>00256 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00257"/>00257 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00258"/>00258 &#32;&#32;&#32;&#32;printLogicalVolumeMap();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00259"/>00259 &#32;&#32;&#32;&#32;printMaterialMap();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00260"/>00260 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00261"/>00261 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n|---------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00262"/>00262 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Total&#32;Calculation&#32;time&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00263"/>00263 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;time&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;time/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00264"/>00264 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Number&#32;of&#32;total&#32;points&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPointsTotal&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00265"/>00265 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Maximum&#32;error&#32;on&#32;Logical&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;getMaximumErrorLV()&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00266"/>00266 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Maximum&#32;error&#32;on&#32;Material&#32;&#32;&#32;&#32;&#32;&#32;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;getMaximumErrorMat()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00267"/>00267 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|---------------------------------------------\n&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00268"/>00268 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00269"/>00269 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00270"/>00270 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::runSlicedLogicalVolumeMC()&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00271"/>00271 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Get&#32;world&#32;dimensions</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00272"/>00272 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX&#32;=&#32;std::max(m_p-&gt;maxX,&#32;std::abs(m_p-&gt;minX))&#32;/&#32;cm,&#32;<emphasis role="comment">//&#32;((G4Box*)solid)-&gt;GetXHalfLength()&#32;/&#32;cm,</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00273"/>00273 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;halfY&#32;=&#32;std::max(m_p-&gt;maxY,&#32;std::abs(m_p-&gt;minY))&#32;/&#32;cm,&#32;<emphasis role="comment">//&#32;((G4Box*)solid)-&gt;GetYHalfLength()&#32;/&#32;cm,</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00274"/>00274 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lengthZ&#32;=&#32;(fMaxZ-fMinZ);&#32;<emphasis role="comment">//&#32;((G4Box*)solid)-&gt;GetZHalfLength()&#32;/&#32;cm;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00275"/>00275 &#32;&#32;&#32;&#32;fCubicVolume_world&#32;=&#32;4.&#32;*&#32;halfX&#32;*&#32;halfY&#32;*&#32;lengthZ;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00276"/>00276 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00277"/>00277 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00278"/>00278 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*****&#32;&#32;Monte&#32;Carlo&#32;Volume&#32;Estimator&#32;&#32;*****&#32;|\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00279"/>00279 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00280"/>00280 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Number&#32;of&#32;points&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPoints&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00281"/>00281 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Target&#32;error&#32;&#32;&#32;&#32;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fErrorLimit&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00282"/>00282 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00283"/>00283 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Boundary&#32;of&#32;the&#32;world:&#32;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00284"/>00284 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\tX&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;-halfX&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;halfX&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&#32;cm\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00285"/>00285 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\tY&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;-halfY&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;halfY&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&#32;cm\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00286"/>00286 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\tZ&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;&#32;fMinZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fMaxZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&#32;cm\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00287"/>00287 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;World&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fCubicVolume_world&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm^3\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00288"/>00288 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Logical&#32;Volume&#32;Sliced&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fLogicalVolumeName&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00289"/>00289 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;z&#32;=&#32;[&quot;</emphasis>&#32;&lt;&lt;&#32;fMinZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;;&quot;</emphasis>&#32;&lt;&lt;&#32;fMaxZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&#32;cm&#32;with&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbinsZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;bins\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00290"/>00290 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00291"/>00291 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00292"/>00292 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00293"/>00293 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;First&#32;calculation&#32;with&#32;the&#32;number&#32;of&#32;points&#32;setup&#32;by&#32;the&#32;user</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00294"/>00294 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;clock_t&#32;initialTime&#32;=&#32;clock();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00295"/>00295 &#32;&#32;&#32;&#32;calculationMCSlicedLV(fNbPoints,&#32;halfX,&#32;halfY,&#32;fLogicalVolumeName);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00296"/>00296 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">float</emphasis>&#32;time&#32;=&#32;((float)(clock()&#32;-&#32;initialTime))/CLOCKS_PER_SEC;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00297"/>00297 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00298"/>00298 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Redo&#32;the&#32;calculation&#32;with&#32;the&#32;appropriate&#32;number&#32;of&#32;points&#32;to&#32;be&#32;lower&#32;than&#32;the&#32;error&#32;required&#32;by&#32;the&#32;user</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00299"/>00299 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;countRun&#32;=&#32;1;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00300"/>00300 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;maxError,&#32;FOM,&#32;overEstimatedTime;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00301"/>00301 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">while</emphasis>&#32;(isSlicedLVAboveErrorLimit())&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00302"/>00302 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxError&#32;=&#32;getMaximumErrorSlicedLV();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00303"/>00303 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;FOM&#32;=&#32;1/(maxError*maxError&#32;*&#32;time);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00304"/>00304 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;overEstimatedTime&#32;=&#32;1.1/(fErrorLimit&#32;*&#32;fErrorLimit&#32;*&#32;FOM);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00305"/>00305 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fNbPoints&#32;=&#32;(long)(overEstimatedTime/time&#32;*&#32;fNbPointsTotal)&#32;-&#32;fNbPointsTotal;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00306"/>00306 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00307"/>00307 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(m_p-&gt;Verbose&#32;&gt;=&#32;2)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00308"/>00308 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;printSlicedVolume();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00309"/>00309 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00310"/>00310 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00311"/>00311 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00312"/>00312 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Run&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;countRun&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;with&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPointsTotal&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;points\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00313"/>00313 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00314"/>00314 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Maximum&#32;error&#32;Logical&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;getMaximumErrorSlicedLV()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00315"/>00315 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Estimated&#32;FOM&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;FOM*10000.*60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;/min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00316"/>00316 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Time&#32;for&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPointsTotal&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;points&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00317"/>00317 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;time&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;time/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00318"/>00318 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Estimated&#32;total&#32;time&#32;to&#32;be&#32;lower&#32;than&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fErrorLimit&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00319"/>00319 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;overEstimatedTime&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;overEstimatedTime/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00320"/>00320 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Over&#32;Estimated&#32;additionnal&#32;time&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00321"/>00321 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;overEstimatedTime&#32;-&#32;time&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;(overEstimatedTime&#32;-&#32;time)/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00322"/>00322 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;*&#32;Additionnal&#32;number&#32;of&#32;points&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPoints&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00323"/>00323 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;----------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00324"/>00324 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00325"/>00325 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00326"/>00326 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;calculationMCSlicedLV(fNbPoints,&#32;halfX,&#32;halfY,&#32;fLogicalVolumeName);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00327"/>00327 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00328"/>00328 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00329"/>00329 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;time&#32;=&#32;((float)(clock()&#32;-&#32;initialTime))/CLOCKS_PER_SEC;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00330"/>00330 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;countRun++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00331"/>00331 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00332"/>00332 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00333"/>00333 &#32;&#32;&#32;&#32;printSlicedVolume();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00334"/>00334 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00335"/>00335 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n|---------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00336"/>00336 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Total&#32;Calculation&#32;time&#32;:\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00337"/>00337 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;\t&quot;</emphasis>&#32;&lt;&lt;&#32;time&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;s&#32;=&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;time/60.&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;min\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00338"/>00338 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Number&#32;of&#32;total&#32;points&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fNbPointsTotal&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00339"/>00339 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Maximum&#32;error&#32;Logical&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;getMaximumErrorSlicedLV()&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00340"/>00340 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|---------------------------------------------\n&quot;</emphasis>&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00341"/>00341 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00342"/>00342 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00343"/>00343 <emphasis role="comment">//&#32;-----------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00344"/>00344 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00345"/>00345 <emphasis role="comment">//&#32;Main&#32;method&#32;of&#32;Monte&#32;Carlo&#32;calculation</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00346"/>00346 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::calculationMC(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPoints,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfZ)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00347"/>00347 &#32;&#32;&#32;&#32;G4ThreeVector&#32;position;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00348"/>00348 &#32;&#32;&#32;&#32;G4VPhysicalVolume&#32;*PV;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00349"/>00349 &#32;&#32;&#32;&#32;G4LogicalVolume&#32;*LV;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00350"/>00350 &#32;&#32;&#32;&#32;std::string&#32;materialName;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00351"/>00351 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">long</emphasis>&#32;i=0;&#32;i&lt;nbPoints;&#32;i++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00352"/>00352 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;getRandomPosition(halfX,&#32;halfY,&#32;halfZ);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00353"/>00353 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PV&#32;=&#32;fNavigator-&gt;LocateGlobalPointAndSetup(position);&#32;<emphasis role="comment">//&#32;http://www.apc.univ-paris7.fr/~franco/g4doxy4.10/html/class_g4_navigator.html</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00354"/>00354 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PV)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00355"/>00355 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LV&#32;=&#32;PV-&gt;GetLogicalVolume();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00356"/>00356 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;materialName&#32;=&#32;LV-&gt;GetMaterial()-&gt;GetName();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00357"/>00357 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmap_LV_points[LV-&gt;GetName()]++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00358"/>00358 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fmap_Material_points[materialName]++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00359"/>00359 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00360"/>00360 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00361"/>00361 &#32;&#32;&#32;&#32;fNbPointsTotal&#32;+=&#32;nbPoints;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00362"/>00362 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00363"/>00363 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00364"/>00364 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::calculationMCSlicedLV(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPoints,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY,&#32;G4String&#32;LVname)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00365"/>00365 &#32;&#32;&#32;&#32;G4ThreeVector&#32;position;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00366"/>00366 &#32;&#32;&#32;&#32;G4VPhysicalVolume&#32;*PV;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00367"/>00367 &#32;&#32;&#32;&#32;G4LogicalVolume&#32;*LV;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00368"/>00368 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;nz;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00369"/>00369 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">long</emphasis>&#32;i=0;&#32;i&lt;nbPoints;&#32;i++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00370"/>00370 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;position&#32;=&#32;getRandomPosition(halfX,&#32;halfY);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00371"/>00371 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;PV&#32;=&#32;fNavigator-&gt;LocateGlobalPointAndSetup(position);&#32;<emphasis role="comment">//&#32;http://www.apc.univ-paris7.fr/~franco/g4doxy4.10/html/class_g4_navigator.html</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00372"/>00372 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(PV)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00373"/>00373 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;LV&#32;=&#32;PV-&gt;GetLogicalVolume();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00374"/>00374 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(LV-&gt;GetName()&#32;==&#32;LVname)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00375"/>00375 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nz&#32;=&#32;(int)(((position.z()/cm&#32;-&#32;fMinZ)/(fMaxZ&#32;-&#32;fMinZ))&#32;*&#32;(double)fNbinsZ);
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00376"/>00376 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;fSlicedVolumes[nz]++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00377"/>00377 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00378"/>00378 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00379"/>00379 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00380"/>00380 &#32;&#32;&#32;&#32;fNbPointsTotal&#32;+=&#32;nbPoints;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00381"/>00381 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00382"/>00382 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00383"/>00383 <emphasis role="comment">//&#32;-----------------------------------------------------------------------------*</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00384"/>00384 <emphasis role="comment">//&#32;Printer</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00385"/>00385 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00386"/>00386 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::printLogicalVolumeMap()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00387"/>00387 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sort&#32;alphabetically&#32;the&#32;map</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00388"/>00388 &#32;&#32;&#32;&#32;std::map&lt;std::string,&#32;long&gt;&#32;map_LV_points_ordered(fmap_LV_points.begin(),&#32;fmap_LV_points.end());
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00389"/>00389 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00390"/>00390 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;0;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00391"/>00391 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxLengthName&#32;=&#32;0,&#32;temp;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00392"/>00392 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;totalVolume&#32;=&#32;0.,&#32;volume;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00393"/>00393 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;it_LV&#32;=&#32;map_LV_points_ordered.begin();&#32;it_LV&#32;!=&#32;map_LV_points_ordered.end();&#32;it_LV++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00394"/>00394 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;it_LV-&gt;first.length();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00395"/>00395 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxLengthName&#32;&lt;&#32;temp)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00396"/>00396 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxLengthName&#32;=&#32;temp;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00397"/>00397 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00398"/>00398 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00399"/>00399 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::left
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00400"/>00400 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;---------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00401"/>00401 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00402"/>00402 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(maxLengthName)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Logical&#32;Volume&#32;Name&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00403"/>00403 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00404"/>00404 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Volume&#32;(cm3)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00405"/>00405 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00406"/>00406 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;SigVol&#32;(cm3)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00407"/>00407 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00408"/>00408 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Error&#32;(%)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00409"/>00409 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00410"/>00410 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Total&#32;points\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00411"/>00411 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;-|--------------|--------------|--------------|----------------\n&quot;</emphasis>;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00412"/>00412 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00413"/>00413 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;it_LV&#32;=&#32;map_LV_points_ordered.begin();&#32;it_LV&#32;!=&#32;map_LV_points_ordered.end();&#32;it_LV++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00414"/>00414 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;volume&#32;=&#32;it_LV-&gt;second/((double)fNbPointsTotal)&#32;*&#32;fCubicVolume_world;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00415"/>00415 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::left
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00416"/>00416 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00417"/>00417 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(maxLengthName)&#32;&lt;&lt;&#32;it_LV-&gt;first
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00418"/>00418 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00419"/>00419 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;volume
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00420"/>00420 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;±&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00421"/>00421 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;volume&#32;*&#32;getError(it_LV-&gt;second)&#32;*&#32;0.01
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00422"/>00422 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00423"/>00423 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;getError(it_LV-&gt;second)
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00424"/>00424 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00425"/>00425 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;it_LV-&gt;second&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;pts&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00426"/>00426 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00427"/>00427 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00428"/>00428 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalVolume&#32;+=&#32;volume;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00429"/>00429 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00430"/>00430 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00431"/>00431 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Make&#32;the&#32;full&#32;total&#32;calculation&#32;with&#32;errors</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00432"/>00432 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;---------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00433"/>00433 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Number&#32;of&#32;logical&#32;volumes&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;count&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00434"/>00434 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Total&#32;volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;totalVolume&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm^3&#32;(World&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fCubicVolume_world&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm^3)\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00435"/>00435 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;---------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00436"/>00436 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00437"/>00437 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00438"/>00438 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00439"/>00439 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::printMaterialMap()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00440"/>00440 &#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;Sort&#32;alphabetically&#32;the&#32;map</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00441"/>00441 &#32;&#32;&#32;&#32;std::map&lt;std::string,&#32;long&gt;&#32;map_Material_points_ordered(fmap_Material_points.begin(),&#32;fmap_Material_points.end());
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00442"/>00442 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00443"/>00443 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;count&#32;=&#32;0;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00444"/>00444 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;maxLengthName&#32;=&#32;0,&#32;temp;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00445"/>00445 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;totalVolume&#32;=&#32;0.,&#32;volume;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00446"/>00446 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;it_Mat&#32;=&#32;map_Material_points_ordered.begin();&#32;it_Mat&#32;!=&#32;map_Material_points_ordered.end();&#32;it_Mat++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00447"/>00447 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;temp&#32;=&#32;it_Mat-&gt;first.length();
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00448"/>00448 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(maxLengthName&#32;&lt;&#32;temp)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00449"/>00449 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;maxLengthName&#32;=&#32;temp;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00450"/>00450 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00451"/>00451 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00452"/>00452 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::left
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00453"/>00453 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;---------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00454"/>00454 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00455"/>00455 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(maxLengthName)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Material&#32;Name&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00456"/>00456 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00457"/>00457 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Volume&#32;(cm3)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00458"/>00458 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00459"/>00459 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;SigVol&#32;(cm3)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00460"/>00460 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00461"/>00461 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Error&#32;(%)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00462"/>00462 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00463"/>00463 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Total&#32;points\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00464"/>00464 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;-|--------------|--------------|--------------|----------------\n&quot;</emphasis>;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00465"/>00465 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00466"/>00466 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keyword">auto</emphasis>&#32;it_Mat&#32;=&#32;map_Material_points_ordered.begin();&#32;it_Mat&#32;!=&#32;map_Material_points_ordered.end();&#32;it_Mat++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00467"/>00467 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;volume&#32;=&#32;it_Mat-&gt;second/((double)fNbPointsTotal)&#32;*&#32;fCubicVolume_world;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00468"/>00468 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::left
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00469"/>00469 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00470"/>00470 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(maxLengthName)&#32;&lt;&lt;&#32;it_Mat-&gt;first
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00471"/>00471 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00472"/>00472 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;volume
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00473"/>00473 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;±&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00474"/>00474 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(8)&#32;&lt;&lt;&#32;volume&#32;*&#32;getError(it_Mat-&gt;second)&#32;*&#32;0.01
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00475"/>00475 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00476"/>00476 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;getError(it_Mat-&gt;second)
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00477"/>00477 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00478"/>00478 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;it_Mat-&gt;second&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;pts&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00479"/>00479 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00480"/>00480 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;count++;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00481"/>00481 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalVolume&#32;+=&#32;volume;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00482"/>00482 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00483"/>00483 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00484"/>00484 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;---------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00485"/>00485 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Number&#32;of&#32;materials&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;count&#32;&lt;&lt;&#32;std::endl
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00486"/>00486 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Total&#32;volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;totalVolume&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm^3&#32;(World&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fCubicVolume_world&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm^3)\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00487"/>00487 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-&quot;</emphasis>&#32;&lt;&lt;&#32;std::string(maxLengthName,&#32;<emphasis role="charliteral">&apos;-&apos;</emphasis>)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;---------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00488"/>00488 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00489"/>00489 }
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00490"/>00490 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00491"/>00491 <emphasis role="keywordtype">void</emphasis>&#32;TMXMCCubicVolume::printSlicedVolume()<emphasis role="keyword">&#32;const&#32;</emphasis>{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00492"/>00492 &#32;&#32;&#32;&#32;G4double&#32;lowerZ,&#32;upperZ,&#32;nz&#32;=&#32;(fMaxZ&#32;-&#32;fMinZ)/(<emphasis role="keywordtype">double</emphasis>)fNbinsZ;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00493"/>00493 &#32;&#32;&#32;&#32;G4double&#32;volume,&#32;totalVolume&#32;=&#32;0.;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00494"/>00494 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;nPoints&#32;=&#32;0;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00495"/>00495 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::left
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00496"/>00496 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|-----------------------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00497"/>00497 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00498"/>00498 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(13)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Interval&#32;(cm)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00499"/>00499 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00500"/>00500 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Volume&#32;(cm3)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00501"/>00501 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00502"/>00502 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;SigVol&#32;(cm3)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00503"/>00503 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00504"/>00504 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Error&#32;(%)&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00505"/>00505 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00506"/>00506 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;Total&#32;points\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00507"/>00507 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|---------------|--------------|--------------|--------------|----------------\n&quot;</emphasis>;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00508"/>00508 
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00509"/>00509 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">int</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;fNbinsZ;&#32;i++)&#32;{
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00510"/>00510 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;lowerZ&#32;=&#32;fMinZ&#32;&#32;+&#32;nz&#32;*&#32;(double)i;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00511"/>00511 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;upperZ&#32;=&#32;lowerZ&#32;+&#32;nz;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00512"/>00512 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;volume&#32;=&#32;fSlicedVolumes[i]/(double)fNbPointsTotal&#32;*&#32;fCubicVolume_world;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00513"/>00513 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;totalVolume&#32;+=&#32;volume;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00514"/>00514 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;nPoints&#32;+=&#32;fSlicedVolumes[i];
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00515"/>00515 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;std::left
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00516"/>00516 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00517"/>00517 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;[&quot;</emphasis>&#32;&lt;&lt;&#32;std::right&#32;&lt;&lt;&#32;std::setw(5)&#32;&lt;&lt;&#32;lowerZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;;&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;std::setw(5)&#32;&lt;&lt;&#32;upperZ&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;]&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00518"/>00518 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::left
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00519"/>00519 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00520"/>00520 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(12)&#32;&lt;&lt;&#32;volume
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00521"/>00521 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;±&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00522"/>00522 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;volume&#32;*&#32;getError(fSlicedVolumes[i])&#32;*&#32;0.01
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00523"/>00523 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00524"/>00524 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;getError(fSlicedVolumes[i])&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;%&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00525"/>00525 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;|&#32;&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00526"/>00526 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::setw(10)&#32;&lt;&lt;&#32;fSlicedVolumes[i]&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;pts&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00527"/>00527 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;std::endl;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00528"/>00528 &#32;&#32;&#32;&#32;}
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00529"/>00529 &#32;&#32;&#32;&#32;std::cout&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|--------------------------------------------------------------------------\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00530"/>00530 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Total&#32;Points&#32;inside&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;fLogicalVolumeName&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;nPoints&#32;&lt;&lt;&#32;<emphasis role="charliteral">&apos;\n&apos;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00531"/>00531 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|&#32;Total&#32;Volume&#32;:&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;totalVolume&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;±&#32;&quot;</emphasis>&#32;&lt;&lt;&#32;totalVolume*getError(nPoints)*0.01&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;&#32;cm3\n&quot;</emphasis>
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00532"/>00532 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&lt;&lt;&#32;<emphasis role="stringliteral">&quot;|--------------------------------------------------------------------------\n&quot;</emphasis>;
<anchor xml:id="__benchmark-3_2src_2_t_m_x_m_c_cubic_volume_8cc_source_1l00533"/>00533 }
</programlisting></section>
