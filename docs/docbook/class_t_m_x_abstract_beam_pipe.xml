<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_class_t_m_x_abstract_beam_pipe" xml:lang="en-US">
<title>TMXAbstractBeamPipe Class Reference</title>
<indexterm><primary>TMXAbstractBeamPipe</primary></indexterm>
<para>Inheritance diagram for TMXAbstractBeamPipe:    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="class_t_m_x_abstract_beam_pipe.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Public Member Functions    </title>
        <itemizedlist>
            <listitem><para><link linkend="_class_t_m_x_abstract_beam_pipe_1afd3def11a76dc7ea6fda49267da703fd">TMXAbstractBeamPipe</link> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para>const std::vector&lt; G4VSolid * &gt; * <link linkend="_class_t_m_x_abstract_beam_pipe_1abff42262ed0a40e4a3bc9dbbe1be9c93">getSolids</link> ()</para>
</listitem>
            <listitem><para>const std::vector&lt; G4ThreeVector * &gt; * <link linkend="_class_t_m_x_abstract_beam_pipe_1a44a0a058f26bd32879a400db8fe3beff">getTranslations</link> ()</para>
</listitem>
            <listitem><para>const std::vector&lt; G4RotationMatrix * &gt; * <link linkend="_class_t_m_x_abstract_beam_pipe_1a7fa7a39750cd32fd07a12f46b76ab6fc">getRotations</link> ()</para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1a1da75a3c18bc20e90653b6ee7dee73e7">getVacuumLogicalVolumes</link> ()</para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1a0fc738c86f7c9473e0b7d0966c0417ad">getTubeLogicalVolumes</link> ()</para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1ac0ffdaeb0df00fe372857b75820dae46">getWindowLogicalVolumes</link> ()</para>
</listitem>
            <listitem><para>G4LogicalVolume * <link linkend="_class_t_m_x_abstract_beam_pipe_1ab077f7c65724737316a866ddcf955def">getMasterVolume</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_beam_pipe_1a879678d5e84c8dbca6179e58ea55df71">getVacuumMaterial</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_beam_pipe_1af28b2938822baadc7ccccc4144184219">getTubeMaterial</link> ()</para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_beam_pipe_1a64e9c259666ce9cacc456bc05d110233">getWindowMaterial</link> ()</para>
</listitem>
            <listitem><para>std::string <link linkend="_class_t_m_x_abstract_beam_pipe_1aeeb0fd3a00eebb6a94e08e88af548c37">getAssemblyName</link> ()</para>
</listitem>
            <listitem><para>virtual void <link linkend="_class_t_m_x_abstract_beam_pipe_1af890f0d12532e307eedd82e6300c857a">createMaterial</link> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a46ec422ea87ea7575149a0ac64a35424"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para>virtual G4Element * <link linkend="_class_t_m_x_abstract_beam_pipe_1a827fc7bbb15c840df8e46ea4214e3ab5">ElementExists</link> (int Z, double A)</para>
</listitem>
            <listitem><para>virtual G4Element * <link linkend="_class_t_m_x_abstract_beam_pipe_1a5152c62af01a5984bc5b32c95b53d6bb">ElementExists</link> (std::string name)</para>
</listitem>
            <listitem><para>size_t <link linkend="_class_t_m_x_abstract_beam_pipe_1a9fe6e1076fa8101b5c99005090ec727f">getFirstOccurence</link> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aa4a8dda2d02761afa632359688c92d39"/>virtual void <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1add38938022f35f93f6eee4ef621c4be8"/>virtual void <emphasis role="strong">placeBeamPipe</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ae173a127cbc844a6e6f5a1f8288ad188"/>virtual void <emphasis role="strong">placeVacuum</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afe5a1e8bcb5bc3ee3a3da57ad9fde7dd"/>virtual void <emphasis role="strong">placeWindow</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para>void <link linkend="_class_t_m_x_abstract_beam_pipe_1a22b4e1d830c3bbd283c4a0df429836ac">VisualisationConfig</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afd3def11a76dc7ea6fda49267da703fd"/><emphasis role="strong">TMXAbstractBeamPipe</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1abff42262ed0a40e4a3bc9dbbe1be9c93"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a44a0a058f26bd32879a400db8fe3beff"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a7fa7a39750cd32fd07a12f46b76ab6fc"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a1da75a3c18bc20e90653b6ee7dee73e7"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getVacuumLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a0fc738c86f7c9473e0b7d0966c0417ad"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTubeLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac0ffdaeb0df00fe372857b75820dae46"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getWindowLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ab077f7c65724737316a866ddcf955def"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a879678d5e84c8dbca6179e58ea55df71"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getVacuumMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af28b2938822baadc7ccccc4144184219"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTubeMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a64e9c259666ce9cacc456bc05d110233"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getWindowMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aeeb0fd3a00eebb6a94e08e88af548c37"/>std::string <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a420cc2b58d4bd292953436f4bd365ea8"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a46ec422ea87ea7575149a0ac64a35424"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afbc05bc529f4d40b96da30cfd55292dd"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac90ae739b5e4069df7093855b5302bc4"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a9fe6e1076fa8101b5c99005090ec727f"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aa4a8dda2d02761afa632359688c92d39"/>virtual void <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1add38938022f35f93f6eee4ef621c4be8"/>virtual void <emphasis role="strong">placeBeamPipe</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ae173a127cbc844a6e6f5a1f8288ad188"/>virtual void <emphasis role="strong">placeVacuum</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afe5a1e8bcb5bc3ee3a3da57ad9fde7dd"/>virtual void <emphasis role="strong">placeWindow</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a22b4e1d830c3bbd283c4a0df429836ac"/>void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afd3def11a76dc7ea6fda49267da703fd"/><emphasis role="strong">TMXAbstractBeamPipe</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1abff42262ed0a40e4a3bc9dbbe1be9c93"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a44a0a058f26bd32879a400db8fe3beff"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a7fa7a39750cd32fd07a12f46b76ab6fc"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a1da75a3c18bc20e90653b6ee7dee73e7"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getVacuumLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a0fc738c86f7c9473e0b7d0966c0417ad"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTubeLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac0ffdaeb0df00fe372857b75820dae46"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getWindowLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ab077f7c65724737316a866ddcf955def"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a879678d5e84c8dbca6179e58ea55df71"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getVacuumMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af28b2938822baadc7ccccc4144184219"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTubeMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a64e9c259666ce9cacc456bc05d110233"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getWindowMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aeeb0fd3a00eebb6a94e08e88af548c37"/>std::string <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a420cc2b58d4bd292953436f4bd365ea8"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a46ec422ea87ea7575149a0ac64a35424"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afbc05bc529f4d40b96da30cfd55292dd"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac90ae739b5e4069df7093855b5302bc4"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a9fe6e1076fa8101b5c99005090ec727f"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aa4a8dda2d02761afa632359688c92d39"/>virtual void <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1add38938022f35f93f6eee4ef621c4be8"/>virtual void <emphasis role="strong">placeBeamPipe</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ae173a127cbc844a6e6f5a1f8288ad188"/>virtual void <emphasis role="strong">placeVacuum</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afe5a1e8bcb5bc3ee3a3da57ad9fde7dd"/>virtual void <emphasis role="strong">placeWindow</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a22b4e1d830c3bbd283c4a0df429836ac"/>void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afd3def11a76dc7ea6fda49267da703fd"/><emphasis role="strong">TMXAbstractBeamPipe</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1abff42262ed0a40e4a3bc9dbbe1be9c93"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a44a0a058f26bd32879a400db8fe3beff"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a7fa7a39750cd32fd07a12f46b76ab6fc"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a1da75a3c18bc20e90653b6ee7dee73e7"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getVacuumLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a0fc738c86f7c9473e0b7d0966c0417ad"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTubeLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac0ffdaeb0df00fe372857b75820dae46"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getWindowLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ab077f7c65724737316a866ddcf955def"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a879678d5e84c8dbca6179e58ea55df71"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getVacuumMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af28b2938822baadc7ccccc4144184219"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTubeMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a64e9c259666ce9cacc456bc05d110233"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getWindowMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aeeb0fd3a00eebb6a94e08e88af548c37"/>std::string <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a420cc2b58d4bd292953436f4bd365ea8"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a46ec422ea87ea7575149a0ac64a35424"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afbc05bc529f4d40b96da30cfd55292dd"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac90ae739b5e4069df7093855b5302bc4"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a9fe6e1076fa8101b5c99005090ec727f"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aa4a8dda2d02761afa632359688c92d39"/>virtual void <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1add38938022f35f93f6eee4ef621c4be8"/>virtual void <emphasis role="strong">placeBeamPipe</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ae173a127cbc844a6e6f5a1f8288ad188"/>virtual void <emphasis role="strong">placeVacuum</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afe5a1e8bcb5bc3ee3a3da57ad9fde7dd"/>virtual void <emphasis role="strong">placeWindow</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a22b4e1d830c3bbd283c4a0df429836ac"/>void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afd3def11a76dc7ea6fda49267da703fd"/><emphasis role="strong">TMXAbstractBeamPipe</emphasis> (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> *, const std::string &amp;)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1abff42262ed0a40e4a3bc9dbbe1be9c93"/>const std::vector&lt; G4VSolid * &gt; * <emphasis role="strong">getSolids</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a44a0a058f26bd32879a400db8fe3beff"/>const std::vector&lt; G4ThreeVector * &gt; * <emphasis role="strong">getTranslations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a7fa7a39750cd32fd07a12f46b76ab6fc"/>const std::vector&lt; G4RotationMatrix * &gt; * <emphasis role="strong">getRotations</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a1da75a3c18bc20e90653b6ee7dee73e7"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getVacuumLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a0fc738c86f7c9473e0b7d0966c0417ad"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getTubeLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac0ffdaeb0df00fe372857b75820dae46"/>std::vector&lt; G4LogicalVolume * &gt; <emphasis role="strong">getWindowLogicalVolumes</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ab077f7c65724737316a866ddcf955def"/>G4LogicalVolume * <emphasis role="strong">getMasterVolume</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a879678d5e84c8dbca6179e58ea55df71"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getVacuumMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af28b2938822baadc7ccccc4144184219"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getTubeMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a64e9c259666ce9cacc456bc05d110233"/><link linkend="_class_t_m_x_material">TMXMaterial</link> * <emphasis role="strong">getWindowMaterial</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aeeb0fd3a00eebb6a94e08e88af548c37"/>std::string <emphasis role="strong">getAssemblyName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a420cc2b58d4bd292953436f4bd365ea8"/>virtual void <emphasis role="strong">createMaterial</emphasis> (double Kelvin_temperature=273.15)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a46ec422ea87ea7575149a0ac64a35424"/>virtual void <emphasis role="strong">createGeometry</emphasis> ()=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afbc05bc529f4d40b96da30cfd55292dd"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (int Z, double A)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac90ae739b5e4069df7093855b5302bc4"/>virtual G4Element * <emphasis role="strong">ElementExists</emphasis> (std::string name)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a9fe6e1076fa8101b5c99005090ec727f"/>size_t <emphasis role="strong">getFirstOccurence</emphasis> (std::vector&lt; std::string &gt; *nameVector)</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aa4a8dda2d02761afa632359688c92d39"/>virtual void <emphasis role="strong">placeGeometry</emphasis> (bool, G4ThreeVector *, G4ThreeVector *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1add38938022f35f93f6eee4ef621c4be8"/>virtual void <emphasis role="strong">placeBeamPipe</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ae173a127cbc844a6e6f5a1f8288ad188"/>virtual void <emphasis role="strong">placeVacuum</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afe5a1e8bcb5bc3ee3a3da57ad9fde7dd"/>virtual void <emphasis role="strong">placeWindow</emphasis> (bool, G4ThreeVector *, G4RotationMatrix *, G4LogicalVolume *)=0</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a22b4e1d830c3bbd283c4a0df429836ac"/>void <emphasis role="strong">VisualisationConfig</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Public Member Functions    </title>
        <itemizedlist>
            <listitem><para>static const std::vector&lt; std::string &gt; * <link linkend="_class_t_m_x_abstract_beam_pipe_1a0cf9b64dc3a8f64b08c5a26596e181d9">getVacuumName</link> ()</para>
</listitem>
            <listitem><para>static const std::vector&lt; std::string &gt; * <link linkend="_class_t_m_x_abstract_beam_pipe_1a2149de864f5db8269a16b94907a376a3">getTubeName</link> ()</para>
</listitem>
            <listitem><para>static const std::vector&lt; std::string &gt; * <link linkend="_class_t_m_x_abstract_beam_pipe_1a3e59d2e941837ac06931b477c608402a">getWindowName</link> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ace830c34cd8c3dbbfc68fdb1f1c4656f"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getVacuumName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a68bb0ba4883f6529a1431a117057d192"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTubeName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a07cbd94f9299e89261ab4bc59d39097c"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getWindowName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ace830c34cd8c3dbbfc68fdb1f1c4656f"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getVacuumName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a68bb0ba4883f6529a1431a117057d192"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTubeName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a07cbd94f9299e89261ab4bc59d39097c"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getWindowName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ace830c34cd8c3dbbfc68fdb1f1c4656f"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getVacuumName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a68bb0ba4883f6529a1431a117057d192"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTubeName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a07cbd94f9299e89261ab4bc59d39097c"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getWindowName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ace830c34cd8c3dbbfc68fdb1f1c4656f"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getVacuumName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a68bb0ba4883f6529a1431a117057d192"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getTubeName</emphasis> ()</para>
</listitem>
            <listitem><para><anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a07cbd94f9299e89261ab4bc59d39097c"/>static const std::vector&lt; std::string &gt; * <emphasis role="strong">getWindowName</emphasis> ()</para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>const std::string <link linkend="_class_t_m_x_abstract_beam_pipe_1a509d56e7f2c409485da6f59f2ed71096">m_assemblyName</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * <link linkend="_class_t_m_x_abstract_beam_pipe_1a450be6035ab76332eb484e3458464586">m_p</link></para>
</listitem>
            <listitem><para>int <link linkend="_class_t_m_x_abstract_beam_pipe_1ac17f98f5a67de512666c747aaa152716">m_copy_number</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4VSolid * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1a8083532f2f88052850a67c91d35ac764">m_Solids</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4ThreeVector * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1a82a97119fef2f5e07894c978fec55ba4">m_translation</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4RotationMatrix * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1a9f926da88e56da055330ab4e9a45533c">m_rotation</link></para>
</listitem>
            <listitem><para>G4VSolid * <link linkend="_class_t_m_x_abstract_beam_pipe_1ad7443b54700d245c9070b6a2f0541b22">m_vacuumSolidVolume</link></para>
</listitem>
            <listitem><para>G4VSolid * <link linkend="_class_t_m_x_abstract_beam_pipe_1a89e45bf8a05cfbe5dd82856fb7632ef2">m_tubeSolidVolume</link></para>
</listitem>
            <listitem><para>G4VSolid * <link linkend="_class_t_m_x_abstract_beam_pipe_1a8337bcf7f8839b9e2b1d9ba62dc99f7b">m_windowSolidVolume</link></para>
</listitem>
            <listitem><para>G4LogicalVolume * <link linkend="_class_t_m_x_abstract_beam_pipe_1af9cf75e9a1669afe94cd63b5ad8147e4">m_masterVolume</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1ad2b7d082eb9273a9e30c6607e91c9883">m_vacuumLogicalVolumes</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1ae02d6e1c3bf22c9d085c0346fcdb37a0">m_tubeLogicalVolumes</link></para>
</listitem>
            <listitem><para>std::vector&lt; G4LogicalVolume * &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1a95f9bf74faf67b86ee7bceb9d85fd311">m_windowLogicalVolumes</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_beam_pipe_1a033f4ad566960a9d023f97665188be6f">m_vacuumMaterial</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_beam_pipe_1a9e16f9c078d31789002fd011035c296d">m_tubeMaterial</link></para>
</listitem>
            <listitem><para><link linkend="_class_t_m_x_material">TMXMaterial</link> * <link linkend="_class_t_m_x_abstract_beam_pipe_1a31b889d6f83424b67a686601e6eccc1d">m_windowMaterial</link></para>
</listitem>
            <listitem><para>G4double <link linkend="_class_t_m_x_abstract_beam_pipe_1a88f14c58ff8879f62d0197e6dc5a23f9">m_beamPipeLength</link></para>
</listitem>
            <listitem><para>G4double <link linkend="_class_t_m_x_abstract_beam_pipe_1a222a69e0248bb65322f8f9ba026f0641">m_WindowThickness</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Static Protected Attributes    </title>
        <itemizedlist>
            <listitem><para>static std::vector&lt; std::string &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1af91e397ab6389c3f124ac6788303993f">m_vacuumName</link></para>
</listitem>
            <listitem><para>static std::vector&lt; std::string &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1a5b69875243c792c7c2a58ec272c10442">m_tubeName</link></para>
</listitem>
            <listitem><para>static std::vector&lt; std::string &gt; <link linkend="_class_t_m_x_abstract_beam_pipe_1acaae41bbd4c3da75c95d01dc2e97f4cc">m_windowName</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Detailed Description</title>
<para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00045">45</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<section>
<title>Constructor &amp; Destructor Documentation</title>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1afd3def11a76dc7ea6fda49267da703fd"/><section>
    <title>TMXAbstractBeamPipe()</title>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<para><computeroutput>TMXAbstractBeamPipe::TMXAbstractBeamPipe (<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * parameters, const std::string &amp; BeamPipeAssemblyName)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00047">47</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a4cf6aaecee99d875ad5112d8e47719af"/><section>
    <title>~TMXAbstractBeamPipe()</title>
<indexterm><primary>~TMXAbstractBeamPipe</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>~TMXAbstractBeamPipe</secondary></indexterm>
<para><computeroutput>TMXAbstractBeamPipe::~TMXAbstractBeamPipe ( )<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00059">59</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
</section>
<section>
<title>Member Function Documentation</title>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af890f0d12532e307eedd82e6300c857a"/><section>
    <title>createMaterial()</title>
<indexterm><primary>createMaterial</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>createMaterial</secondary></indexterm>
<para><computeroutput>void TMXAbstractBeamPipe::createMaterial (double Kelvin_temperature = <computeroutput>273.15</computeroutput>
)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00094">94</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a827fc7bbb15c840df8e46ea4214e3ab5"/><section>
    <title>ElementExists()<computeroutput>[1/2]</computeroutput></title>
<indexterm><primary>ElementExists</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>ElementExists</secondary></indexterm>
<para><computeroutput>G4Element * TMXAbstractBeamPipe::ElementExists (int Z, double A)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00129">129</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a5152c62af01a5984bc5b32c95b53d6bb"/><section>
    <title>ElementExists()<computeroutput>[2/2]</computeroutput></title>
<indexterm><primary>ElementExists</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>ElementExists</secondary></indexterm>
<para><computeroutput>G4Element * TMXAbstractBeamPipe::ElementExists (std::string name)<computeroutput>[virtual]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00140">140</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1aeeb0fd3a00eebb6a94e08e88af548c37"/><section>
    <title>getAssemblyName()</title>
<indexterm><primary>getAssemblyName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getAssemblyName</secondary></indexterm>
<para><computeroutput>std::string TMXAbstractBeamPipe::getAssemblyName ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00283">283</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a9fe6e1076fa8101b5c99005090ec727f"/><section>
    <title>getFirstOccurence()</title>
<indexterm><primary>getFirstOccurence</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getFirstOccurence</secondary></indexterm>
<para><computeroutput>size_t TMXAbstractBeamPipe::getFirstOccurence (std::vector&lt; std::string &gt; * nameVector)</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00151">151</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ab077f7c65724737316a866ddcf955def"/><section>
    <title>getMasterVolume()</title>
<indexterm><primary>getMasterVolume</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getMasterVolume</secondary></indexterm>
<para><computeroutput>G4LogicalVolume * TMXAbstractBeamPipe::getMasterVolume ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00248">248</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a7fa7a39750cd32fd07a12f46b76ab6fc"/><section>
    <title>getRotations()</title>
<indexterm><primary>getRotations</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getRotations</secondary></indexterm>
<para><computeroutput>const std::vector&lt; G4RotationMatrix * &gt; * TMXAbstractBeamPipe::getRotations ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00243">243</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1abff42262ed0a40e4a3bc9dbbe1be9c93"/><section>
    <title>getSolids()</title>
<indexterm><primary>getSolids</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getSolids</secondary></indexterm>
<para><computeroutput>const std::vector&lt; G4VSolid * &gt; * TMXAbstractBeamPipe::getSolids ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00233">233</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a44a0a058f26bd32879a400db8fe3beff"/><section>
    <title>getTranslations()</title>
<indexterm><primary>getTranslations</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getTranslations</secondary></indexterm>
<para><computeroutput>const std::vector&lt; G4ThreeVector * &gt; * TMXAbstractBeamPipe::getTranslations ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00238">238</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a0fc738c86f7c9473e0b7d0966c0417ad"/><section>
    <title>getTubeLogicalVolumes()</title>
<indexterm><primary>getTubeLogicalVolumes</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getTubeLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractBeamPipe::getTubeLogicalVolumes ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00223">223</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af28b2938822baadc7ccccc4144184219"/><section>
    <title>getTubeMaterial()</title>
<indexterm><primary>getTubeMaterial</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getTubeMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractBeamPipe::getTubeMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00273">273</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a2149de864f5db8269a16b94907a376a3"/><section>
    <title>getTubeName()</title>
<indexterm><primary>getTubeName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getTubeName</secondary></indexterm>
<para><computeroutput>const std::vector&lt; std::string &gt; * TMXAbstractBeamPipe::getTubeName ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00291">291</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a1da75a3c18bc20e90653b6ee7dee73e7"/><section>
    <title>getVacuumLogicalVolumes()</title>
<indexterm><primary>getVacuumLogicalVolumes</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getVacuumLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractBeamPipe::getVacuumLogicalVolumes ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00218">218</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a879678d5e84c8dbca6179e58ea55df71"/><section>
    <title>getVacuumMaterial()</title>
<indexterm><primary>getVacuumMaterial</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getVacuumMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractBeamPipe::getVacuumMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00268">268</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a0cf9b64dc3a8f64b08c5a26596e181d9"/><section>
    <title>getVacuumName()</title>
<indexterm><primary>getVacuumName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getVacuumName</secondary></indexterm>
<para><computeroutput>const std::vector&lt; std::string &gt; * TMXAbstractBeamPipe::getVacuumName ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00287">287</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac0ffdaeb0df00fe372857b75820dae46"/><section>
    <title>getWindowLogicalVolumes()</title>
<indexterm><primary>getWindowLogicalVolumes</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getWindowLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractBeamPipe::getWindowLogicalVolumes ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00228">228</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a64e9c259666ce9cacc456bc05d110233"/><section>
    <title>getWindowMaterial()</title>
<indexterm><primary>getWindowMaterial</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getWindowMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractBeamPipe::getWindowMaterial ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00278">278</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a3e59d2e941837ac06931b477c608402a"/><section>
    <title>getWindowName()</title>
<indexterm><primary>getWindowName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>getWindowName</secondary></indexterm>
<para><computeroutput>const std::vector&lt; std::string &gt; * TMXAbstractBeamPipe::getWindowName ( )<computeroutput>[static]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00295">295</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a22b4e1d830c3bbd283c4a0df429836ac"/><section>
    <title>VisualisationConfig()</title>
<indexterm><primary>VisualisationConfig</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>VisualisationConfig</secondary></indexterm>
<para><computeroutput>void TMXAbstractBeamPipe::VisualisationConfig ( )</computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source_1l00160">160</link> of file <link linkend="__benchmark-1_2src_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8cc_source">TMXAbstractBeamPipe.cc</link>.</para>
</section>
</section>
<section>
<title>Member Data Documentation</title>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a509d56e7f2c409485da6f59f2ed71096"/><section>
    <title>m_assemblyName</title>
<indexterm><primary>m_assemblyName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_assemblyName</secondary></indexterm>
<para><computeroutput>const std::string TMXAbstractBeamPipe::m_assemblyName<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00100">100</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a88f14c58ff8879f62d0197e6dc5a23f9"/><section>
    <title>m_beamPipeLength</title>
<indexterm><primary>m_beamPipeLength</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_beamPipeLength</secondary></indexterm>
<para><computeroutput>G4double TMXAbstractBeamPipe::m_beamPipeLength<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00137">137</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ac17f98f5a67de512666c747aaa152716"/><section>
    <title>m_copy_number</title>
<indexterm><primary>m_copy_number</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_copy_number</secondary></indexterm>
<para><computeroutput>int TMXAbstractBeamPipe::m_copy_number<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00105">105</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af9cf75e9a1669afe94cd63b5ad8147e4"/><section>
    <title>m_masterVolume</title>
<indexterm><primary>m_masterVolume</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_masterVolume</secondary></indexterm>
<para><computeroutput>G4LogicalVolume * TMXAbstractBeamPipe::m_masterVolume<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00117">117</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a450be6035ab76332eb484e3458464586"/><section>
    <title>m_p</title>
<indexterm><primary>m_p</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_p</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link> * TMXAbstractBeamPipe::m_p<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00104">104</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a9f926da88e56da055330ab4e9a45533c"/><section>
    <title>m_rotation</title>
<indexterm><primary>m_rotation</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_rotation</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4RotationMatrix * &gt; TMXAbstractBeamPipe::m_rotation<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00112">112</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a8083532f2f88052850a67c91d35ac764"/><section>
    <title>m_Solids</title>
<indexterm><primary>m_Solids</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_Solids</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4VSolid * &gt; TMXAbstractBeamPipe::m_Solids<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00110">110</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a82a97119fef2f5e07894c978fec55ba4"/><section>
    <title>m_translation</title>
<indexterm><primary>m_translation</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_translation</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4ThreeVector * &gt; TMXAbstractBeamPipe::m_translation<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00111">111</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ae02d6e1c3bf22c9d085c0346fcdb37a0"/><section>
    <title>m_tubeLogicalVolumes</title>
<indexterm><primary>m_tubeLogicalVolumes</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_tubeLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractBeamPipe::m_tubeLogicalVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00124">124</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a9e16f9c078d31789002fd011035c296d"/><section>
    <title>m_tubeMaterial</title>
<indexterm><primary>m_tubeMaterial</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_tubeMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractBeamPipe::m_tubeMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00134">134</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a5b69875243c792c7c2a58ec272c10442"/><section>
    <title>m_tubeName</title>
<indexterm><primary>m_tubeName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_tubeName</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::string &gt; TMXAbstractBeamPipe::m_tubeName<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00102">102</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a89e45bf8a05cfbe5dd82856fb7632ef2"/><section>
    <title>m_tubeSolidVolume</title>
<indexterm><primary>m_tubeSolidVolume</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_tubeSolidVolume</secondary></indexterm>
<para><computeroutput>G4VSolid * TMXAbstractBeamPipe::m_tubeSolidVolume<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00115">115</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ad2b7d082eb9273a9e30c6607e91c9883"/><section>
    <title>m_vacuumLogicalVolumes</title>
<indexterm><primary>m_vacuumLogicalVolumes</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_vacuumLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractBeamPipe::m_vacuumLogicalVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00123">123</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a033f4ad566960a9d023f97665188be6f"/><section>
    <title>m_vacuumMaterial</title>
<indexterm><primary>m_vacuumMaterial</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_vacuumMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractBeamPipe::m_vacuumMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00133">133</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1af91e397ab6389c3f124ac6788303993f"/><section>
    <title>m_vacuumName</title>
<indexterm><primary>m_vacuumName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_vacuumName</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::string &gt; TMXAbstractBeamPipe::m_vacuumName<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00101">101</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1ad7443b54700d245c9070b6a2f0541b22"/><section>
    <title>m_vacuumSolidVolume</title>
<indexterm><primary>m_vacuumSolidVolume</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_vacuumSolidVolume</secondary></indexterm>
<para><computeroutput>G4VSolid * TMXAbstractBeamPipe::m_vacuumSolidVolume<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00114">114</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a95f9bf74faf67b86ee7bceb9d85fd311"/><section>
    <title>m_windowLogicalVolumes</title>
<indexterm><primary>m_windowLogicalVolumes</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_windowLogicalVolumes</secondary></indexterm>
<para><computeroutput>std::vector&lt; G4LogicalVolume * &gt; TMXAbstractBeamPipe::m_windowLogicalVolumes<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00125">125</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a31b889d6f83424b67a686601e6eccc1d"/><section>
    <title>m_windowMaterial</title>
<indexterm><primary>m_windowMaterial</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_windowMaterial</secondary></indexterm>
<para><computeroutput><link linkend="_class_t_m_x_material">TMXMaterial</link> * TMXAbstractBeamPipe::m_windowMaterial<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00135">135</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1acaae41bbd4c3da75c95d01dc2e97f4cc"/><section>
    <title>m_windowName</title>
<indexterm><primary>m_windowName</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_windowName</secondary></indexterm>
<para><computeroutput>std::vector&lt; std::string &gt; TMXAbstractBeamPipe::m_windowName<computeroutput>[static]</computeroutput>, <computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00103">103</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a8337bcf7f8839b9e2b1d9ba62dc99f7b"/><section>
    <title>m_windowSolidVolume</title>
<indexterm><primary>m_windowSolidVolume</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_windowSolidVolume</secondary></indexterm>
<para><computeroutput>G4VSolid * TMXAbstractBeamPipe::m_windowSolidVolume<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00116">116</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<anchor xml:id="_class_t_m_x_abstract_beam_pipe_1a222a69e0248bb65322f8f9ba026f0641"/><section>
    <title>m_WindowThickness</title>
<indexterm><primary>m_WindowThickness</primary><secondary>TMXAbstractBeamPipe</secondary></indexterm>
<indexterm><primary>TMXAbstractBeamPipe</primary><secondary>m_WindowThickness</secondary></indexterm>
<para><computeroutput>G4double TMXAbstractBeamPipe::m_WindowThickness<computeroutput>[protected]</computeroutput></computeroutput></para><para>
Definition at line <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source_1l00138">138</link> of file <link linkend="__benchmark-1_2include_2_n_source_2_beam_pipe_2_t_m_x_abstract_beam_pipe_8hh_source">TMXAbstractBeamPipe.hh</link>.</para>
</section>
<para>
The documentation for this class was generated from the following files:</para>
/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/include/NSource/BeamPipe/TMXAbstractBeamPipe.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/include/NSource/BeamPipe/TMXAbstractBeamPipe.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/include/NSource/BeamPipe/TMXAbstractBeamPipe.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/include/NSource/BeamPipe/TMXAbstractBeamPipe.hh/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/include/NSource/BeamPipe/TMXAbstractBeamPipe.hh/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-1/src/NSource/BeamPipe/TMXAbstractBeamPipe.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/src/NSource/BeamPipe/TMXAbstractBeamPipe.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-3/src/NSource/BeamPipe/TMXAbstractBeamPipe.cc/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-4/src/NSource/BeamPipe/TMXAbstractBeamPipe.cc/Users/Transmutex/Simulation/ADS_SimulationCode/G4-NeutronTransport/src/NSource/BeamPipe/TMXAbstractBeamPipe.cc</section>
</section>
