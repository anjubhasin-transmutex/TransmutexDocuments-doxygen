<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source" xml:lang="en-US">
<title>TMXMCCubicVolume.hh</title>
<indexterm><primary>/Users/Transmutex/Simulation/ADS_SimulationCode/Benchmark-2/include/TMXMCCubicVolume.hh</primary></indexterm>
<programlisting linenumbering="unnumbered"><anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00001"/>00001 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00002"/>00002 <emphasis role="comment">//&#32;\brief&#32;Implementation&#32;of&#32;the&#32;TMXMCCubicVolume&#32;class</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00003"/>00003 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00004"/>00004 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00006"/>00006 <emphasis role="comment"></emphasis><emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00007"/>00007 <emphasis role="comment">//&#32;TMXMCCubicVolume</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00008"/>00008 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00009"/>00009 <emphasis role="comment">//&#32;Thomas&#32;Guilbaud,&#32;Transmutex,&#32;22/04/2021</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00010"/>00010 <emphasis role="comment">//</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00012"/>00012 <emphasis role="comment"></emphasis><emphasis role="comment">//&#32;Class&#32;to&#32;compute&#32;the&#32;cubic&#32;volumes&#32;of&#32;LV&#32;and&#32;materials&#32;using&#32;Monte&#32;Carlo&#32;method</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00014"/>00014 <emphasis role="comment"></emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00015"/>00015 <emphasis role="comment">/********************************INCLUDES******************************/</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00016"/>00016 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00017"/>00017 <emphasis role="comment">//&#32;TMX&#32;Classes</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00018"/>00018 <emphasis role="preprocessor">#include&#32;&quot;TMXInputParameters.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00019"/>00019 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00020"/>00020 <emphasis role="comment">//&#32;Geant4&#32;Classes</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00021"/>00021 <emphasis role="preprocessor">#include&#32;&quot;G4SystemOfUnits.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00022"/>00022 <emphasis role="preprocessor">#include&#32;&quot;G4ProcessManager.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00023"/>00023 <emphasis role="preprocessor">#include&#32;&quot;G4FPYSamplingOps.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00024"/>00024 <emphasis role="preprocessor">#include&#32;&quot;G4MTRunManager.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00025"/>00025 <emphasis role="preprocessor">#include&#32;&quot;G4LogicalVolumeStore.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00026"/>00026 <emphasis role="preprocessor">#include&#32;&quot;G4PhysicalVolumeStore.hh&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00027"/>00027 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00028"/>00028 <emphasis role="comment">//&#32;C++&#32;libraries</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00029"/>00029 <emphasis role="preprocessor">#include&#32;&lt;vector&gt;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00030"/>00030 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00031"/>00031 <emphasis role="preprocessor">#include&#32;&lt;math.h&gt;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00032"/>00032 <emphasis role="preprocessor">#include&#32;&lt;iomanip&gt;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00033"/>00033 <emphasis role="preprocessor">#include&#32;&quot;unordered_map&quot;</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00034"/>00034 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00035"/>00035 <emphasis role="comment">/**********************************************************************/</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00036"/>00036 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00037"/>00037 <emphasis role="preprocessor">#ifndef&#32;TMXMCCubicVolume_H</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00038"/>00038 <emphasis role="preprocessor">#define&#32;TMXMCCubicVolume_H&#32;1</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00039"/>00039 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00040"/>00040 <emphasis role="keyword">using&#32;namespace&#32;</emphasis>std;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00041"/>00041 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00042"/>00042 <emphasis role="keyword">class&#32;</emphasis><link linkend="_class_t_m_x_m_c_cubic_volume">TMXMCCubicVolume</link>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00043"/>00043 {
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00044"/>00044 &#32;&#32;&#32;&#32;<emphasis role="keyword">public</emphasis>:
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_m_c_cubic_volume">TMXMCCubicVolume</link>(<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>*&#32;p);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_m_c_cubic_volume">~TMXMCCubicVolume</link>();
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00047"/>00047 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setErrorLimit(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">double</emphasis>&#32;errorLimit);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setNavigator(G4Navigator&#32;*navigator);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setNumberOfPoints(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPoints);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setSlicedLogicalVolume(std::string&#32;logicalVolumeName);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00052"/>00052 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;setSliceBoundariesZ(G4double&#32;minZ,&#32;G4double&#32;maxZ,&#32;<emphasis role="keywordtype">int</emphasis>&#32;nbinsZ);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00053"/>00053 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;buildMapLogicalVolume();
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;buildMapMaterial();
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00056"/>00056 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;getError(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPointsInsideVolume)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;getMaximumError()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;getMaximumErrorLV()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;getMaximumErrorMat()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;getMaximumErrorSlicedLV()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00062"/>00062 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00063"/>00063 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;run();
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00064"/>00064 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;runMCVolumeEstimator();
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00065"/>00065 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;runSlicedLogicalVolumeMC();
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00066"/>00066 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;calculationMC(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPoints,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfZ);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;calculationMCSlicedLV(<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">long</emphasis>&#32;nbPoints,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY,&#32;G4String&#32;LVname);
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00068"/>00068 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;printLogicalVolumeMap()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00069"/>00069 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;printMaterialMap()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00070"/>00070 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;printSlicedVolume()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00071"/>00071 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00072"/>00072 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00073"/>00073 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4ThreeVector&#32;getRandomPosition(<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfZ)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00074"/>00074 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4ThreeVector&#32;getRandomPosition(<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfX,&#32;<emphasis role="keyword">const</emphasis>&#32;G4double&#32;halfY)&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00075"/>00075 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isLVorMatAboveErrorLimit()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00076"/>00076 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;isSlicedLVAboveErrorLimit()&#32;<emphasis role="keyword">const</emphasis>;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00077"/>00077 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keyword">private</emphasis>:
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_t_m_x_input_parameters">TMXInputParameters</link>*&#32;m_p;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00080"/>00080 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;fErrorLimit;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00081"/>00081 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;fCubicVolume_world;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00082"/>00082 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4Navigator&#32;*fNavigator;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00083"/>00083 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;fNbPoints;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00084"/>00084 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">long</emphasis>&#32;fNbPointsTotal;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00085"/>00085 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">bool</emphasis>&#32;fIsSliceMode;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00086"/>00086 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00087"/>00087 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;long&gt;&#32;fmap_LV_points;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="comment">//&#32;#&#32;of&#32;points&#32;in&#32;every&#32;logical&#32;volumes</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00088"/>00088 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::unordered_map&lt;std::string,&#32;long&gt;&#32;fmap_Material_points;&#32;<emphasis role="comment">//&#32;#&#32;of&#32;points&#32;in&#32;every&#32;material</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00089"/>00089 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00090"/>00090 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4String&#32;fLogicalVolumeName;&#32;<emphasis role="comment">//&#32;Logical&#32;Volume&#32;to&#32;be&#32;sliced</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00091"/>00091 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;fMinZ;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00092"/>00092 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;G4double&#32;fMaxZ;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00093"/>00093 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;fNbinsZ;
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00094"/>00094 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;std::vector&lt;long&gt;&#32;fSlicedVolumes;&#32;<emphasis role="comment">//&#32;from&#32;minZ&#32;to&#32;maxZ</emphasis>
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00095"/>00095 };
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00096"/>00096 
<anchor xml:id="__benchmark-2_2include_2_t_m_x_m_c_cubic_volume_8hh_source_1l00097"/>00097 <emphasis role="preprocessor">#endif&#32;</emphasis><emphasis role="comment">//&#32;TMXMCCubicVolume_H</emphasis>
</programlisting></section>
